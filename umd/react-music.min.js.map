{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-music.min.js","webpack:///webpack/bootstrap f89acc090e3d0e77fa16","webpack:///./src/index.js","webpack:///./src/components/analyser.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./src/components/bitcrusher.js","webpack:///./~/tunajs/tuna.js","webpack:///./src/components/bus.js","webpack:///./src/components/chorus.js","webpack:///./src/components/compressor.js","webpack:///./src/components/delay.js","webpack:///./src/components/filter.js","webpack:///./src/components/gain.js","webpack:///./src/components/lfo.js","webpack:///./src/components/monosynth.js","webpack:///./~/note-parser/index.js","webpack:///./~/audio-contour/index.js","webpack:///./~/voltage-source-node/index.js","webpack:///./~/uuid/uuid.js","webpack:///./~/uuid/rng-browser.js","webpack:///./src/components/moog-filter.js","webpack:///./src/components/overdrive.js","webpack:///./src/components/phaser.js","webpack:///./src/components/ping-pong.js","webpack:///./src/components/reverb.js","webpack:///./src/components/sequencer.js","webpack:///./src/components/sampler.js","webpack:///./src/utils/buffer-loader.js","webpack:///./src/components/song.js","webpack:///./src/utils/scheduler.js","webpack:///./src/components/synth.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","Synth","Song","Sampler","Sequencer","Reverb","PingPong","Phaser","Overdrive","Monosynth","MoogFilter","LFO","Gain","Filter","Delay","Compressor","Chorus","Bitcrusher","Bus","Analyser","undefined","_analyser","_analyser2","_bitcrusher","_bitcrusher2","_bus","_bus2","_chorus","_chorus2","_compressor","_compressor2","_delay","_delay2","_filter","_filter2","_gain","_gain2","_lfo","_lfo2","_monosynth","_monosynth2","_moogFilter","_moogFilter2","_overdrive","_overdrive2","_phaser","_phaser2","_pingPong","_pingPong2","_reverb","_reverb2","_sequencer","_sequencer2","_sampler","_sampler2","_song","_song2","_synth","_synth2","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_Component","context","_this","getPrototypeOf","visualization","audioContext","createScriptProcessor","connect","destination","connectNode","createAnalyser","applyProps","bind","onaudioprocess","onAudioProcess","nextProps","disconnect","prop","createElement","children","Component","propTypes","PropTypes","node","fftSize","number","func","smoothingTimeConstant","defaultProps","contextTypes","object","childContextTypes","_tunajs","_tunajs2","tuna","bits","normfreq","bufferSize","window","definition","Tuna","AudioContext","webkitAudioContext","console","log","Error","connectify","userContext","userInstance","shimConnect","Super","isPrototypeOf","input","oconnect","apply","__connectified__","gain","createGain","proto","dbToWAVolume","db","Math","max","round","pow","fmod","x","y","tmp","tmp2","pY","l","l2","toExponential","match","parseInt","toFixed","parseFloat","sign","abs","tanh","n","exp","initValue","userVal","defaultVal","pipe","param","val","activate","doActivate","activateNode","activateCallback","output","bypass","get","_bypass","set","_lastBypassValue","connectInOrder","nodeArray","error","getDefaults","result","defaults","automate","property","duration","startTime","method","start","currentTime","dur","_is","automatable","cancelScheduledValues","setValueAtTime","name","FLOAT","BOOLEAN","STRING","INT","properties","processor","step","phaser","last","e","inputBuffer","getChannelData","outputBuffer","floor","min","type","Cabinet","convolver","newConvolver","impulsePath","makeupNode","makeupGain","Convolver","impulse","dryLevel","wetLevel","attenuator","splitter","createChannelSplitter","delayL","createDelay","delayR","feedbackGainNodeLR","feedbackGainNodeRL","merger","createChannelMerger","lfoL","delayTime","callback","lfoR","feedback","rate","delay","depth","phase","PI","offset","_depth","oscillation","_feedback","_rate","frequency","compNode","createDynamicsCompressor","automakeup","threshold","release","attack","ratio","knee","computeMakeup","magicCoefficient","_automakeup","createConvolver","dry","filterLow","createBiquadFilter","filterHigh","wet","highCut","buffer","lowCut","level","xhr","XMLHttpRequest","open","responseType","onreadystatechange","readyState","status","decodeAudioData","response","send","filter","feedbackNode","cutoff","Q","resonance","filterType","in1","in2","in3","in4","out1","out2","out3","out4","f","fb","inputFactor","inputDrive","waveshaper","createWaveShaper","outputDrive","ws_table","Float32Array","k_nSamples","drive","outputGain","curveAmount","algorithmIndex","scaled","_drive","_curveAmount","_algorithmIndex","waveshaperAlgorithms","curve","_outputGain","amount","n_samples","k","a","abx","filtersL","filtersR","feedbackGainNodeL","feedbackGainNodeR","filteredSignal","stage","baseModulationFrequency","stereoPhase","filters","_baseModulationFrequency","_stereoPhase","newPhase","_phase","PingPongDelay","stereoToMonoMix","feedbackLevel","delayLeft","delayRight","delayTimeLeft","delayTimeRight","_delayTimeLeft","_delayTimeRight","Tremolo","amplitudeL","amplitudeR","intensity","_intensity","WahWah","envelopeFollower","EnvelopeFollower","sweep","filterBp","filterPeaking","init","automode","enableAutoMode","sensitivity","baseFrequency","excursionOctaves","_automode","filterFreqTimeout","setFilterFreq","_baseFrequency","_excursionFrequency","_sweep","clearTimeout","setTimeout","_sensitivity","sampleRate","_excursionOctaves","_resonance","jsNode","buffersize","attackTime","releaseTime","_envelope","envelope","_attackTime","_attackC","_releaseTime","_releaseC","_callback","_target","activated","returnCompute","event","compute","current","chan","rms","count","channels","numberOfChannels","sqrt","_frequency","_phaseInc","_offset","_oscillation","that","sin","toString","master","getMaster","busses","string","isRequired","_typeof","Symbol","iterator","volumeGain","osc","createOscillator","stop","displayName","_noteParser","_noteParser2","_audioContour","_audioContour2","_uuid","_uuid2","getSteps","playStep","_this2","v1","instruments","amplitudeGain","forEach","bus","playbackTime","_this3","totalBars","getMaxBars","loopCount","bars","_loop","barOffset","barInterval","stepInterval","resolution","steps","index","time","glide","lastTime","lastDuration","scheduler","insert","_arguments","Array","slice","note","transposed","transpose","env","decay","sustain","setTargetAtTime","freq","_e$args","args","array","shape","tempo","fillStr","s","num","join","isNum","isStr","isDef","midiToFreq","midi","tuning","regex","REGEX","parse","str","isTonic","exec","letter","toUpperCase","acc","replace","pc","charCodeAt","alt","pos","SEMITONES","chroma","oct","tonicOf","build","o","LETTERS","charAt","parser","FNS","src","rampFn","ramp","Contour","ac","options","opts","params","isL","tail","head","cv","Voltage","onstart","l1","t1","t2","l3","t3","isFinite","endsAt","t4","onended","NUMS","DEFAULTS","Infinity","dest","createBuffer","data","createBufferSource","loop","buf","ii","toLowerCase","_hexToByte","unparse","bth","_byteToHex","b","clockseq","_clockseq","msecs","Date","getTime","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","_nodeId","v4","rnds","random","rng","_rng","substr","_seedBytes","uuid","global","crypto","getRandomValues","_rnds8","Uint8Array","_rnds","r","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","next","done","push","err","isArray","_bufferLoader","bufferLoaded","buffers","bufferLoader","BufferLoader","sample","load","stepValue","detune","nextTick","_ref","_ref2","urlList","onload","bufferList","loadCount","loadBuffer","url","request","onerror","_toConsumableArray","arr2","from","_scheduler","_scheduler2","state","buffersLoaded","keys","setState","prevProps","prevState","playing","map","_this4","maxBars","bool","Scheduler","interval","aheadTime","timerID","scheduleID","schedules","t0","process","setInterval","reset","clearInterval","splice","imax","shift","finish","notes"],"mappings":"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","file":"react-music.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactMusic\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactMusic\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactMusic\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactMusic\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Synth = exports.Song = exports.Sampler = exports.Sequencer = exports.Reverb = exports.PingPong = exports.Phaser = exports.Overdrive = exports.Monosynth = exports.MoogFilter = exports.LFO = exports.Gain = exports.Filter = exports.Delay = exports.Compressor = exports.Chorus = exports.Bitcrusher = exports.Bus = exports.Analyser = undefined;\n\t\n\tvar _analyser = __webpack_require__(1);\n\t\n\tvar _analyser2 = _interopRequireDefault(_analyser);\n\t\n\tvar _bitcrusher = __webpack_require__(3);\n\t\n\tvar _bitcrusher2 = _interopRequireDefault(_bitcrusher);\n\t\n\tvar _bus = __webpack_require__(5);\n\t\n\tvar _bus2 = _interopRequireDefault(_bus);\n\t\n\tvar _chorus = __webpack_require__(6);\n\t\n\tvar _chorus2 = _interopRequireDefault(_chorus);\n\t\n\tvar _compressor = __webpack_require__(7);\n\t\n\tvar _compressor2 = _interopRequireDefault(_compressor);\n\t\n\tvar _delay = __webpack_require__(8);\n\t\n\tvar _delay2 = _interopRequireDefault(_delay);\n\t\n\tvar _filter = __webpack_require__(9);\n\t\n\tvar _filter2 = _interopRequireDefault(_filter);\n\t\n\tvar _gain = __webpack_require__(10);\n\t\n\tvar _gain2 = _interopRequireDefault(_gain);\n\t\n\tvar _lfo = __webpack_require__(11);\n\t\n\tvar _lfo2 = _interopRequireDefault(_lfo);\n\t\n\tvar _monosynth = __webpack_require__(12);\n\t\n\tvar _monosynth2 = _interopRequireDefault(_monosynth);\n\t\n\tvar _moogFilter = __webpack_require__(18);\n\t\n\tvar _moogFilter2 = _interopRequireDefault(_moogFilter);\n\t\n\tvar _overdrive = __webpack_require__(19);\n\t\n\tvar _overdrive2 = _interopRequireDefault(_overdrive);\n\t\n\tvar _phaser = __webpack_require__(20);\n\t\n\tvar _phaser2 = _interopRequireDefault(_phaser);\n\t\n\tvar _pingPong = __webpack_require__(21);\n\t\n\tvar _pingPong2 = _interopRequireDefault(_pingPong);\n\t\n\tvar _reverb = __webpack_require__(22);\n\t\n\tvar _reverb2 = _interopRequireDefault(_reverb);\n\t\n\tvar _sequencer = __webpack_require__(23);\n\t\n\tvar _sequencer2 = _interopRequireDefault(_sequencer);\n\t\n\tvar _sampler = __webpack_require__(24);\n\t\n\tvar _sampler2 = _interopRequireDefault(_sampler);\n\t\n\tvar _song = __webpack_require__(26);\n\t\n\tvar _song2 = _interopRequireDefault(_song);\n\t\n\tvar _synth = __webpack_require__(28);\n\t\n\tvar _synth2 = _interopRequireDefault(_synth);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Analyser = _analyser2.default;\n\texports.Bus = _bus2.default;\n\texports.Bitcrusher = _bitcrusher2.default;\n\texports.Chorus = _chorus2.default;\n\texports.Compressor = _compressor2.default;\n\texports.Delay = _delay2.default;\n\texports.Filter = _filter2.default;\n\texports.Gain = _gain2.default;\n\texports.LFO = _lfo2.default;\n\texports.MoogFilter = _moogFilter2.default;\n\texports.Monosynth = _monosynth2.default;\n\texports.Overdrive = _overdrive2.default;\n\texports.Phaser = _phaser2.default;\n\texports.PingPong = _pingPong2.default;\n\texports.Reverb = _reverb2.default;\n\texports.Sequencer = _sequencer2.default;\n\texports.Sampler = _sampler2.default;\n\texports.Song = _song2.default;\n\texports.Synth = _synth2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar Sequencer = function (_Component) {\n\t  _inherits(Sequencer, _Component);\n\t\n\t  function Sequencer(props, context) {\n\t    _classCallCheck(this, Sequencer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Sequencer.__proto__ || Object.getPrototypeOf(Sequencer)).call(this, props));\n\t\n\t    _this.visualization = context.audioContext.createScriptProcessor(2048, 1, 1);\n\t    _this.visualization.connect(context.audioContext.destination);\n\t\n\t    _this.connectNode = context.audioContext.createAnalyser();\n\t    _this.connectNode.connect(context.connectNode);\n\t    _this.applyProps = _this.applyProps.bind(_this);\n\t\n\t    _this.visualization.onaudioprocess = function () {\n\t      props.onAudioProcess(_this.connectNode);\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Sequencer, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.applyProps(this.props);\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      this.applyProps(nextProps);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'applyProps',\n\t    value: function applyProps(props) {\n\t      for (var prop in props) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop] = props[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Sequencer;\n\t}(_react.Component);\n\t\n\tSequencer.propTypes = {\n\t  children: _react.PropTypes.node,\n\t  fftSize: _react.PropTypes.number,\n\t  onAudioProcess: _react.PropTypes.func,\n\t  smoothingTimeConstant: _react.PropTypes.number\n\t};\n\tSequencer.defaultProps = {\n\t  fftSize: 128,\n\t  onAudioProcess: function onAudioProcess() {},\n\t  smoothingTimeConstant: 0.3\n\t};\n\tSequencer.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tSequencer.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = Sequencer;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _tunajs = __webpack_require__(4);\n\t\n\tvar _tunajs2 = _interopRequireDefault(_tunajs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar Bitcrusher = function (_Component) {\n\t  _inherits(Bitcrusher, _Component);\n\t\n\t  function Bitcrusher(props, context) {\n\t    _classCallCheck(this, Bitcrusher);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Bitcrusher.__proto__ || Object.getPrototypeOf(Bitcrusher)).call(this, props));\n\t\n\t    var tuna = new _tunajs2.default(context.audioContext);\n\t\n\t    _this.connectNode = new tuna.Bitcrusher({\n\t      bits: props.bits,\n\t      normfreq: props.normfreq,\n\t      bufferSize: props.bufferSize\n\t    });\n\t\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Bitcrusher, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      for (var prop in nextProps) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop] = nextProps[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Bitcrusher;\n\t}(_react.Component);\n\t\n\tBitcrusher.propTypes = {\n\t  bits: _react.PropTypes.number,\n\t  bufferSize: _react.PropTypes.number,\n\t  children: _react.PropTypes.node,\n\t  normfreq: _react.PropTypes.number\n\t};\n\tBitcrusher.defaultProps = {\n\t  bits: 4,\n\t  bufferSize: 4096,\n\t  normfreq: 0.1\n\t};\n\tBitcrusher.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tBitcrusher.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = Bitcrusher;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t    Copyright (c) 2012 DinahMoe AB & Oskar Eriksson\n\t\n\t    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\n\t    files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy,\n\t    modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\n\t    is furnished to do so, subject to the following conditions:\n\t\n\t    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t\n\t    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\t    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t*/\n\t/*global module*/\n\t(function(window) {\n\t\n\t    var userContext,\n\t        userInstance,\n\t        pipe = function(param, val) {\n\t            param.value = val;\n\t        },\n\t        Super = Object.create(null, {\n\t            activate: {\n\t                writable: true,\n\t                value: function(doActivate) {\n\t                    if (doActivate) {\n\t                        this.input.disconnect();\n\t                        this.input.connect(this.activateNode);\n\t                        if (this.activateCallback) {\n\t                            this.activateCallback(doActivate);\n\t                        }\n\t                    } else {\n\t                        this.input.disconnect();\n\t                        this.input.connect(this.output);\n\t                    }\n\t                }\n\t            },\n\t            bypass: {\n\t                get: function() {\n\t                    return this._bypass;\n\t                },\n\t                set: function(value) {\n\t                    if (this._lastBypassValue === value) {\n\t                        return;\n\t                    }\n\t                    this._bypass = value;\n\t                    this.activate(!value);\n\t                    this._lastBypassValue = value;\n\t                }\n\t            },\n\t            connect: {\n\t                value: function(target) {\n\t                    this.output.connect(target);\n\t                }\n\t            },\n\t            disconnect: {\n\t                value: function(target) {\n\t                    this.output.disconnect(target);\n\t                }\n\t            },\n\t            connectInOrder: {\n\t                value: function(nodeArray) {\n\t                    var i = nodeArray.length - 1;\n\t                    while (i--) {\n\t                        if (!nodeArray[i].connect) {\n\t                            return console.error(\"AudioNode.connectInOrder: TypeError: Not an AudioNode.\", nodeArray[i]);\n\t                        }\n\t                        if (nodeArray[i + 1].input) {\n\t                            nodeArray[i].connect(nodeArray[i + 1].input);\n\t                        } else {\n\t                            nodeArray[i].connect(nodeArray[i + 1]);\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t            getDefaults: {\n\t                value: function() {\n\t                    var result = {};\n\t                    for (var key in this.defaults) {\n\t                        result[key] = this.defaults[key].value;\n\t                    }\n\t                    return result;\n\t                }\n\t            },\n\t            automate: {\n\t                value: function(property, value, duration, startTime) {\n\t                    var start = startTime ? ~~(startTime / 1000) : userContext.currentTime,\n\t                        dur = duration ? ~~(duration / 1000) : 0,\n\t                        _is = this.defaults[property],\n\t                        param = this[property],\n\t                        method;\n\t\n\t                    if (param) {\n\t                        if (_is.automatable) {\n\t                            if (!duration) {\n\t                                method = \"setValueAtTime\";\n\t                            } else {\n\t                                method = \"linearRampToValueAtTime\";\n\t                                param.cancelScheduledValues(start);\n\t                                param.setValueAtTime(param.value, start);\n\t                            }\n\t                            param[method](value, dur + start);\n\t                        } else {\n\t                            param = value;\n\t                        }\n\t                    } else {\n\t                        console.error(\"Invalid Property for \" + this.name);\n\t                    }\n\t                }\n\t            }\n\t        }),\n\t        FLOAT = \"float\",\n\t        BOOLEAN = \"boolean\",\n\t        STRING = \"string\",\n\t        INT = \"int\";\n\t\n\t    if (typeof module !== \"undefined\" && module.exports) {\n\t        module.exports = Tuna;\n\t    } else if (true) {\n\t        window.define(\"Tuna\", definition);\n\t    } else {\n\t        window.Tuna = Tuna;\n\t    }\n\t\n\t    function definition() {\n\t        return Tuna;\n\t    }\n\t\n\t    function Tuna(context) {\n\t        if (!(this instanceof Tuna)) {\n\t            return new Tuna(context);\n\t        }\n\t        if (!window.AudioContext) {\n\t            window.AudioContext = window.webkitAudioContext;\n\t        }\n\t        if (!context) {\n\t            console.log(\"tuna.js: Missing audio context! Creating a new context for you.\");\n\t            context = window.AudioContext && (new window.AudioContext());\n\t        }\n\t        if (!context) {\n\t            throw new Error(\"Tuna cannot initialize because this environment does not support web audio.\");\n\t        }\n\t        connectify(context);\n\t        userContext = context;\n\t        userInstance = this;\n\t    }\n\t\n\t    function connectify(context) {\n\t        if (context.__connectified__ === true) return;\n\t\n\t        var gain = context.createGain(),\n\t            proto = Object.getPrototypeOf(Object.getPrototypeOf(gain)),\n\t            oconnect = proto.connect;\n\t\n\t        proto.connect = shimConnect;\n\t        context.__connectified__ = true; // Prevent overriding connect more than once\n\t\n\t        function shimConnect() {\n\t            var node = arguments[0];\n\t            arguments[0] = Super.isPrototypeOf ? (Super.isPrototypeOf(node) ? node.input : node) : (node.input || node);\n\t            oconnect.apply(this, arguments);\n\t            return node;\n\t        }\n\t    }\n\t\n\t    function dbToWAVolume(db) {\n\t        return Math.max(0, Math.round(100 * Math.pow(2, db / 6)) / 100);\n\t    }\n\t\n\t    function fmod(x, y) {\n\t        // http://kevin.vanzonneveld.net\n\t        // *     example 1: fmod(5.7, 1.3);\n\t        // *     returns 1: 0.5\n\t        var tmp, tmp2, p = 0,\n\t            pY = 0,\n\t            l = 0.0,\n\t            l2 = 0.0;\n\t\n\t        tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/);\n\t        p = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n\t        tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/);\n\t        pY = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n\t\n\t        if (pY > p) {\n\t            p = pY;\n\t        }\n\t\n\t        tmp2 = (x % y);\n\t\n\t        if (p < -100 || p > 20) {\n\t            // toFixed will give an out of bound error so we fix it like this:\n\t            l = Math.round(Math.log(tmp2) / Math.log(10));\n\t            l2 = Math.pow(10, l);\n\t\n\t            return (tmp2 / l2).toFixed(l - p) * l2;\n\t        } else {\n\t            return parseFloat(tmp2.toFixed(-p));\n\t        }\n\t    }\n\t\n\t    function sign(x) {\n\t        if (x === 0) {\n\t            return 1;\n\t        } else {\n\t            return Math.abs(x) / x;\n\t        }\n\t    }\n\t\n\t    function tanh(n) {\n\t        return (Math.exp(n) - Math.exp(-n)) / (Math.exp(n) + Math.exp(-n));\n\t    }\n\t\n\t    function initValue(userVal, defaultVal) {\n\t        return userVal === undefined ? defaultVal : userVal;\n\t    }\n\t\n\t    Tuna.prototype.Bitcrusher = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;\n\t\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.processor);\n\t        this.processor.connect(this.output);\n\t\n\t        var phaser = 0,\n\t            last = 0,\n\t            input, output, step, i, length;\n\t        this.processor.onaudioprocess = function(e) {\n\t            input = e.inputBuffer.getChannelData(0),\n\t            output = e.outputBuffer.getChannelData(0),\n\t            step = Math.pow(1 / 2, this.bits);\n\t            length = input.length;\n\t            for (i = 0; i < length; i++) {\n\t                phaser += this.normfreq;\n\t                if (phaser >= 1.0) {\n\t                    phaser -= 1.0;\n\t                    last = step * Math.floor(input[i] / step + 0.5);\n\t                }\n\t                output[i] = last;\n\t            }\n\t        };\n\t\n\t        this.bits = properties.bits || this.defaults.bits.value;\n\t        this.normfreq = initValue(properties.normfreq, this.defaults.normfreq.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Bitcrusher.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Bitcrusher\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                bits: {\n\t                    value: 4,\n\t                    min: 1,\n\t                    max: 16,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                bufferSize: {\n\t                    value: 4096,\n\t                    min: 256,\n\t                    max: 16384,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                bypass: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                normfreq: {\n\t                    value: 0.1,\n\t                    min: 0.0001,\n\t                    max: 1.0,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        bits: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.bits;\n\t            },\n\t            set: function(value) {\n\t                this.processor.bits = value;\n\t            }\n\t        },\n\t        normfreq: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.normfreq;\n\t            },\n\t            set: function(value) {\n\t                this.processor.normfreq = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Cabinet = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.convolver = this.newConvolver(properties.impulsePath || \"../impulses/impulse_guitar.wav\");\n\t        this.makeupNode = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.convolver.input);\n\t        this.convolver.output.connect(this.makeupNode);\n\t        this.makeupNode.connect(this.output);\n\t\n\t        this.makeupGain = initValue(properties.makeupGain, this.defaults.makeupGain);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Cabinet.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Cabinet\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                makeupGain: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 20,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                bypass: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                }\n\t            }\n\t        },\n\t        makeupGain: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.makeupNode.gain;\n\t            },\n\t            set: function(value) {\n\t                this.makeupNode.gain.value = value;\n\t            }\n\t        },\n\t        newConvolver: {\n\t            value: function(impulsePath) {\n\t                return new userInstance.Convolver({\n\t                    impulse: impulsePath,\n\t                    dryLevel: 0,\n\t                    wetLevel: 1\n\t                });\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Chorus = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.attenuator = this.activateNode = userContext.createGain();\n\t        this.splitter = userContext.createChannelSplitter(2);\n\t        this.delayL = userContext.createDelay();\n\t        this.delayR = userContext.createDelay();\n\t        this.feedbackGainNodeLR = userContext.createGain();\n\t        this.feedbackGainNodeRL = userContext.createGain();\n\t        this.merger = userContext.createChannelMerger(2);\n\t        this.output = userContext.createGain();\n\t\n\t        this.lfoL = new userInstance.LFO({\n\t            target: this.delayL.delayTime,\n\t            callback: pipe\n\t        });\n\t        this.lfoR = new userInstance.LFO({\n\t            target: this.delayR.delayTime,\n\t            callback: pipe\n\t        });\n\t\n\t        this.input.connect(this.attenuator);\n\t        this.attenuator.connect(this.output);\n\t        this.attenuator.connect(this.splitter);\n\t        this.splitter.connect(this.delayL, 0);\n\t        this.splitter.connect(this.delayR, 1);\n\t        this.delayL.connect(this.feedbackGainNodeLR);\n\t        this.delayR.connect(this.feedbackGainNodeRL);\n\t        this.feedbackGainNodeLR.connect(this.delayR);\n\t        this.feedbackGainNodeRL.connect(this.delayL);\n\t        this.delayL.connect(this.merger, 0, 0);\n\t        this.delayR.connect(this.merger, 0, 1);\n\t        this.merger.connect(this.output);\n\t\n\t        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n\t        this.rate = initValue(properties.rate, this.defaults.rate.value);\n\t        this.delay = initValue(properties.delay, this.defaults.delay.value);\n\t        this.depth = initValue(properties.depth, this.defaults.depth.value);\n\t        this.lfoR.phase = Math.PI / 2;\n\t        this.attenuator.gain.value = 0.6934; // 1 / (10 ^ (((20 * log10(3)) / 3) / 20))\n\t        this.lfoL.activate(true);\n\t        this.lfoR.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Chorus.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Chorus\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                feedback: {\n\t                    value: 0.4,\n\t                    min: 0,\n\t                    max: 0.95,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                delay: {\n\t                    value: 0.0045,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                depth: {\n\t                    value: 0.7,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                rate: {\n\t                    value: 1.5,\n\t                    min: 0,\n\t                    max: 8,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                bypass: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                }\n\t            }\n\t        },\n\t        delay: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._delay;\n\t            },\n\t            set: function(value) {\n\t                this._delay = 0.0002 * (Math.pow(10, value) * 2);\n\t                this.lfoL.offset = this._delay;\n\t                this.lfoR.offset = this._delay;\n\t                this._depth = this._depth;\n\t            }\n\t        },\n\t        depth: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._depth;\n\t            },\n\t            set: function(value) {\n\t                this._depth = value;\n\t                this.lfoL.oscillation = this._depth * this._delay;\n\t                this.lfoR.oscillation = this._depth * this._delay;\n\t            }\n\t        },\n\t        feedback: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._feedback;\n\t            },\n\t            set: function(value) {\n\t                this._feedback = value;\n\t                this.feedbackGainNodeLR.gain.value = this._feedback;\n\t                this.feedbackGainNodeRL.gain.value = this._feedback;\n\t            }\n\t        },\n\t        rate: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._rate = value;\n\t                this.lfoL.frequency = this._rate;\n\t                this.lfoR.frequency = this._rate;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Compressor = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.compNode = this.activateNode = userContext.createDynamicsCompressor();\n\t        this.makeupNode = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.compNode.connect(this.makeupNode);\n\t        this.makeupNode.connect(this.output);\n\t\n\t        this.automakeup = initValue(properties.automakeup, this.defaults.automakeup.value);\n\t        this.makeupGain = initValue(properties.makeupGain, this.defaults.makeupGain.value);\n\t        this.threshold = initValue(properties.threshold, this.defaults.threshold.value);\n\t        this.release = initValue(properties.release, this.defaults.release.value);\n\t        this.attack = initValue(properties.attack, this.defaults.attack.value);\n\t        this.ratio = properties.ratio || this.defaults.ratio.value;\n\t        this.knee = initValue(properties.knee, this.defaults.knee.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Compressor.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Compressor\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                threshold: {\n\t                    value: -20,\n\t                    min: -60,\n\t                    max: 0,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                release: {\n\t                    value: 250,\n\t                    min: 10,\n\t                    max: 2000,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                makeupGain: {\n\t                    value: 1,\n\t                    min: 1,\n\t                    max: 100,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                attack: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1000,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                ratio: {\n\t                    value: 4,\n\t                    min: 1,\n\t                    max: 50,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                knee: {\n\t                    value: 5,\n\t                    min: 0,\n\t                    max: 40,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                automakeup: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                bypass: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                }\n\t            }\n\t        },\n\t        computeMakeup: {\n\t            value: function() {\n\t                var magicCoefficient = 4, // raise me if the output is too hot\n\t                    c = this.compNode;\n\t                return -(c.threshold.value - c.threshold.value / c.ratio.value) / magicCoefficient;\n\t            }\n\t        },\n\t        automakeup: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._automakeup;\n\t            },\n\t            set: function(value) {\n\t                this._automakeup = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        threshold: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.threshold;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.threshold.value = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        ratio: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.ratio;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.ratio.value = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        knee: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.knee;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.knee.value = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        attack: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.attack;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.attack.value = value / 1000;\n\t            }\n\t        },\n\t        release: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.release;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.release.value = value / 1000;\n\t            }\n\t        },\n\t        makeupGain: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.makeupNode.gain;\n\t            },\n\t            set: function(value) {\n\t                this.makeupNode.gain.value = dbToWAVolume(value);\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Convolver = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.convolver = userContext.createConvolver();\n\t        this.dry = userContext.createGain();\n\t        this.filterLow = userContext.createBiquadFilter();\n\t        this.filterHigh = userContext.createBiquadFilter();\n\t        this.wet = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.filterLow);\n\t        this.activateNode.connect(this.dry);\n\t        this.filterLow.connect(this.filterHigh);\n\t        this.filterHigh.connect(this.convolver);\n\t        this.convolver.connect(this.wet);\n\t        this.wet.connect(this.output);\n\t        this.dry.connect(this.output);\n\t\n\t        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);\n\t        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);\n\t        this.highCut = properties.highCut || this.defaults.highCut.value;\n\t        this.buffer = properties.impulse || \"../impulses/ir_rev_short.wav\";\n\t        this.lowCut = properties.lowCut || this.defaults.lowCut.value;\n\t        this.level = initValue(properties.level, this.defaults.level.value);\n\t        this.filterHigh.type = \"lowpass\";\n\t        this.filterLow.type = \"highpass\";\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Convolver.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Convolver\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                highCut: {\n\t                    value: 22050,\n\t                    min: 20,\n\t                    max: 22050,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                lowCut: {\n\t                    value: 20,\n\t                    min: 20,\n\t                    max: 22050,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                dryLevel: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                wetLevel: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                level: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        lowCut: {\n\t            get: function() {\n\t                return this.filterLow.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filterLow.frequency.value = value;\n\t            }\n\t        },\n\t        highCut: {\n\t            get: function() {\n\t                return this.filterHigh.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filterHigh.frequency.value = value;\n\t            }\n\t        },\n\t        level: {\n\t            get: function() {\n\t                return this.output.gain;\n\t            },\n\t            set: function(value) {\n\t                this.output.gain.value = value;\n\t            }\n\t        },\n\t        dryLevel: {\n\t            get: function() {\n\t                return this.dry.gain;\n\t            },\n\t            set: function(value) {\n\t                this.dry.gain.value = value;\n\t            }\n\t        },\n\t        wetLevel: {\n\t            get: function() {\n\t                return this.wet.gain;\n\t            },\n\t            set: function(value) {\n\t                this.wet.gain.value = value;\n\t            }\n\t        },\n\t        buffer: {\n\t            enumerable: false,\n\t            get: function() {\n\t                return this.convolver.buffer;\n\t            },\n\t            set: function(impulse) {\n\t                var convolver = this.convolver,\n\t                    xhr = new XMLHttpRequest();\n\t                if (!impulse) {\n\t                    console.log(\"Tuna.Convolver.setBuffer: Missing impulse path!\");\n\t                    return;\n\t                }\n\t                xhr.open(\"GET\", impulse, true);\n\t                xhr.responseType = \"arraybuffer\";\n\t                xhr.onreadystatechange = function() {\n\t                    if (xhr.readyState === 4) {\n\t                        if (xhr.status < 300 && xhr.status > 199 || xhr.status === 302) {\n\t                            userContext.decodeAudioData(xhr.response, function(buffer) {\n\t                                convolver.buffer = buffer;\n\t                            }, function(e) {\n\t                                if (e) console.log(\"Tuna.Convolver.setBuffer: Error decoding data\" + e);\n\t                            });\n\t                        }\n\t                    }\n\t                };\n\t                xhr.send(null);\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Delay = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.dry = userContext.createGain();\n\t        this.wet = userContext.createGain();\n\t        this.filter = userContext.createBiquadFilter();\n\t        this.delay = userContext.createDelay();\n\t        this.feedbackNode = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.delay);\n\t        this.activateNode.connect(this.dry);\n\t        this.delay.connect(this.filter);\n\t        this.filter.connect(this.feedbackNode);\n\t        this.feedbackNode.connect(this.delay);\n\t        this.feedbackNode.connect(this.wet);\n\t        this.wet.connect(this.output);\n\t        this.dry.connect(this.output);\n\t\n\t        this.delayTime = properties.delayTime || this.defaults.delayTime.value;\n\t        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n\t        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);\n\t        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);\n\t        this.cutoff = properties.cutoff || this.defaults.cutoff.value;\n\t        this.filter.type = \"lowpass\";\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Delay.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Delay\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                delayTime: {\n\t                    value: 100,\n\t                    min: 20,\n\t                    max: 1000,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                feedback: {\n\t                    value: 0.45,\n\t                    min: 0,\n\t                    max: 0.9,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                cutoff: {\n\t                    value: 20000,\n\t                    min: 20,\n\t                    max: 20000,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                wetLevel: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                dryLevel: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        delayTime: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.delay.delayTime;\n\t            },\n\t            set: function(value) {\n\t                this.delay.delayTime.value = value / 1000;\n\t            }\n\t        },\n\t        wetLevel: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.wet.gain;\n\t            },\n\t            set: function(value) {\n\t                this.wet.gain.value = value;\n\t            }\n\t        },\n\t        dryLevel: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.dry.gain;\n\t            },\n\t            set: function(value) {\n\t                this.dry.gain.value = value;\n\t            }\n\t        },\n\t        feedback: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.feedbackNode.gain;\n\t            },\n\t            set: function(value) {\n\t                this.feedbackNode.gain.value = value;\n\t            }\n\t        },\n\t        cutoff: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filter.frequency.value = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Filter = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.filter = userContext.createBiquadFilter();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.filter);\n\t        this.filter.connect(this.output);\n\t\n\t        this.frequency = properties.frequency || this.defaults.frequency.value;\n\t        this.Q = properties.resonance || this.defaults.Q.value;\n\t        this.filterType = initValue(properties.filterType, this.defaults.filterType.value);\n\t        this.gain = initValue(properties.gain, this.defaults.gain.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Filter.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Filter\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                frequency: {\n\t                    value: 800,\n\t                    min: 20,\n\t                    max: 22050,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                Q: {\n\t                    value: 1,\n\t                    min: 0.001,\n\t                    max: 100,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                gain: {\n\t                    value: 0,\n\t                    min: -40,\n\t                    max: 40,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                bypass: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                filterType: {\n\t                    value: \"lowpass\",\n\t                    automatable: false,\n\t                    type: STRING\n\t                }\n\t            }\n\t        },\n\t        filterType: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.type;\n\t            },\n\t            set: function(value) {\n\t                this.filter.type = value;\n\t            }\n\t        },\n\t        Q: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.Q;\n\t            },\n\t            set: function(value) {\n\t                this.filter.Q.value = value;\n\t            }\n\t        },\n\t        gain: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.gain;\n\t            },\n\t            set: function(value) {\n\t                this.filter.gain.value = value;\n\t            }\n\t        },\n\t        frequency: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filter.frequency.value = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.MoogFilter = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;\n\t\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.processor);\n\t        this.processor.connect(this.output);\n\t\n\t        var in1, in2, in3, in4, out1, out2, out3, out4;\n\t        in1 = in2 = in3 = in4 = out1 = out2 = out3 = out4 = 0.0;\n\t        var input, output, f, fb, i, length, inputFactor;\n\t        this.processor.onaudioprocess = function(e) {\n\t            input = e.inputBuffer.getChannelData(0),\n\t                output = e.outputBuffer.getChannelData(0),\n\t                f = this.cutoff * 1.16,\n\t                inputFactor = 0.35013 * (f * f) * (f * f);\n\t            fb = this.resonance * (1.0 - 0.15 * f * f);\n\t            length = input.length;\n\t            for (i = 0; i < length; i++) {\n\t                input[i] -= out4 * fb;\n\t                input[i] *= inputFactor;\n\t                out1 = input[i] + 0.3 * in1 + (1 - f) * out1; // Pole 1\n\t                in1 = input[i];\n\t                out2 = out1 + 0.3 * in2 + (1 - f) * out2; // Pole 2\n\t                in2 = out1;\n\t                out3 = out2 + 0.3 * in3 + (1 - f) * out3; // Pole 3\n\t                in3 = out2;\n\t                out4 = out3 + 0.3 * in4 + (1 - f) * out4; // Pole 4\n\t                in4 = out3;\n\t                output[i] = out4;\n\t            }\n\t        };\n\t\n\t        this.cutoff = initValue(properties.cutoff, this.defaults.cutoff.value);\n\t        this.resonance = initValue(properties.resonance, this.defaults.resonance.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.MoogFilter.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"MoogFilter\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                bufferSize: {\n\t                    value: 4096,\n\t                    min: 256,\n\t                    max: 16384,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                bypass: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                cutoff: {\n\t                    value: 0.065,\n\t                    min: 0.0001,\n\t                    max: 1.0,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                resonance: {\n\t                    value: 3.5,\n\t                    min: 0.0,\n\t                    max: 4.0,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        cutoff: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.cutoff;\n\t            },\n\t            set: function(value) {\n\t                this.processor.cutoff = value;\n\t            }\n\t        },\n\t        resonance: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.resonance;\n\t            },\n\t            set: function(value) {\n\t                this.processor.resonance = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Overdrive = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.inputDrive = userContext.createGain();\n\t        this.waveshaper = userContext.createWaveShaper();\n\t        this.outputDrive = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.inputDrive);\n\t        this.inputDrive.connect(this.waveshaper);\n\t        this.waveshaper.connect(this.outputDrive);\n\t        this.outputDrive.connect(this.output);\n\t\n\t        this.ws_table = new Float32Array(this.k_nSamples);\n\t        this.drive = initValue(properties.drive, this.defaults.drive.value);\n\t        this.outputGain = initValue(properties.outputGain, this.defaults.outputGain.value);\n\t        this.curveAmount = initValue(properties.curveAmount, this.defaults.curveAmount.value);\n\t        this.algorithmIndex = initValue(properties.algorithmIndex, this.defaults.algorithmIndex.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Overdrive.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Overdrive\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                drive: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT,\n\t                    scaled: true\n\t                },\n\t                outputGain: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT,\n\t                    scaled: true\n\t                },\n\t                curveAmount: {\n\t                    value: 0.725,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                algorithmIndex: {\n\t                    value: 0,\n\t                    min: 0,\n\t                    max: 5,\n\t                    automatable: false,\n\t                    type: INT\n\t                }\n\t            }\n\t        },\n\t        k_nSamples: {\n\t            value: 8192\n\t        },\n\t        drive: {\n\t            get: function() {\n\t                return this.inputDrive.gain;\n\t            },\n\t            set: function(value) {\n\t                this._drive = value;\n\t            }\n\t        },\n\t        curveAmount: {\n\t            get: function() {\n\t                return this._curveAmount;\n\t            },\n\t            set: function(value) {\n\t                this._curveAmount = value;\n\t                if (this._algorithmIndex === undefined) {\n\t                    this._algorithmIndex = 0;\n\t                }\n\t                this.waveshaperAlgorithms[this._algorithmIndex](this._curveAmount, this.k_nSamples, this.ws_table);\n\t                this.waveshaper.curve = this.ws_table;\n\t            }\n\t        },\n\t        outputGain: {\n\t            get: function() {\n\t                return this.outputDrive.gain;\n\t            },\n\t            set: function(value) {\n\t                this._outputGain = dbToWAVolume(value);\n\t            }\n\t        },\n\t        algorithmIndex: {\n\t            get: function() {\n\t                return this._algorithmIndex;\n\t            },\n\t            set: function(value) {\n\t                this._algorithmIndex = value;\n\t                this.curveAmount = this._curveAmount;\n\t            }\n\t        },\n\t        waveshaperAlgorithms: {\n\t            value: [\n\t                function(amount, n_samples, ws_table) {\n\t                    amount = Math.min(amount, 0.9999);\n\t                    var k = 2 * amount / (1 - amount),\n\t                        i, x;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        ws_table[i] = (1 + k) * x / (1 + k * Math.abs(x));\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var i, x, y;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        y = ((0.5 * Math.pow((x + 1.4), 2)) - 1) * y >= 0 ? 5.8 : 1.2;\n\t                        ws_table[i] = tanh(y);\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var i, x, y, a = 1 - amount;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        y = x < 0 ? -Math.pow(Math.abs(x), a + 0.04) : Math.pow(x, a);\n\t                        ws_table[i] = tanh(y * 2);\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var i, x, y, abx, a = 1 - amount > 0.99 ? 0.99 : 1 - amount;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        abx = Math.abs(x);\n\t                        if (abx < a) y = abx;\n\t                        else if (abx > a) y = a + (abx - a) / (1 + Math.pow((abx - a) / (1 - a), 2));\n\t                        else if (abx > 1) y = abx;\n\t                        ws_table[i] = sign(x) * y * (1 / ((a + 1) / 2));\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) { // fixed curve, amount doesn't do anything, the distortion is just from the drive\n\t                    var i, x;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        if (x < -0.08905) {\n\t                            ws_table[i] = (-3 / 4) * (1 - (Math.pow((1 - (Math.abs(x) - 0.032857)), 12)) + (1 / 3) * (Math.abs(x) - 0.032847)) + 0.01;\n\t                        } else if (x >= -0.08905 && x < 0.320018) {\n\t                            ws_table[i] = (-6.153 * (x * x)) + 3.9375 * x;\n\t                        } else {\n\t                            ws_table[i] = 0.630035;\n\t                        }\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var a = 2 + Math.round(amount * 14),\n\t                        // we go from 2 to 16 bits, keep in mind for the UI\n\t                        bits = Math.round(Math.pow(2, a - 1)),\n\t                        // real number of quantization steps divided by 2\n\t                        i, x;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        ws_table[i] = Math.round(x * bits) / bits;\n\t                    }\n\t                }\n\t            ]\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Phaser = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.splitter = this.activateNode = userContext.createChannelSplitter(2);\n\t        this.filtersL = [];\n\t        this.filtersR = [];\n\t        this.feedbackGainNodeL = userContext.createGain();\n\t        this.feedbackGainNodeR = userContext.createGain();\n\t        this.merger = userContext.createChannelMerger(2);\n\t        this.filteredSignal = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t        this.lfoL = new userInstance.LFO({\n\t            target: this.filtersL,\n\t            callback: this.callback\n\t        });\n\t        this.lfoR = new userInstance.LFO({\n\t            target: this.filtersR,\n\t            callback: this.callback\n\t        });\n\t\n\t        var i = this.stage;\n\t        while (i--) {\n\t            this.filtersL[i] = userContext.createBiquadFilter();\n\t            this.filtersR[i] = userContext.createBiquadFilter();\n\t            this.filtersL[i].type = \"allpass\";\n\t            this.filtersR[i].type = \"allpass\";\n\t        }\n\t        this.input.connect(this.splitter);\n\t        this.input.connect(this.output);\n\t        this.splitter.connect(this.filtersL[0], 0, 0);\n\t        this.splitter.connect(this.filtersR[0], 1, 0);\n\t        this.connectInOrder(this.filtersL);\n\t        this.connectInOrder(this.filtersR);\n\t        this.filtersL[this.stage - 1].connect(this.feedbackGainNodeL);\n\t        this.filtersL[this.stage - 1].connect(this.merger, 0, 0);\n\t        this.filtersR[this.stage - 1].connect(this.feedbackGainNodeR);\n\t        this.filtersR[this.stage - 1].connect(this.merger, 0, 1);\n\t        this.feedbackGainNodeL.connect(this.filtersL[0]);\n\t        this.feedbackGainNodeR.connect(this.filtersR[0]);\n\t        this.merger.connect(this.output);\n\t\n\t        this.rate = initValue(properties.rate, this.defaults.rate.value);\n\t        this.baseModulationFrequency = properties.baseModulationFrequency || this.defaults.baseModulationFrequency.value;\n\t        this.depth = initValue(properties.depth, this.defaults.depth.value);\n\t        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n\t        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);\n\t\n\t        this.lfoL.activate(true);\n\t        this.lfoR.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Phaser.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Phaser\"\n\t        },\n\t        stage: {\n\t            value: 4\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                rate: {\n\t                    value: 0.1,\n\t                    min: 0,\n\t                    max: 8,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                depth: {\n\t                    value: 0.6,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                feedback: {\n\t                    value: 0.7,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                stereoPhase: {\n\t                    value: 40,\n\t                    min: 0,\n\t                    max: 180,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                baseModulationFrequency: {\n\t                    value: 700,\n\t                    min: 500,\n\t                    max: 1500,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        callback: {\n\t            value: function(filters, value) {\n\t                for (var stage = 0; stage < 4; stage++) {\n\t                    filters[stage].frequency.value = value;\n\t                }\n\t            }\n\t        },\n\t        depth: {\n\t            get: function() {\n\t                return this._depth;\n\t            },\n\t            set: function(value) {\n\t                this._depth = value;\n\t                this.lfoL.oscillation = this._baseModulationFrequency * this._depth;\n\t                this.lfoR.oscillation = this._baseModulationFrequency * this._depth;\n\t            }\n\t        },\n\t        rate: {\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._rate = value;\n\t                this.lfoL.frequency = this._rate;\n\t                this.lfoR.frequency = this._rate;\n\t            }\n\t        },\n\t        baseModulationFrequency: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._baseModulationFrequency;\n\t            },\n\t            set: function(value) {\n\t                this._baseModulationFrequency = value;\n\t                this.lfoL.offset = this._baseModulationFrequency;\n\t                this.lfoR.offset = this._baseModulationFrequency;\n\t                this._depth = this._depth;\n\t            }\n\t        },\n\t        feedback: {\n\t            get: function() {\n\t                return this._feedback;\n\t            },\n\t            set: function(value) {\n\t                this._feedback = value;\n\t                this.feedbackGainNodeL.gain.value = this._feedback;\n\t                this.feedbackGainNodeR.gain.value = this._feedback;\n\t            }\n\t        },\n\t        stereoPhase: {\n\t            get: function() {\n\t                return this._stereoPhase;\n\t            },\n\t            set: function(value) {\n\t                this._stereoPhase = value;\n\t                var newPhase = this.lfoL._phase + this._stereoPhase * Math.PI / 180;\n\t                newPhase = fmod(newPhase, 2 * Math.PI);\n\t                this.lfoR._phase = newPhase;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.PingPongDelay = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.wetLevel = userContext.createGain();\n\t        this.stereoToMonoMix = userContext.createGain();\n\t        this.feedbackLevel = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t        this.delayLeft = userContext.createDelay();\n\t        this.delayRight = userContext.createDelay();\n\t\n\t        this.activateNode = userContext.createGain();\n\t        this.splitter = userContext.createChannelSplitter(2);\n\t        this.merger = userContext.createChannelMerger(2);\n\t\n\t        this.activateNode.connect(this.splitter);\n\t        this.splitter.connect(this.stereoToMonoMix, 0, 0);\n\t        this.splitter.connect(this.stereoToMonoMix, 1, 0);\n\t        this.stereoToMonoMix.gain.value = .5;\n\t        this.stereoToMonoMix.connect(this.wetLevel);\n\t        this.wetLevel.connect(this.delayLeft);\n\t        this.feedbackLevel.connect(this.delayLeft);\n\t        this.delayLeft.connect(this.delayRight);\n\t        this.delayRight.connect(this.feedbackLevel);\n\t        this.delayLeft.connect(this.merger, 0, 0);\n\t        this.delayRight.connect(this.merger, 0, 1);\n\t        this.merger.connect(this.output);\n\t        this.activateNode.connect(this.output);\n\t\n\t        this.delayTimeLeft = properties.delayTimeLeft !== undefined ? properties.delayTimeLeft : this.defaults.delayTimeLeft.value;\n\t        this.delayTimeRight = properties.delayTimeRight !== undefined ? properties.delayTimeRight : this.defaults.delayTimeRight.value;\n\t        this.feedbackLevel.gain.value = properties.feedback !== undefined ? properties.feedback : this.defaults.feedback.value;\n\t        this.wetLevel.gain.value = properties.wetLevel !== undefined ? properties.wetLevel : this.defaults.wetLevel.value;\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.PingPongDelay.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"PingPongDelay\"\n\t        },\n\t        delayTimeLeft: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._delayTimeLeft;\n\t            },\n\t            set: function(value) {\n\t                this._delayTimeLeft = value;\n\t                this.delayLeft.delayTime.value = value / 1000;\n\t            }\n\t        },\n\t        delayTimeRight: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._delayTimeRight;\n\t            },\n\t            set: function(value) {\n\t                this._delayTimeRight = value;\n\t                this.delayRight.delayTime.value = value / 1000;\n\t            }\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                delayTimeLeft: {\n\t                    value: 200,\n\t                    min: 1,\n\t                    max: 10000,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                delayTimeRight: {\n\t                    value: 400,\n\t                    min: 1,\n\t                    max: 10000,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                feedback: {\n\t                    value: 0.3,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                wetLevel: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Tremolo = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.splitter = this.activateNode = userContext.createChannelSplitter(\n\t                2),\n\t            this.amplitudeL = userContext.createGain(),\n\t            this.amplitudeR = userContext.createGain(),\n\t            this.merger = userContext.createChannelMerger(2),\n\t            this.output = userContext.createGain();\n\t        this.lfoL = new userInstance.LFO({\n\t            target: this.amplitudeL.gain,\n\t            callback: pipe\n\t        });\n\t        this.lfoR = new userInstance.LFO({\n\t            target: this.amplitudeR.gain,\n\t            callback: pipe\n\t        });\n\t\n\t        this.input.connect(this.splitter);\n\t        this.splitter.connect(this.amplitudeL, 0);\n\t        this.splitter.connect(this.amplitudeR, 1);\n\t        this.amplitudeL.connect(this.merger, 0, 0);\n\t        this.amplitudeR.connect(this.merger, 0, 1);\n\t        this.merger.connect(this.output);\n\t\n\t        this.rate = properties.rate || this.defaults.rate.value;\n\t        this.intensity = initValue(properties.intensity, this.defaults.intensity.value);\n\t        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);\n\t\n\t        this.lfoL.offset = 1 - (this.intensity / 2);\n\t        this.lfoR.offset = 1 - (this.intensity / 2);\n\t        this.lfoL.phase = this.stereoPhase * Math.PI / 180;\n\t\n\t        this.lfoL.activate(true);\n\t        this.lfoR.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Tremolo.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Tremolo\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                intensity: {\n\t                    value: 0.3,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                stereoPhase: {\n\t                    value: 0,\n\t                    min: 0,\n\t                    max: 180,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                rate: {\n\t                    value: 5,\n\t                    min: 0.1,\n\t                    max: 11,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        intensity: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._intensity;\n\t            },\n\t            set: function(value) {\n\t                this._intensity = value;\n\t                this.lfoL.offset = 1 - this._intensity / 2;\n\t                this.lfoR.offset = 1 - this._intensity / 2;\n\t                this.lfoL.oscillation = this._intensity;\n\t                this.lfoR.oscillation = this._intensity;\n\t            }\n\t        },\n\t        rate: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._rate = value;\n\t                this.lfoL.frequency = this._rate;\n\t                this.lfoR.frequency = this._rate;\n\t            }\n\t        },\n\t        stereoPhase: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._stereoPhase = value;\n\t                var newPhase = this.lfoL._phase + this._stereoPhase * Math.PI / 180;\n\t                newPhase = fmod(newPhase, 2 * Math.PI);\n\t                this.lfoR.phase = newPhase;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.WahWah = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.envelopeFollower = new userInstance.EnvelopeFollower({\n\t            target: this,\n\t            callback: function(context, value) {\n\t                context.sweep = value;\n\t            }\n\t        });\n\t        this.filterBp = userContext.createBiquadFilter();\n\t        this.filterPeaking = userContext.createBiquadFilter();\n\t        this.output = userContext.createGain();\n\t\n\t        //Connect AudioNodes\n\t        this.activateNode.connect(this.filterBp);\n\t        this.filterBp.connect(this.filterPeaking);\n\t        this.filterPeaking.connect(this.output);\n\t\n\t        //Set Properties\n\t        this.init();\n\t        this.automode = initValue(properties.enableAutoMode, this.defaults.automode.value);\n\t        this.resonance = properties.resonance || this.defaults.resonance.value;\n\t        this.sensitivity = initValue(properties.sensitivity, this.defaults.sensitivity.value);\n\t        this.baseFrequency = initValue(properties.baseFrequency, this.defaults.baseFrequency.value);\n\t        this.excursionOctaves = properties.excursionOctaves || this.defaults.excursionOctaves.value;\n\t        this.sweep = initValue(properties.sweep, this.defaults.sweep.value);\n\t\n\t        this.activateNode.gain.value = 2;\n\t        this.envelopeFollower.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.WahWah.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"WahWah\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                automode: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                baseFrequency: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                excursionOctaves: {\n\t                    value: 2,\n\t                    min: 1,\n\t                    max: 6,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                sweep: {\n\t                    value: 0.2,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                resonance: {\n\t                    value: 10,\n\t                    min: 1,\n\t                    max: 100,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                sensitivity: {\n\t                    value: 0.5,\n\t                    min: -1,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        activateCallback: {\n\t            value: function(value) {\n\t                this.automode = value;\n\t            }\n\t        },\n\t        automode: {\n\t            get: function() {\n\t                return this._automode;\n\t            },\n\t            set: function(value) {\n\t                this._automode = value;\n\t                if (value) {\n\t                    this.activateNode.connect(this.envelopeFollower.input);\n\t                    this.envelopeFollower.activate(true);\n\t                } else {\n\t                    this.envelopeFollower.activate(false);\n\t                    this.activateNode.disconnect();\n\t                    this.activateNode.connect(this.filterBp);\n\t                }\n\t            }\n\t        },\n\t        filterFreqTimeout: {\n\t            value: 0\n\t        },\n\t        setFilterFreq: {\n\t            value: function() {\n\t                try {\n\t                    this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n\t                    this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n\t                } catch (e) {\n\t                    clearTimeout(this.filterFreqTimeout);\n\t                    //put on the next cycle to let all init properties be set\n\t                    this.filterFreqTimeout = setTimeout(function() {\n\t                        this.setFilterFreq();\n\t                    }.bind(this), 0);\n\t                }\n\t            }\n\t        },\n\t        sweep: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._sweep.value;\n\t            },\n\t            set: function(value) {\n\t                this._sweep = Math.pow(value > 1 ? 1 : value < 0 ? 0 : value, this._sensitivity);\n\t                this.setFilterFreq();\n\t            }\n\t        },\n\t        baseFrequency: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._baseFrequency;\n\t            },\n\t            set: function(value) {\n\t                this._baseFrequency = 50 * Math.pow(10, value *\n\t                    2);\n\t                this._excursionFrequency = Math.min(userContext.sampleRate / 2, this.baseFrequency * Math.pow(2, this._excursionOctaves));\n\t                this.setFilterFreq();\n\t            }\n\t        },\n\t        excursionOctaves: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._excursionOctaves;\n\t            },\n\t            set: function(value) {\n\t                this._excursionOctaves = value;\n\t                this._excursionFrequency = Math.min(userContext.sampleRate / 2, this.baseFrequency * Math.pow(2, this._excursionOctaves));\n\t                this.setFilterFreq();\n\t            }\n\t        },\n\t        sensitivity: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._sensitivity;\n\t            },\n\t            set: function(value) {\n\t                this._sensitivity = Math.pow(10, value);\n\t            }\n\t        },\n\t        resonance: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._resonance;\n\t            },\n\t            set: function(value) {\n\t                this._resonance = value;\n\t                this.filterPeaking.Q = this._resonance;\n\t            }\n\t        },\n\t        init: {\n\t            value: function() {\n\t                this.output.gain.value = 1;\n\t                this.filterPeaking.type = \"peaking\";\n\t                this.filterBp.type = \"bandpass\";\n\t                this.filterPeaking.frequency.value = 100;\n\t                this.filterPeaking.gain.value = 20;\n\t                this.filterPeaking.Q.value = 5;\n\t                this.filterBp.frequency.value = 100;\n\t                this.filterBp.Q.value = 1;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.EnvelopeFollower = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.jsNode = this.output = userContext.createScriptProcessor(this.buffersize, 1, 1);\n\t\n\t        this.input.connect(this.output);\n\t\n\t        this.attackTime = initValue(properties.attackTime, this.defaults.attackTime.value);\n\t        this.releaseTime = initValue(properties.releaseTime, this.defaults.releaseTime.value);\n\t        this._envelope = 0;\n\t        this.target = properties.target || {};\n\t        this.callback = properties.callback || function() {};\n\t    };\n\t    Tuna.prototype.EnvelopeFollower.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"EnvelopeFollower\"\n\t        },\n\t        defaults: {\n\t            value: {\n\t                attackTime: {\n\t                    value: 0.003,\n\t                    min: 0,\n\t                    max: 0.5,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                releaseTime: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 0.5,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        buffersize: {\n\t            value: 256\n\t        },\n\t        envelope: {\n\t            value: 0\n\t        },\n\t        sampleRate: {\n\t            value: 44100\n\t        },\n\t        attackTime: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._attackTime;\n\t            },\n\t            set: function(value) {\n\t                this._attackTime = value;\n\t                this._attackC = Math.exp(-1 / this._attackTime * this.sampleRate / this.buffersize);\n\t            }\n\t        },\n\t        releaseTime: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._releaseTime;\n\t            },\n\t            set: function(value) {\n\t                this._releaseTime = value;\n\t                this._releaseC = Math.exp(-1 / this._releaseTime * this.sampleRate / this.buffersize);\n\t            }\n\t        },\n\t        callback: {\n\t            get: function() {\n\t                return this._callback;\n\t            },\n\t            set: function(value) {\n\t                if (typeof value === \"function\") {\n\t                    this._callback = value;\n\t                } else {\n\t                    console.error(\"tuna.js: \" + this.name + \": Callback must be a function!\");\n\t                }\n\t            }\n\t        },\n\t        target: {\n\t            get: function() {\n\t                return this._target;\n\t            },\n\t            set: function(value) {\n\t                this._target = value;\n\t            }\n\t        },\n\t        activate: {\n\t            value: function(doActivate) {\n\t                this.activated = doActivate;\n\t                if (doActivate) {\n\t                    this.jsNode.connect(userContext.destination);\n\t                    this.jsNode.onaudioprocess = this.returnCompute(this);\n\t                } else {\n\t                    this.jsNode.disconnect();\n\t                    this.jsNode.onaudioprocess = null;\n\t                }\n\t            }\n\t        },\n\t        returnCompute: {\n\t            value: function(instance) {\n\t                return function(event) {\n\t                    instance.compute(event);\n\t                };\n\t            }\n\t        },\n\t        compute: {\n\t            value: function(event) {\n\t                var count = event.inputBuffer.getChannelData(0).length,\n\t                    channels = event.inputBuffer.numberOfChannels,\n\t                    current, chan, rms, i;\n\t                chan = rms = i = 0;\n\t                if (channels > 1) { //need to mixdown\n\t                    for (i = 0; i < count; ++i) {\n\t                        for (; chan < channels; ++chan) {\n\t                            current = event.inputBuffer.getChannelData(chan)[i];\n\t                            rms += (current * current) / channels;\n\t                        }\n\t                    }\n\t                } else {\n\t                    for (i = 0; i < count; ++i) {\n\t                        current = event.inputBuffer.getChannelData(0)[i];\n\t                        rms += (current * current);\n\t                    }\n\t                }\n\t                rms = Math.sqrt(rms);\n\t\n\t                if (this._envelope < rms) {\n\t                    this._envelope *= this._attackC;\n\t                    this._envelope += (1 - this._attackC) * rms;\n\t                } else {\n\t                    this._envelope *= this._releaseC;\n\t                    this._envelope += (1 - this._releaseC) * rms;\n\t                }\n\t                this._callback(this._target, this._envelope);\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.LFO = function(properties) {\n\t        //Instantiate AudioNode\n\t        this.output = userContext.createScriptProcessor(256, 1, 1);\n\t        this.activateNode = userContext.destination;\n\t\n\t        //Set Properties\n\t        this.frequency = initValue(properties.frequency, this.defaults.frequency.value);\n\t        this.offset = initValue(properties.offset, this.defaults.offset.value);\n\t        this.oscillation = initValue(properties.oscillation, this.defaults.oscillation.value);\n\t        this.phase = initValue(properties.phase, this.defaults.phase.value);\n\t        this.target = properties.target || {};\n\t        this.output.onaudioprocess = this.callback(properties.callback || function() {});\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.LFO.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"LFO\"\n\t        },\n\t        bufferSize: {\n\t            value: 256\n\t        },\n\t        sampleRate: {\n\t            value: 44100\n\t        },\n\t        defaults: {\n\t            value: {\n\t                frequency: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 20,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                offset: {\n\t                    value: 0.85,\n\t                    min: 0,\n\t                    max: 22049,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                oscillation: {\n\t                    value: 0.3,\n\t                    min: -22050,\n\t                    max: 22050,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                phase: {\n\t                    value: 0,\n\t                    min: 0,\n\t                    max: 2 * Math.PI,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        frequency: {\n\t            get: function() {\n\t                return this._frequency;\n\t            },\n\t            set: function(value) {\n\t                this._frequency = value;\n\t                this._phaseInc = 2 * Math.PI * this._frequency * this.bufferSize / this.sampleRate;\n\t            }\n\t        },\n\t        offset: {\n\t            get: function() {\n\t                return this._offset;\n\t            },\n\t            set: function(value) {\n\t                this._offset = value;\n\t            }\n\t        },\n\t        oscillation: {\n\t            get: function() {\n\t                return this._oscillation;\n\t            },\n\t            set: function(value) {\n\t                this._oscillation = value;\n\t            }\n\t        },\n\t        phase: {\n\t            get: function() {\n\t                return this._phase;\n\t            },\n\t            set: function(value) {\n\t                this._phase = value;\n\t            }\n\t        },\n\t        target: {\n\t            get: function() {\n\t                return this._target;\n\t            },\n\t            set: function(value) {\n\t                this._target = value;\n\t            }\n\t        },\n\t        activate: {\n\t            value: function(doActivate) {\n\t                if (!doActivate) {\n\t                    this.output.disconnect(userContext.destination);\n\t                } else {\n\t                    this.output.connect(userContext.destination);\n\t                }\n\t            }\n\t        },\n\t        callback: {\n\t            value: function(callback) {\n\t                var that = this;\n\t                return function() {\n\t                    that._phase += that._phaseInc;\n\t                    if (that._phase > 2 * Math.PI) {\n\t                        that._phase = 0;\n\t                    }\n\t                    callback(that._target, that._offset + that._oscillation * Math.sin(that._phase));\n\t                };\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.toString = Tuna.prototype.toString = function() {\n\t        return \"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js\";\n\t    };\n\t})(this);\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Bus = function (_Component) {\n\t  _inherits(Bus, _Component);\n\t\n\t  function Bus(props, context) {\n\t    _classCallCheck(this, Bus);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Bus.__proto__ || Object.getPrototypeOf(Bus)).call(this, props));\n\t\n\t    _this.connectNode = context.audioContext.createGain();\n\t    _this.connectNode.gain.value = props.gain;\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Bus, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var master = this.context.getMaster();\n\t      master.busses[this.props.id] = this.connectNode;\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      var master = this.context.getMaster();\n\t      delete master.busses[this.props.id];\n\t\n\t      this.connectNode.gain.value = nextProps.gain;\n\t      master.busses[nextProps.id] = this.connectNode;\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t      delete this.context.getMaster().busses[this.props.id];\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Bus;\n\t}(_react.Component);\n\t\n\tBus.propTypes = {\n\t  children: _react.PropTypes.node,\n\t  gain: _react.PropTypes.number,\n\t  id: _react.PropTypes.string.isRequired\n\t};\n\tBus.defaultProps = {\n\t  gain: 0.5\n\t};\n\tBus.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object,\n\t  getMaster: _react.PropTypes.func\n\t};\n\tBus.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object,\n\t  getMaster: _react.PropTypes.func\n\t};\n\texports.default = Bus;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _tunajs = __webpack_require__(4);\n\t\n\tvar _tunajs2 = _interopRequireDefault(_tunajs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar Chorus = function (_Component) {\n\t  _inherits(Chorus, _Component);\n\t\n\t  function Chorus(props, context) {\n\t    _classCallCheck(this, Chorus);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Chorus.__proto__ || Object.getPrototypeOf(Chorus)).call(this, props));\n\t\n\t    var tuna = new _tunajs2.default(context.audioContext);\n\t\n\t    _this.connectNode = new tuna.Chorus({\n\t      feedback: props.feedback,\n\t      rate: props.rate,\n\t      delay: props.delay,\n\t      bypass: props.bypass\n\t    });\n\t\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Chorus, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      for (var prop in nextProps) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop] = nextProps[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Chorus;\n\t}(_react.Component);\n\t\n\tChorus.propTypes = {\n\t  bypass: _react.PropTypes.number,\n\t  children: _react.PropTypes.node,\n\t  delay: _react.PropTypes.number,\n\t  feedback: _react.PropTypes.number,\n\t  rate: _react.PropTypes.number\n\t};\n\tChorus.defaultProps = {\n\t  bypass: 0,\n\t  delay: 0.0045,\n\t  feedback: 0.2,\n\t  rate: 1.5\n\t};\n\tChorus.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tChorus.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = Chorus;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar Compressor = function (_Component) {\n\t  _inherits(Compressor, _Component);\n\t\n\t  function Compressor(props, context) {\n\t    _classCallCheck(this, Compressor);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Compressor.__proto__ || Object.getPrototypeOf(Compressor)).call(this, props));\n\t\n\t    _this.connectNode = context.audioContext.createDynamicsCompressor();\n\t    _this.connectNode.connect(context.connectNode);\n\t\n\t    _this.applyProps = _this.applyProps.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Compressor, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.applyProps(this.props);\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      this.applyProps(nextProps);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'applyProps',\n\t    value: function applyProps(props) {\n\t      for (var prop in props) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop].value = props[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Compressor;\n\t}(_react.Component);\n\t\n\tCompressor.propTypes = {\n\t  attack: _react.PropTypes.number,\n\t  children: _react.PropTypes.node,\n\t  knee: _react.PropTypes.number,\n\t  ratio: _react.PropTypes.number,\n\t  release: _react.PropTypes.number,\n\t  threshold: _react.PropTypes.number\n\t};\n\tCompressor.defaultProps = {\n\t  attack: 0.003,\n\t  knee: 32,\n\t  ratio: 12,\n\t  release: 0.25,\n\t  threshold: -24\n\t};\n\tCompressor.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tCompressor.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = Compressor;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _tunajs = __webpack_require__(4);\n\t\n\tvar _tunajs2 = _interopRequireDefault(_tunajs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar Delay = function (_Component) {\n\t  _inherits(Delay, _Component);\n\t\n\t  function Delay(props, context) {\n\t    _classCallCheck(this, Delay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Delay.__proto__ || Object.getPrototypeOf(Delay)).call(this, props));\n\t\n\t    var tuna = new _tunajs2.default(context.audioContext);\n\t\n\t    _this.connectNode = new tuna.Delay({\n\t      feedback: props.feedback,\n\t      delayTime: props.delayTime,\n\t      wetLevel: props.wetLevel,\n\t      dryLevel: props.dryLevel,\n\t      cutoff: props.cutoff,\n\t      bypass: props.bypass\n\t    });\n\t\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Delay, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      for (var prop in nextProps) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop] = nextProps[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Delay;\n\t}(_react.Component);\n\t\n\tDelay.propTypes = {\n\t  bypass: _react.PropTypes.number,\n\t  children: _react.PropTypes.node,\n\t  cutoff: _react.PropTypes.number,\n\t  delayTime: _react.PropTypes.number,\n\t  dryLevel: _react.PropTypes.number,\n\t  feedback: _react.PropTypes.number,\n\t  wetLevel: _react.PropTypes.number\n\t};\n\tDelay.defaultProps = {\n\t  bypass: 0,\n\t  cutoff: 2000,\n\t  delayTime: 150,\n\t  dryLevel: 1,\n\t  feedback: 0.45,\n\t  wetLevel: 0.25\n\t};\n\tDelay.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tDelay.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = Delay;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar Filter = function (_Component) {\n\t  _inherits(Filter, _Component);\n\t\n\t  function Filter(props, context) {\n\t    _classCallCheck(this, Filter);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Filter.__proto__ || Object.getPrototypeOf(Filter)).call(this, props));\n\t\n\t    _this.connectNode = context.audioContext.createBiquadFilter();\n\t    _this.connectNode.connect(context.connectNode);\n\t\n\t    _this.applyProps = _this.applyProps.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Filter, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.applyProps(this.props);\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      for (var prop in nextProps) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop] = nextProps[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'applyProps',\n\t    value: function applyProps(props) {\n\t      for (var prop in props) {\n\t        if (this.connectNode[prop]) {\n\t          if (_typeof(this.connectNode[prop]) === 'object') {\n\t            this.connectNode[prop].value = props[prop];\n\t          } else {\n\t            this.connectNode[prop] = props[prop];\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Filter;\n\t}(_react.Component);\n\t\n\tFilter.propTypes = {\n\t  Q: _react.PropTypes.number,\n\t  children: _react.PropTypes.node,\n\t  frequency: _react.PropTypes.number,\n\t  gain: _react.PropTypes.number,\n\t  type: _react.PropTypes.string\n\t};\n\tFilter.defaultProps = {\n\t  Q: 0,\n\t  frequency: 2000,\n\t  gain: 0,\n\t  type: 'lowpass'\n\t};\n\tFilter.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tFilter.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = Filter;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Gain = function (_Component) {\n\t  _inherits(Gain, _Component);\n\t\n\t  function Gain(props, context) {\n\t    _classCallCheck(this, Gain);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Gain.__proto__ || Object.getPrototypeOf(Gain)).call(this, props));\n\t\n\t    _this.connectNode = context.audioContext.createGain();\n\t    _this.connectNode.gain.value = props.amount;\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Gain, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      this.connectNode.gain.value = nextProps.amount;\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Gain;\n\t}(_react.Component);\n\t\n\tGain.propTypes = {\n\t  amount: _react.PropTypes.number,\n\t  children: _react.PropTypes.node\n\t};\n\tGain.defaultProps = {\n\t  amount: 0.0\n\t};\n\tGain.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tGain.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = Gain;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Synth = function (_Component) {\n\t  _inherits(Synth, _Component);\n\t\n\t  function Synth() {\n\t    _classCallCheck(this, Synth);\n\t\n\t    return _possibleConstructorReturn(this, (Synth.__proto__ || Object.getPrototypeOf(Synth)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Synth, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var volumeGain = this.context.audioContext.createGain();\n\t      volumeGain.gain.value = this.props.gain;\n\t      this.osc = this.context.audioContext.createOscillator();\n\t      this.osc.frequency.value = this.props.frequency;\n\t      this.osc.type = this.props.type;\n\t      this.osc.connect(volumeGain);\n\t      volumeGain.connect(this.props.connect(this.context.connectNode));\n\t\n\t      this.osc.start(this.context.audioContext.currentTime);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.osc.stop();\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Synth;\n\t}(_react.Component);\n\t\n\tSynth.displayName = 'Synth';\n\tSynth.propTypes = {\n\t  children: _react.PropTypes.node,\n\t  connect: _react.PropTypes.func,\n\t  frequency: _react.PropTypes.number,\n\t  gain: _react.PropTypes.number,\n\t  type: _react.PropTypes.string\n\t};\n\tSynth.defaultProps = {\n\t  connect: function connect(node) {\n\t    return node.gain;\n\t  },\n\t  frequency: 1,\n\t  gain: 0.5,\n\t  type: 'sine'\n\t};\n\tSynth.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = Synth;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _noteParser = __webpack_require__(13);\n\t\n\tvar _noteParser2 = _interopRequireDefault(_noteParser);\n\t\n\tvar _audioContour = __webpack_require__(14);\n\t\n\tvar _audioContour2 = _interopRequireDefault(_audioContour);\n\t\n\tvar _uuid = __webpack_require__(16);\n\t\n\tvar _uuid2 = _interopRequireDefault(_uuid);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Monosynth = function (_Component) {\n\t  _inherits(Monosynth, _Component);\n\t\n\t  function Monosynth(props, context) {\n\t    _classCallCheck(this, Monosynth);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Monosynth.__proto__ || Object.getPrototypeOf(Monosynth)).call(this, props));\n\t\n\t    _this.getSteps = _this.getSteps.bind(_this);\n\t    _this.playStep = _this.playStep.bind(_this);\n\t\n\t    _this.connectNode = context.audioContext.createGain();\n\t    _this.connectNode.gain.value = props.gain;\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Monosynth, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var _this2 = this;\n\t\n\t      this.id = _uuid2.default.v1();\n\t      var master = this.context.getMaster();\n\t      master.instruments[this.id] = this.getSteps;\n\t\n\t      this.amplitudeGain = this.context.audioContext.createGain();\n\t      this.amplitudeGain.gain.value = 0;\n\t      this.amplitudeGain.connect(this.connectNode);\n\t\n\t      this.osc = this.context.audioContext.createOscillator();\n\t      this.osc.type = this.props.type;\n\t      this.osc.connect(this.amplitudeGain);\n\t\n\t      if (this.props.busses) {\n\t        this.props.busses.forEach(function (bus) {\n\t          if (master.busses[bus]) {\n\t            _this2.osc.connect(master.busses[bus]);\n\t          }\n\t        });\n\t      }\n\t\n\t      this.osc.start(this.context.audioContext.currentTime);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      var master = this.context.getMaster();\n\t      delete master.instruments[this.id];\n\t      this.osc.stop();\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'getSteps',\n\t    value: function getSteps(playbackTime) {\n\t      var _this3 = this;\n\t\n\t      var totalBars = this.context.getMaster().getMaxBars();\n\t      var loopCount = totalBars / this.context.bars;\n\t\n\t      var _loop = function _loop(i) {\n\t        var barOffset = _this3.context.barInterval * _this3.context.bars * i / 1000;\n\t        var stepInterval = _this3.context.barInterval / _this3.context.resolution;\n\t        _this3.props.steps.forEach(function (step, index) {\n\t          var time = barOffset + step[0] * stepInterval / 1000;\n\t          var glide = false;\n\t\n\t          if (index !== 0) {\n\t            var lastTime = barOffset + _this3.props.steps[index - 1][0] * stepInterval / 1000;\n\t            var lastDuration = _this3.props.steps[index - 1][1] * stepInterval / 1000;\n\t            glide = lastTime + lastDuration > time;\n\t          }\n\t\n\t          _this3.context.scheduler.insert(playbackTime + time, _this3.playStep, {\n\t            time: playbackTime,\n\t            step: step,\n\t            glide: glide\n\t          });\n\t        });\n\t      };\n\t\n\t      for (var i = 0; i < loopCount; i++) {\n\t        _loop(i);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'createOscillator',\n\t    value: function createOscillator() {\n\t      var _arguments = Array.prototype.slice.call(arguments);\n\t\n\t      var time = _arguments[0];\n\t      var note = _arguments[1];\n\t      var duration = _arguments[2];\n\t      var glide = _arguments[3];\n\t\n\t      var transposed = note.slice(0, -1) + (parseInt(note[note.length - 1], 0) + parseInt(this.props.transpose, 0));\n\t\n\t      var env = (0, _audioContour2.default)(this.context.audioContext, {\n\t        attack: this.props.envelope.attack,\n\t        decay: this.props.envelope.decay,\n\t        sustain: this.props.envelope.sustain,\n\t        release: this.props.envelope.release\n\t      });\n\t\n\t      env.connect(this.amplitudeGain.gain);\n\t      this.osc.frequency.setTargetAtTime(_noteParser2.default.freq(transposed), time, glide ? this.props.glide : 0.001);\n\t\n\t      env.start(time);\n\t      env.stop(this.context.audioContext.currentTime + duration);\n\t    }\n\t  }, {\n\t    key: 'playStep',\n\t    value: function playStep(e) {\n\t      var _e$args = e.args;\n\t      var step = _e$args.step;\n\t      var glide = _e$args.glide;\n\t      var time = _e$args.time;\n\t\n\t      var note = step[2];\n\t      var stepInterval = this.context.barInterval / this.context.resolution;\n\t      var duration = step[1] * stepInterval / 1000;\n\t      this.createOscillator(time, note, duration, glide);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Monosynth;\n\t}(_react.Component);\n\t\n\tMonosynth.displayName = 'Synth';\n\tMonosynth.propTypes = {\n\t  busses: _react.PropTypes.array,\n\t  children: _react.PropTypes.node,\n\t  envelope: _react.PropTypes.shape({\n\t    attack: _react.PropTypes.number,\n\t    decay: _react.PropTypes.number,\n\t    sustain: _react.PropTypes.number,\n\t    release: _react.PropTypes.number\n\t  }),\n\t  gain: _react.PropTypes.number,\n\t  glide: _react.PropTypes.number,\n\t  steps: _react.PropTypes.array.isRequired,\n\t  transpose: _react.PropTypes.number,\n\t  type: _react.PropTypes.string.isRequired\n\t};\n\tMonosynth.defaultProps = {\n\t  envelope: {\n\t    attack: 0.01,\n\t    decay: 0.2,\n\t    sustain: 0.2,\n\t    release: 0.2\n\t  },\n\t  gain: 0.5,\n\t  glide: 0.1,\n\t  transpose: 0\n\t};\n\tMonosynth.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  bars: _react.PropTypes.number,\n\t  barInterval: _react.PropTypes.number,\n\t  connectNode: _react.PropTypes.object,\n\t  getMaster: _react.PropTypes.func,\n\t  resolution: _react.PropTypes.number,\n\t  scheduler: _react.PropTypes.object,\n\t  tempo: _react.PropTypes.number\n\t};\n\tMonosynth.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  bars: _react.PropTypes.number,\n\t  barInterval: _react.PropTypes.number,\n\t  connectNode: _react.PropTypes.object,\n\t  getMaster: _react.PropTypes.func,\n\t  resolution: _react.PropTypes.number,\n\t  scheduler: _react.PropTypes.object,\n\t  tempo: _react.PropTypes.number\n\t};\n\texports.default = Monosynth;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\t// util\n\tfunction fillStr (s, num) { return Array(num + 1).join(s) }\n\tfunction isNum (x) { return typeof x === 'number' }\n\tfunction isStr (x) { return typeof x === 'string' }\n\tfunction isDef (x) { return typeof x !== 'undefined' }\n\tfunction midiToFreq (midi, tuning) {\n\t  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n\t}\n\t\n\tvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n\t/**\n\t * A regex for matching note strings in scientific notation.\n\t *\n\t * @name regex\n\t * @function\n\t * @return {RegExp} the regexp used to parse the note name\n\t *\n\t * The note string should have the form `letter[accidentals][octave][element]`\n\t * where:\n\t *\n\t * - letter: (Required) is a letter from A to G either upper or lower case\n\t * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n\t * They can NOT be mixed.\n\t * - octave: (Optional) a positive or negative integer\n\t * - element: (Optional) additionally anything after the duration is considered to\n\t * be the element name (for example: 'C2 dorian')\n\t *\n\t * The executed regex contains (by array index):\n\t *\n\t * - 0: the complete string\n\t * - 1: the note letter\n\t * - 2: the optional accidentals\n\t * - 3: the optional octave\n\t * - 4: the rest of the string (trimmed)\n\t *\n\t * @example\n\t * var parser = require('note-parser')\n\t * parser.regex.exec('c#4')\n\t * // => ['c#4', 'c', '#', '4', '']\n\t * parser.regex.exec('c#4 major')\n\t * // => ['c#4major', 'c', '#', '4', 'major']\n\t * parser.regex().exec('CMaj7')\n\t * // => ['CMaj7', 'C', '', '', 'Maj7']\n\t */\n\tfunction regex () { return REGEX }\n\t\n\tvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n\t/**\n\t * Parse a note name in scientific notation an return it's components,\n\t * and some numeric properties including midi number and frequency.\n\t *\n\t * @name parse\n\t * @function\n\t * @param {String} note - the note string to be parsed\n\t * @param {Boolean} isTonic - true the strings it's supposed to contain a note number\n\t * and some category (for example an scale: 'C# major'). It's false by default,\n\t * but when true, en extra tonicOf property is returned with the category ('major')\n\t * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n\t * By default it 440.\n\t * @return {Object} the parsed note name or null if not a valid note\n\t *\n\t * The parsed note name object will ALWAYS contains:\n\t * - letter: the uppercase letter of the note\n\t * - acc: the accidentals of the note (only sharps or flats)\n\t * - pc: the pitch class (letter + acc)\n\t * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n\t * where 0 = C, 1 = D ... 6 = B\n\t * - alt: a numeric representation of the accidentals. 0 means no alteration,\n\t * positive numbers are for sharps and negative for flats\n\t * - chroma: a numeric representation of the pitch class. It's like midi for\n\t * pitch classes. 0 = C, 1 = C#, 2 = D ... 11 = B. Can be used to find enharmonics\n\t * since, for example, chroma of 'Cb' and 'B' are both 11\n\t *\n\t * If the note has octave, the parser object will contain:\n\t * - oct: the octave number (as integer)\n\t * - midi: the midi number\n\t * - freq: the frequency (using tuning parameter as base)\n\t *\n\t * If the parameter `isTonic` is set to true, the parsed object will contain:\n\t * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n\t *\n\t * @example\n\t * var parse = require('note-parser').parse\n\t * parse('Cb4')\n\t * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n\t *         oct: 4, midi: 59, freq: 246.94165062806206 }\n\t * // if no octave, no midi, no freq\n\t * parse('fx')\n\t * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n\t */\n\tfunction parse (str, isTonic, tuning) {\n\t  if (typeof str !== 'string') return null\n\t  var m = REGEX.exec(str)\n\t  if (!m || !isTonic && m[4]) return null\n\t\n\t  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n\t  p.pc = p.letter + p.acc\n\t  p.step = (p.letter.charCodeAt(0) + 3) % 7\n\t  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n\t  var pos = SEMITONES[p.step] + p.alt\n\t  p.chroma = pos < 0 ? 12 + pos : pos % 12\n\t  if (m[3]) { // has octave\n\t    p.oct = +m[3]\n\t    p.midi = pos + 12 * (p.oct + 1)\n\t    p.freq = midiToFreq(p.midi, tuning)\n\t  }\n\t  if (isTonic) p.tonicOf = m[4]\n\t  return p\n\t}\n\t\n\tvar LETTERS = 'CDEFGAB'\n\tfunction acc (n) { return !isNum(n) ? '' : n < 0 ? fillStr('b', -n) : fillStr('#', n) }\n\tfunction oct (n) { return !isNum(n) ? '' : '' + n }\n\t\n\t/**\n\t * Create a string from a parsed object or `step, alteration, octave` parameters\n\t * @param {Object} obj - the parsed data object\n\t * @return {String} a note string or null if not valid parameters\n\t * @since 1.2\n\t * @example\n\t * parser.build(parser.parse('cb2')) // => 'Cb2'\n\t *\n\t * @example\n\t * // it accepts (step, alteration, octave) parameters:\n\t * parser.build(3) // => 'F'\n\t * parser.build(3, -1) // => 'Fb'\n\t * parser.build(3, -1, 4) // => 'Fb4'\n\t */\n\tfunction build (s, a, o) {\n\t  if (s === null || typeof s === 'undefined') return null\n\t  if (s.step) return build(s.step, s.alt, s.oct)\n\t  if (s < 0 || s > 6) return null\n\t  return LETTERS.charAt(s) + acc(a) + oct(o)\n\t}\n\t\n\t/**\n\t * Get midi of a note\n\t *\n\t * @name midi\n\t * @function\n\t * @param {String|Integer} note - the note name or midi number\n\t * @return {Integer} the midi number of the note or null if not a valid note\n\t * or the note does NOT contains octave\n\t * @example\n\t * var parser = require('note-parser')\n\t * parser.midi('A4') // => 69\n\t * parser.midi('A') // => null\n\t * @example\n\t * // midi numbers are bypassed (even as strings)\n\t * parser.midi(60) // => 60\n\t * parser.midi('60') // => 60\n\t */\n\tfunction midi (note) {\n\t  if ((isNum(note) || isStr(note)) && note >= 0 && note < 128) return +note\n\t  var p = parse(note)\n\t  return p && isDef(p.midi) ? p.midi : null\n\t}\n\t\n\t/**\n\t * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n\t *\n\t * @name freq\n\t * @function\n\t * @param {String} note - the note name or note midi number\n\t * @param {String} tuning - (Optional) the A4 frequency (440 by default)\n\t * @return {Float} the freq of the number if hertzs or null if not valid note\n\t * @example\n\t * var parser = require('note-parser')\n\t * parser.freq('A4') // => 440\n\t * parser.freq('A') // => null\n\t * @example\n\t * // can change tuning (440 by default)\n\t * parser.freq('A4', 444) // => 444\n\t * parser.freq('A3', 444) // => 222\n\t * @example\n\t * // it accepts midi numbers (as numbers and as strings)\n\t * parser.freq(69) // => 440\n\t * parser.freq('69', 442) // => 442\n\t */\n\tfunction freq (note, tuning) {\n\t  var m = midi(note)\n\t  return m === null ? null : midiToFreq(m, tuning)\n\t}\n\t\n\tvar parser = { parse: parse, build: build, regex: regex, midi: midi, freq: freq }\n\t// add additional functions, one for each object property\n\tvar FNS = ['letter', 'acc', 'pc', 'step', 'alt', 'chroma', 'oct']\n\tFNS.forEach(function (name) {\n\t  parser[name] = function (src) {\n\t    var p = parse(src)\n\t    return p && isDef(p[name]) ? p[name] : null\n\t  }\n\t})\n\t\n\tmodule.exports = parser\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\tvar Voltage = __webpack_require__(15)\n\tvar isNum = function (n) { return typeof n === 'number' }\n\t\n\tvar NUMS = ['duration', 't1', 't2', 't3', 't4', 'l1', 'l2', 'l3']\n\tvar DEFAULTS = {\n\t  duration: Infinity, l1: 1, l2: 0.2, l3: 0.8,\n\t  t1: 0.01, t2: 0.1, t3: 0, t4: 0.2\n\t}\n\t\n\tfunction rampFn (l) {\n\t  return l ? 'linearRampToValueAtTime' : 'exponentialRampToValueAtTime'\n\t}\n\tfunction ramp (l, node, level, time) { node.gain[rampFn(l)](level, time) }\n\t\n\t/**\n\t * Create an envelope generator.\n\t * @param {AudioContext} ac - the audio context\n\t * @param {Object} options - (Optional) the envelope options\n\t * @return {AudioNode} the envelope generator node\n\t */\n\tfunction Contour (ac, options) {\n\t  var env = ac.createGain()\n\t  var opts = Contour.params(options, env)\n\t  var isL = opts.ramp === 'linear'\n\t\n\t  var tail = ac.createGain()\n\t  tail.connect(env)\n\t  var head = ac.createGain()\n\t  head.connect(tail)\n\t  var cv = Voltage(ac)\n\t  cv.connect(head)\n\t\n\t  env.start = function (time) {\n\t    time = Math.max(time || 0, ac.currentTime)\n\t    if (env.onstart) env.onstart(time)\n\t    cv.start(time)\n\t    head.gain.setValueAtTime(0, time)\n\t    head.gain.setValueAtTime(0.01, time + 0.000001)\n\t    ramp(isL, head, opts.l1, time + opts.t1)\n\t    ramp(isL, head, opts.l2, time + opts.t1 + opts.t2)\n\t    ramp(isL, head, opts.l3, time + opts.t1 + opts.t2 + opts.t3)\n\t    if (isFinite(opts.duration)) env.stop(time + opts.duration)\n\t  }\n\t\n\t  env.stop = function (time) {\n\t    time = Math.max(time || 0, ac.currentTime)\n\t    tail.gain.cancelScheduledValues(time)\n\t    tail.gain.setValueAtTime(env.gain.value, time)\n\t    var endsAt = time + opts.t4\n\t    ramp(isL, tail, 0.0001, endsAt)\n\t    if (env.onended) {\n\t      var s = Voltage(ac, 0)\n\t      s.connect(ac.destination)\n\t      s.onended = env.onended\n\t      s.start(ac.currentTime)\n\t      s.stop(endsAt)\n\t    }\n\t    return endsAt\n\t  }\n\t  return env\n\t}\n\t\n\tContour.params = function (options, dest) {\n\t  dest = dest || {}\n\t  options = options || {}\n\t  NUMS.forEach(function (name) {\n\t    dest[name] = isNum(options[name]) ? options[name] : DEFAULTS[name]\n\t  })\n\t  if (isNum(options.attack)) dest.t1 = options.attack\n\t  if (isNum(options.decay)) dest.t2 = options.decay\n\t  if (isNum(options.sustain)) dest.l3 = options.sustain\n\t  if (isNum(options.release)) dest.t4 = options.release\n\t  dest.ramp = options.ramp === 'exponential' ? options.ramp : 'linear'\n\t  return dest\n\t}\n\t\n\tmodule.exports = Contour\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\tmodule.exports = function (ac, value) {\n\t  value = (value || value === 0) ? value : 1\n\t  var buffer = ac.createBuffer(1, 2, ac.sampleRate)\n\t  var data = buffer.getChannelData(0)\n\t  data[0] = data[1] = value\n\t  var source = ac.createBufferSource()\n\t  source.buffer = buffer\n\t  source.loop = true\n\t  return source\n\t}\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//     uuid.js\n\t//\n\t//     Copyright (c) 2010-2012 Robert Kieffer\n\t//     MIT License - http://opensource.org/licenses/mit-license.php\n\t\n\t// Unique ID creation requires a high quality random # generator.  We feature\n\t// detect to determine the best RNG source, normalizing to a function that\n\t// returns 128-bits of randomness, since that's what's usually required\n\tvar _rng = __webpack_require__(17);\n\t\n\t// Maps for number <-> hex string conversion\n\tvar _byteToHex = [];\n\tvar _hexToByte = {};\n\tfor (var i = 0; i < 256; i++) {\n\t  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n\t  _hexToByte[_byteToHex[i]] = i;\n\t}\n\t\n\t// **`parse()` - Parse a UUID into it's component bytes**\n\tfunction parse(s, buf, offset) {\n\t  var i = (buf && offset) || 0, ii = 0;\n\t\n\t  buf = buf || [];\n\t  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n\t    if (ii < 16) { // Don't overflow!\n\t      buf[i + ii++] = _hexToByte[oct];\n\t    }\n\t  });\n\t\n\t  // Zero out remaining bytes if string was short\n\t  while (ii < 16) {\n\t    buf[i + ii++] = 0;\n\t  }\n\t\n\t  return buf;\n\t}\n\t\n\t// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n\tfunction unparse(buf, offset) {\n\t  var i = offset || 0, bth = _byteToHex;\n\t  return  bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]];\n\t}\n\t\n\t// **`v1()` - Generate time-based UUID**\n\t//\n\t// Inspired by https://github.com/LiosK/UUID.js\n\t// and http://docs.python.org/library/uuid.html\n\t\n\t// random #'s we need to init node and clockseq\n\tvar _seedBytes = _rng();\n\t\n\t// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n\tvar _nodeId = [\n\t  _seedBytes[0] | 0x01,\n\t  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n\t];\n\t\n\t// Per 4.2.2, randomize (14 bit) clockseq\n\tvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\t\n\t// Previous uuid creation time\n\tvar _lastMSecs = 0, _lastNSecs = 0;\n\t\n\t// See https://github.com/broofa/node-uuid for API details\n\tfunction v1(options, buf, offset) {\n\t  var i = buf && offset || 0;\n\t  var b = buf || [];\n\t\n\t  options = options || {};\n\t\n\t  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\t\n\t  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n\t  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n\t  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n\t  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\t  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\t\n\t  // Per 4.2.1.2, use count of uuid's generated during the current clock\n\t  // cycle to simulate higher resolution clock\n\t  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\t\n\t  // Time since last uuid creation (in msecs)\n\t  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\t\n\t  // Per 4.2.1.2, Bump clockseq on clock regression\n\t  if (dt < 0 && options.clockseq === undefined) {\n\t    clockseq = clockseq + 1 & 0x3fff;\n\t  }\n\t\n\t  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n\t  // time interval\n\t  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n\t    nsecs = 0;\n\t  }\n\t\n\t  // Per 4.2.1.2 Throw error if too many uuids are requested\n\t  if (nsecs >= 10000) {\n\t    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n\t  }\n\t\n\t  _lastMSecs = msecs;\n\t  _lastNSecs = nsecs;\n\t  _clockseq = clockseq;\n\t\n\t  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\t  msecs += 12219292800000;\n\t\n\t  // `time_low`\n\t  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n\t  b[i++] = tl >>> 24 & 0xff;\n\t  b[i++] = tl >>> 16 & 0xff;\n\t  b[i++] = tl >>> 8 & 0xff;\n\t  b[i++] = tl & 0xff;\n\t\n\t  // `time_mid`\n\t  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n\t  b[i++] = tmh >>> 8 & 0xff;\n\t  b[i++] = tmh & 0xff;\n\t\n\t  // `time_high_and_version`\n\t  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\t  b[i++] = tmh >>> 16 & 0xff;\n\t\n\t  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\t  b[i++] = clockseq >>> 8 | 0x80;\n\t\n\t  // `clock_seq_low`\n\t  b[i++] = clockseq & 0xff;\n\t\n\t  // `node`\n\t  var node = options.node || _nodeId;\n\t  for (var n = 0; n < 6; n++) {\n\t    b[i + n] = node[n];\n\t  }\n\t\n\t  return buf ? buf : unparse(b);\n\t}\n\t\n\t// **`v4()` - Generate random UUID**\n\t\n\t// See https://github.com/broofa/node-uuid for API details\n\tfunction v4(options, buf, offset) {\n\t  // Deprecated - 'format' argument, as supported in v1.2\n\t  var i = buf && offset || 0;\n\t\n\t  if (typeof(options) == 'string') {\n\t    buf = options == 'binary' ? new Array(16) : null;\n\t    options = null;\n\t  }\n\t  options = options || {};\n\t\n\t  var rnds = options.random || (options.rng || _rng)();\n\t\n\t  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n\t  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\t\n\t  // Copy bytes to buffer, if provided\n\t  if (buf) {\n\t    for (var ii = 0; ii < 16; ii++) {\n\t      buf[i + ii] = rnds[ii];\n\t    }\n\t  }\n\t\n\t  return buf || unparse(rnds);\n\t}\n\t\n\t// Export public API\n\tvar uuid = v4;\n\tuuid.v1 = v1;\n\tuuid.v4 = v4;\n\tuuid.parse = parse;\n\tuuid.unparse = unparse;\n\t\n\tmodule.exports = uuid;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tvar rng;\n\t\n\tif (global.crypto && crypto.getRandomValues) {\n\t  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n\t  // Moderately fast, high quality\n\t  var _rnds8 = new Uint8Array(16);\n\t  rng = function whatwgRNG() {\n\t    crypto.getRandomValues(_rnds8);\n\t    return _rnds8;\n\t  };\n\t}\n\t\n\tif (!rng) {\n\t  // Math.random()-based (RNG)\n\t  //\n\t  // If all else fails, use Math.random().  It's fast, but is of unspecified\n\t  // quality.\n\t  var  _rnds = new Array(16);\n\t  rng = function() {\n\t    for (var i = 0, r; i < 16; i++) {\n\t      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n\t      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n\t    }\n\t\n\t    return _rnds;\n\t  };\n\t}\n\t\n\tmodule.exports = rng;\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _tunajs = __webpack_require__(4);\n\t\n\tvar _tunajs2 = _interopRequireDefault(_tunajs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar MoogFilter = function (_Component) {\n\t  _inherits(MoogFilter, _Component);\n\t\n\t  function MoogFilter(props, context) {\n\t    _classCallCheck(this, MoogFilter);\n\t\n\t    var _this = _possibleConstructorReturn(this, (MoogFilter.__proto__ || Object.getPrototypeOf(MoogFilter)).call(this, props));\n\t\n\t    var tuna = new _tunajs2.default(context.audioContext);\n\t\n\t    _this.connectNode = new tuna.MoogFilter({\n\t      cutoff: props.cutoff,\n\t      resonance: props.resonance,\n\t      bufferSize: props.bufferSize\n\t    });\n\t\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(MoogFilter, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      for (var prop in nextProps) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop] = nextProps[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return MoogFilter;\n\t}(_react.Component);\n\t\n\tMoogFilter.propTypes = {\n\t  bufferSize: _react.PropTypes.number,\n\t  children: _react.PropTypes.node,\n\t  cutoff: _react.PropTypes.number,\n\t  resonance: _react.PropTypes.number\n\t};\n\tMoogFilter.defaultProps = {\n\t  bufferSize: 4096,\n\t  cutoff: 0.065,\n\t  resonance: 3.5\n\t};\n\tMoogFilter.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tMoogFilter.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = MoogFilter;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _tunajs = __webpack_require__(4);\n\t\n\tvar _tunajs2 = _interopRequireDefault(_tunajs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar Overdrive = function (_Component) {\n\t  _inherits(Overdrive, _Component);\n\t\n\t  function Overdrive(props, context) {\n\t    _classCallCheck(this, Overdrive);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Overdrive.__proto__ || Object.getPrototypeOf(Overdrive)).call(this, props));\n\t\n\t    var tuna = new _tunajs2.default(context.audioContext);\n\t\n\t    _this.connectNode = new tuna.Overdrive({\n\t      outputGain: props.outputGain,\n\t      drive: props.drive,\n\t      curveAmount: props.curveAmount,\n\t      algorithmIndex: props.algorithmIndex,\n\t      bypass: props.bypass\n\t    });\n\t\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Overdrive, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      for (var prop in nextProps) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop] = nextProps[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Overdrive;\n\t}(_react.Component);\n\t\n\tOverdrive.propTypes = {\n\t  algorithmIndex: _react.PropTypes.number,\n\t  bypass: _react.PropTypes.number,\n\t  children: _react.PropTypes.node,\n\t  curveAmount: _react.PropTypes.number,\n\t  drive: _react.PropTypes.number,\n\t  outputGain: _react.PropTypes.number\n\t};\n\tOverdrive.defaultProps = {\n\t  algorithmIndex: 0,\n\t  bypass: 0,\n\t  curveAmount: 1,\n\t  drive: 0.7,\n\t  outputGain: 0.5\n\t};\n\tOverdrive.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tOverdrive.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = Overdrive;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _tunajs = __webpack_require__(4);\n\t\n\tvar _tunajs2 = _interopRequireDefault(_tunajs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar Phaser = function (_Component) {\n\t  _inherits(Phaser, _Component);\n\t\n\t  function Phaser(props, context) {\n\t    _classCallCheck(this, Phaser);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Phaser.__proto__ || Object.getPrototypeOf(Phaser)).call(this, props));\n\t\n\t    var tuna = new _tunajs2.default(context.audioContext);\n\t\n\t    _this.connectNode = new tuna.Phaser({\n\t      rate: props.rate,\n\t      depth: props.depth,\n\t      feedback: props.feedback,\n\t      stereoPhase: props.stereoPhase,\n\t      baseModulationFrequency: props.baseModulationFrequency,\n\t      bypass: props.bypass\n\t    });\n\t\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Phaser, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      for (var prop in nextProps) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop] = nextProps[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Phaser;\n\t}(_react.Component);\n\t\n\tPhaser.propTypes = {\n\t  baseModulationFrequency: _react.PropTypes.number,\n\t  bypass: _react.PropTypes.number,\n\t  children: _react.PropTypes.node,\n\t  depth: _react.PropTypes.number,\n\t  feedback: _react.PropTypes.number,\n\t  rate: _react.PropTypes.number,\n\t  stereoPhase: _react.PropTypes.number\n\t};\n\tPhaser.defaultProps = {\n\t  baseModulationFrequency: 700,\n\t  bypass: 0,\n\t  depth: 0.3,\n\t  feedback: 0.2,\n\t  rate: 1.2,\n\t  stereoPhase: 30\n\t};\n\tPhaser.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tPhaser.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object };\n\texports.default = Phaser;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _tunajs = __webpack_require__(4);\n\t\n\tvar _tunajs2 = _interopRequireDefault(_tunajs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar PingPong = function (_Component) {\n\t  _inherits(PingPong, _Component);\n\t\n\t  function PingPong(props, context) {\n\t    _classCallCheck(this, PingPong);\n\t\n\t    var _this = _possibleConstructorReturn(this, (PingPong.__proto__ || Object.getPrototypeOf(PingPong)).call(this, props));\n\t\n\t    var tuna = new _tunajs2.default(context.audioContext);\n\t\n\t    _this.connectNode = new tuna.PingPongDelay({\n\t      wetLevel: props.wetLevel,\n\t      feedback: props.feedback,\n\t      delayTimeLeft: props.delayTimeLeft,\n\t      delayTimeRight: props.delayTimeRight\n\t    });\n\t\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(PingPong, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      for (var prop in nextProps) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop] = nextProps[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return PingPong;\n\t}(_react.Component);\n\t\n\tPingPong.propTypes = {\n\t  children: _react.PropTypes.node,\n\t  delayTimeLeft: _react.PropTypes.number,\n\t  delayTimeRight: _react.PropTypes.number,\n\t  feedback: _react.PropTypes.number,\n\t  wetLevel: _react.PropTypes.number\n\t};\n\tPingPong.defaultProps = {\n\t  delayTimeLeft: 150,\n\t  delayTimeRight: 200,\n\t  feedback: 0.3,\n\t  wetLevel: 0.5\n\t};\n\tPingPong.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tPingPong.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = PingPong;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _tunajs = __webpack_require__(4);\n\t\n\tvar _tunajs2 = _interopRequireDefault(_tunajs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-restricted-syntax */\n\t\n\t\n\tvar Reverb = function (_Component) {\n\t  _inherits(Reverb, _Component);\n\t\n\t  function Reverb(props, context) {\n\t    _classCallCheck(this, Reverb);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Reverb.__proto__ || Object.getPrototypeOf(Reverb)).call(this, props));\n\t\n\t    var tuna = new _tunajs2.default(context.audioContext);\n\t\n\t    _this.connectNode = new tuna.Convolver({\n\t      highCut: props.highCut,\n\t      lowCut: props.lowCut,\n\t      dryLevel: props.dryLevel,\n\t      wetLevel: props.wetLevel,\n\t      level: props.level,\n\t      impulse: props.impulse,\n\t      bypass: props.bypass\n\t    });\n\t\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Reverb, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      for (var prop in nextProps) {\n\t        if (this.connectNode[prop]) {\n\t          this.connectNode[prop] = nextProps[prop];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Reverb;\n\t}(_react.Component);\n\t\n\tReverb.propTypes = {\n\t  bypass: _react.PropTypes.number,\n\t  children: _react.PropTypes.node,\n\t  dryLevel: _react.PropTypes.number,\n\t  highCut: _react.PropTypes.number,\n\t  impulse: _react.PropTypes.string,\n\t  level: _react.PropTypes.number,\n\t  lowCut: _react.PropTypes.number,\n\t  wetLevel: _react.PropTypes.number\n\t};\n\tReverb.defaultProps = {\n\t  bypass: 0,\n\t  dryLevel: 1,\n\t  highCut: 22050,\n\t  impulse: 'reverb/room.wav',\n\t  level: 1,\n\t  lowCut: 20,\n\t  wetLevel: 1\n\t};\n\tReverb.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\tReverb.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  connectNode: _react.PropTypes.object\n\t};\n\texports.default = Reverb;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _uuid = __webpack_require__(16);\n\t\n\tvar _uuid2 = _interopRequireDefault(_uuid);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Sequencer = function (_Component) {\n\t  _inherits(Sequencer, _Component);\n\t\n\t  function Sequencer() {\n\t    _classCallCheck(this, Sequencer);\n\t\n\t    return _possibleConstructorReturn(this, (Sequencer.__proto__ || Object.getPrototypeOf(Sequencer)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Sequencer, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        bars: this.props.bars,\n\t        resolution: this.props.resolution\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.id = _uuid2.default.v1();\n\t      var master = this.context.getMaster();\n\t      master.bars[this.id] = this.props.bars;\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      var master = this.context.getMaster();\n\t      master.bars[this.id] = nextProps.bars;\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      delete this.context.getMaster().bars[this.id];\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Sequencer;\n\t}(_react.Component);\n\t\n\tSequencer.propTypes = {\n\t  bars: _react.PropTypes.number,\n\t  children: _react.PropTypes.node,\n\t  resolution: _react.PropTypes.number\n\t};\n\tSequencer.defaultProps = {\n\t  bars: 1,\n\t  resolution: 16\n\t};\n\tSequencer.contextTypes = {\n\t  getMaster: _react.PropTypes.func\n\t};\n\tSequencer.childContextTypes = {\n\t  bars: _react.PropTypes.number,\n\t  getMaster: _react.PropTypes.func,\n\t  resolution: _react.PropTypes.number\n\t};\n\texports.default = Sequencer;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _uuid = __webpack_require__(16);\n\t\n\tvar _uuid2 = _interopRequireDefault(_uuid);\n\t\n\tvar _bufferLoader = __webpack_require__(25);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Sampler = function (_Component) {\n\t  _inherits(Sampler, _Component);\n\t\n\t  function Sampler(props, context) {\n\t    _classCallCheck(this, Sampler);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Sampler.__proto__ || Object.getPrototypeOf(Sampler)).call(this, props));\n\t\n\t    _this.buffer = null;\n\t    _this.bufferLoaded = _this.bufferLoaded.bind(_this);\n\t    _this.getSteps = _this.getSteps.bind(_this);\n\t    _this.playStep = _this.playStep.bind(_this);\n\t\n\t    _this.connectNode = context.audioContext.createGain();\n\t    _this.connectNode.gain.value = props.gain;\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Sampler, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.id = _uuid2.default.v1();\n\t\n\t      var master = this.context.getMaster();\n\t      master.instruments[this.id] = this.getSteps;\n\t      master.buffers[this.id] = 1;\n\t\n\t      var bufferLoader = new _bufferLoader.BufferLoader(this.context.audioContext, [this.props.sample], this.bufferLoaded);\n\t\n\t      bufferLoader.load();\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      this.connectNode.gain.value = nextProps.gain;\n\t      if (this.props.sample !== nextProps.sample) {\n\t        var master = this.context.getMaster();\n\t        delete master.buffers[this.id];\n\t\n\t        this.id = _uuid2.default.v1();\n\t        master.buffers[this.id] = 1;\n\t\n\t        var bufferLoader = new _bufferLoader.BufferLoader(this.context.audioContext, [nextProps.sample], this.bufferLoaded);\n\t\n\t        bufferLoader.load();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      var master = this.context.getMaster();\n\t\n\t      delete master.buffers[this.id];\n\t      delete master.instruments[this.id];\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'getSteps',\n\t    value: function getSteps(playbackTime) {\n\t      var _this2 = this;\n\t\n\t      var totalBars = this.context.getMaster().getMaxBars();\n\t      var loopCount = totalBars / this.context.bars;\n\t\n\t      var _loop = function _loop(i) {\n\t        var barOffset = _this2.context.barInterval * _this2.context.bars * i / 1000;\n\t        var stepInterval = _this2.context.barInterval / _this2.context.resolution;\n\t\n\t        _this2.props.steps.forEach(function (step) {\n\t          var stepValue = Array.isArray(step) ? step[0] : step;\n\t          var time = barOffset + stepValue * stepInterval / 1000;\n\t\n\t          _this2.context.scheduler.insert(playbackTime + time, _this2.playStep, {\n\t            time: playbackTime,\n\t            step: step\n\t          });\n\t        });\n\t      };\n\t\n\t      for (var i = 0; i < loopCount; i++) {\n\t        _loop(i);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'playStep',\n\t    value: function playStep(e) {\n\t      var _this3 = this;\n\t\n\t      var source = this.context.audioContext.createBufferSource();\n\t      source.buffer = this.buffer;\n\t      if (source.detune) {\n\t        if (Array.isArray(e.args.step)) {\n\t          source.detune.value = (this.props.detune + e.args.step[1]) * 100;\n\t        } else {\n\t          source.detune.value = this.props.detune;\n\t        }\n\t      }\n\t      source.connect(this.connectNode);\n\t\n\t      if (this.props.busses) {\n\t        (function () {\n\t          var master = _this3.context.getMaster();\n\t          _this3.props.busses.forEach(function (bus) {\n\t            if (master.busses[bus]) {\n\t              source.connect(master.busses[bus]);\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      source.start(e.args.playbackTime);\n\t      this.context.scheduler.nextTick(e.args.playbackTime + this.buffer.duration, function () {\n\t        source.disconnect();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'bufferLoaded',\n\t    value: function bufferLoaded(_ref) {\n\t      var _ref2 = _slicedToArray(_ref, 1);\n\t\n\t      var buffer = _ref2[0];\n\t\n\t      this.buffer = buffer;\n\t      var master = this.context.getMaster();\n\t      delete master.buffers[this.id];\n\t      this.context.bufferLoaded();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Sampler;\n\t}(_react.Component);\n\t\n\tSampler.displayName = 'Sampler';\n\tSampler.propTypes = {\n\t  busses: _react.PropTypes.array,\n\t  children: _react.PropTypes.node,\n\t  detune: _react.PropTypes.number,\n\t  gain: _react.PropTypes.number,\n\t  sample: _react.PropTypes.string.isRequired,\n\t  steps: _react.PropTypes.array.isRequired\n\t};\n\tSampler.defaultProps = {\n\t  detune: 0,\n\t  gain: 0.5\n\t};\n\tSampler.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  bars: _react.PropTypes.number,\n\t  barInterval: _react.PropTypes.number,\n\t  bufferLoaded: _react.PropTypes.func,\n\t  connectNode: _react.PropTypes.object,\n\t  getMaster: _react.PropTypes.func,\n\t  resolution: _react.PropTypes.number,\n\t  scheduler: _react.PropTypes.object,\n\t  tempo: _react.PropTypes.number\n\t};\n\tSampler.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  bars: _react.PropTypes.number,\n\t  barInterval: _react.PropTypes.number,\n\t  bufferLoaded: _react.PropTypes.func,\n\t  connectNode: _react.PropTypes.object,\n\t  getMaster: _react.PropTypes.func,\n\t  resolution: _react.PropTypes.number,\n\t  scheduler: _react.PropTypes.object,\n\t  tempo: _react.PropTypes.number\n\t};\n\texports.default = Sampler;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/* eslint-disable no-console */\n\tvar BufferLoader = exports.BufferLoader = function BufferLoader(context, urlList, callback) {\n\t  this.context = context;\n\t  this.urlList = urlList;\n\t  this.onload = callback;\n\t  this.bufferList = [];\n\t  this.loadCount = 0;\n\t};\n\t\n\tBufferLoader.prototype.loadBuffer = function loadBuffer(url, index) {\n\t  var request = new XMLHttpRequest();\n\t  request.open('GET', url, true);\n\t  request.responseType = 'arraybuffer';\n\t\n\t  var self = this;\n\t\n\t  request.onload = function onload() {\n\t    self.context.decodeAudioData(request.response, function (buffer) {\n\t      if (!buffer) {\n\t        console.error('error decoding file data: ' + url);\n\t        return;\n\t      }\n\t      self.bufferList[index] = buffer;\n\t      if (++self.loadCount === self.urlList.length) {\n\t        self.onload(self.bufferList);\n\t      }\n\t    }, function (error) {\n\t      console.error('decodeAudioData error', error);\n\t    });\n\t  };\n\t\n\t  request.onerror = function onError() {\n\t    console.error('BufferLoader: XHR error');\n\t  };\n\t\n\t  request.send();\n\t};\n\t\n\tBufferLoader.prototype.load = function load() {\n\t  for (var i = 0; i < this.urlList.length; ++i) {\n\t    this.loadBuffer(this.urlList[i], i);\n\t  }\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _scheduler = __webpack_require__(27);\n\t\n\tvar _scheduler2 = _interopRequireDefault(_scheduler);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-loop-func, react/no-did-mount-set-state */\n\t\n\t\n\tvar Song = function (_Component) {\n\t  _inherits(Song, _Component);\n\t\n\t  function Song(props) {\n\t    _classCallCheck(this, Song);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Song.__proto__ || Object.getPrototypeOf(Song)).call(this, props));\n\t\n\t    _this.state = {\n\t      buffersLoaded: false\n\t    };\n\t\n\t    _this.barInterval = 60000 / props.tempo * 4;\n\t    _this.bars = {};\n\t    _this.buffers = {};\n\t    _this.instruments = {};\n\t    _this.busses = {};\n\t\n\t    _this.loop = _this.loop.bind(_this);\n\t    _this.bufferLoaded = _this.bufferLoaded.bind(_this);\n\t    _this.getMaster = _this.getMaster.bind(_this);\n\t    _this.getMaxBars = _this.getMaxBars.bind(_this);\n\t\n\t    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n\t    _this.audioContext = new AudioContext();\n\t\n\t    _this.scheduler = new _scheduler2.default({\n\t      context: _this.audioContext\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Song, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return {\n\t        tempo: this.props.tempo,\n\t        audioContext: this.audioContext,\n\t        barInterval: this.barInterval,\n\t        bufferLoaded: this.bufferLoaded,\n\t        connectNode: this.audioContext.destination,\n\t        getMaster: this.getMaster,\n\t        scheduler: this.scheduler\n\t      };\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      if (Object.keys(this.buffers).length === 0) {\n\t        this.setState({\n\t          buffersLoaded: true\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      this.barInterval = 60000 / nextProps.tempo * 4;\n\t    }\n\t  }, {\n\t    key: 'componentDidUpdate',\n\t    value: function componentDidUpdate(prevProps, prevState) {\n\t      var _this2 = this;\n\t\n\t      if (prevState.buffersLoaded !== this.state.buffersLoaded || prevProps.playing !== this.props.playing) {\n\t        if (this.state.buffersLoaded === true && this.props.playing === true) {\n\t          setTimeout(function () {\n\t            _this2.scheduler.start(_this2.loop);\n\t          }, 0);\n\t        } else {\n\t          this.scheduler.stop(true);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getMaster',\n\t    value: function getMaster() {\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getMaxBars',\n\t    value: function getMaxBars() {\n\t      var _this3 = this;\n\t\n\t      return Math.max.apply(Math, _toConsumableArray(Object.keys(this.bars).map(function (b) {\n\t        return _this3.bars[b];\n\t      })));\n\t    }\n\t  }, {\n\t    key: 'bufferLoaded',\n\t    value: function bufferLoaded() {\n\t      if (Object.keys(this.buffers).length === 0) {\n\t        this.setState({\n\t          buffersLoaded: true\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'loop',\n\t    value: function loop(e) {\n\t      var _this4 = this;\n\t\n\t      var maxBars = Object.keys(this.bars).length ? this.getMaxBars() : 1;\n\t      Object.keys(this.instruments).forEach(function (id) {\n\t        var callback = _this4.instruments[id];\n\t        callback(e.playbackTime);\n\t      });\n\t      this.scheduler.insert(e.playbackTime + this.barInterval * maxBars / 1000, this.loop);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Song;\n\t}(_react.Component);\n\t\n\tSong.propTypes = {\n\t  children: _react.PropTypes.node,\n\t  playing: _react.PropTypes.bool,\n\t  tempo: _react.PropTypes.number\n\t};\n\tSong.defaultProps = {\n\t  playing: false,\n\t  tempo: 90\n\t};\n\tSong.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  barInterval: _react.PropTypes.number,\n\t  bufferLoaded: _react.PropTypes.func,\n\t  connectNode: _react.PropTypes.object,\n\t  getMaster: _react.PropTypes.func,\n\t  scheduler: _react.PropTypes.object,\n\t  tempo: _react.PropTypes.number\n\t};\n\texports.default = Song;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Scheduler = function () {\n\t  function Scheduler(opts) {\n\t    _classCallCheck(this, Scheduler);\n\t\n\t    this.context = opts.context;\n\t    this.interval = 0.025;\n\t    this.aheadTime = 0.0;\n\t    this.playbackTime = this.currentTime;\n\t\n\t    this.timerID = 0;\n\t    this.scheduleID = 0;\n\t    this.schedules = [];\n\t  }\n\t\n\t  _createClass(Scheduler, [{\n\t    key: 'start',\n\t    value: function start(callback, args) {\n\t      var _this = this;\n\t\n\t      var loop = function loop() {\n\t        var t0 = _this.context.currentTime;\n\t        var t1 = t0 + _this.aheadTime;\n\t\n\t        _this.process(t0, t1);\n\t      };\n\t\n\t      if (this.timerID === 0) {\n\t        this.timerID = setInterval(loop, this.interval * 1000);\n\t\n\t        if (callback) {\n\t          this.insert(this.context.currentTime, callback, args);\n\t          loop();\n\t        }\n\t      } else {\n\t        this.insert(this.context.currentTime, callback, args);\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop(reset) {\n\t      if (this.timerID !== 0) {\n\t        clearInterval(this.timerID);\n\t        this.timerID = 0;\n\t      }\n\t\n\t      if (reset) {\n\t        this.schedules.splice(0);\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'insert',\n\t    value: function insert(time, callback, args) {\n\t      var id = ++this.scheduleID;\n\t      var event = { id: id, time: time, callback: callback, args: args };\n\t\n\t      if (this.schedules.length === 0 || this.schedules[this.schedules.length - 1].time <= time) {\n\t        this.schedules.push(event);\n\t      } else {\n\t        for (var i = 0, imax = this.schedules.length; i < imax; i++) {\n\t          if (time < this.schedules[i].time) {\n\t            this.schedules.splice(i, 0, event);\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return id;\n\t    }\n\t  }, {\n\t    key: 'nextTick',\n\t    value: function nextTick(time, callback, args) {\n\t      return this.insert(time + this.aheadTime, callback, args);\n\t    }\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(scheduleID) {\n\t      if (typeof scheduleID === 'number') {\n\t        for (var i = 0, imax = this.schedules.length; i < imax; i++) {\n\t          if (scheduleID === this.schedules[i].id) {\n\t            this.schedules.splice(i, 1);\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return scheduleID;\n\t    }\n\t  }, {\n\t    key: 'removeAll',\n\t    value: function removeAll() {\n\t      this.schedules.splice(0);\n\t    }\n\t  }, {\n\t    key: 'process',\n\t    value: function process(t0, t1) {\n\t      this.playbackTime = t0;\n\t\n\t      while (this.schedules.length && this.schedules[0].time < t1) {\n\t        var event = this.schedules.shift();\n\t        var playbackTime = event.time;\n\t        var args = event.args;\n\t\n\t        this.playbackTime = playbackTime;\n\t\n\t        event.callback({ playbackTime: playbackTime, args: args });\n\t      }\n\t\n\t      this.playbackTime = t0;\n\t    }\n\t  }]);\n\t\n\t  return Scheduler;\n\t}();\n\t\n\texports.default = Scheduler;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _noteParser = __webpack_require__(13);\n\t\n\tvar _noteParser2 = _interopRequireDefault(_noteParser);\n\t\n\tvar _audioContour = __webpack_require__(14);\n\t\n\tvar _audioContour2 = _interopRequireDefault(_audioContour);\n\t\n\tvar _uuid = __webpack_require__(16);\n\t\n\tvar _uuid2 = _interopRequireDefault(_uuid);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable max-statements */\n\t\n\t\n\tvar Synth = function (_Component) {\n\t  _inherits(Synth, _Component);\n\t\n\t  function Synth(props, context) {\n\t    _classCallCheck(this, Synth);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Synth.__proto__ || Object.getPrototypeOf(Synth)).call(this, props));\n\t\n\t    _this.getSteps = _this.getSteps.bind(_this);\n\t    _this.playStep = _this.playStep.bind(_this);\n\t\n\t    _this.connectNode = context.audioContext.createGain();\n\t    _this.connectNode.gain.value = props.gain;\n\t    _this.connectNode.connect(context.connectNode);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Synth, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return _extends({}, this.context, {\n\t        connectNode: this.connectNode\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.id = _uuid2.default.v1();\n\t      var master = this.context.getMaster();\n\t      master.instruments[this.id] = this.getSteps;\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      this.connectNode.gain.value = nextProps.gain;\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      var master = this.context.getMaster();\n\t      delete master.instruments[this.id];\n\t      this.connectNode.disconnect();\n\t    }\n\t  }, {\n\t    key: 'getSteps',\n\t    value: function getSteps(playbackTime) {\n\t      var _this2 = this;\n\t\n\t      var totalBars = this.context.getMaster().getMaxBars();\n\t      var loopCount = totalBars / this.context.bars;\n\t\n\t      var _loop = function _loop(i) {\n\t        var barOffset = _this2.context.barInterval * _this2.context.bars * i / 1000;\n\t        var stepInterval = _this2.context.barInterval / _this2.context.resolution;\n\t        _this2.props.steps.forEach(function (step) {\n\t          var time = barOffset + step[0] * stepInterval / 1000;\n\t\n\t          _this2.context.scheduler.insert(playbackTime + time, _this2.playStep, {\n\t            time: playbackTime,\n\t            step: step\n\t          });\n\t        });\n\t      };\n\t\n\t      for (var i = 0; i < loopCount; i++) {\n\t        _loop(i);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'createOscillator',\n\t    value: function createOscillator(time, note, duration) {\n\t      var _this3 = this;\n\t\n\t      var amplitudeGain = this.context.audioContext.createGain();\n\t      amplitudeGain.gain.value = 0;\n\t      amplitudeGain.connect(this.connectNode);\n\t\n\t      var env = (0, _audioContour2.default)(this.context.audioContext, {\n\t        attack: this.props.envelope.attack,\n\t        decay: this.props.envelope.decay,\n\t        sustain: this.props.envelope.sustain,\n\t        release: this.props.envelope.release\n\t      });\n\t\n\t      env.connect(amplitudeGain.gain);\n\t\n\t      var osc = this.context.audioContext.createOscillator();\n\t      var transposed = note.slice(0, -1) + (parseInt(note[note.length - 1], 0) + parseInt(this.props.transpose, 0));\n\t\n\t      osc.frequency.value = _noteParser2.default.freq(transposed);\n\t      osc.type = this.props.type;\n\t      osc.connect(amplitudeGain);\n\t\n\t      if (this.props.busses) {\n\t        (function () {\n\t          var master = _this3.context.getMaster();\n\t          _this3.props.busses.forEach(function (bus) {\n\t            if (master.busses[bus]) {\n\t              osc.connect(master.busses[bus]);\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      osc.start(time);\n\t      env.start(time);\n\t\n\t      var finish = env.stop(this.context.audioContext.currentTime + duration);\n\t      osc.stop(finish);\n\t    }\n\t  }, {\n\t    key: 'playStep',\n\t    value: function playStep(e) {\n\t      var _this4 = this;\n\t\n\t      var _e$args = e.args;\n\t      var step = _e$args.step;\n\t      var time = _e$args.time;\n\t\n\t      var notes = step[2];\n\t      var stepInterval = this.context.barInterval / this.context.resolution;\n\t      var duration = step[1] * stepInterval / 1000;\n\t\n\t      if (Array.isArray(notes)) {\n\t        notes.forEach(function (n) {\n\t          _this4.createOscillator(time, n, duration);\n\t        });\n\t      } else {\n\t        this.createOscillator(time, notes, duration);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Synth;\n\t}(_react.Component);\n\t\n\tSynth.displayName = 'Synth';\n\tSynth.propTypes = {\n\t  busses: _react.PropTypes.array,\n\t  children: _react.PropTypes.node,\n\t  envelope: _react.PropTypes.shape({\n\t    attack: _react.PropTypes.number,\n\t    decay: _react.PropTypes.number,\n\t    sustain: _react.PropTypes.number,\n\t    release: _react.PropTypes.number\n\t  }),\n\t  gain: _react.PropTypes.number,\n\t  steps: _react.PropTypes.array.isRequired,\n\t  transpose: _react.PropTypes.number,\n\t  type: _react.PropTypes.string.isRequired\n\t};\n\tSynth.defaultProps = {\n\t  envelope: {\n\t    attack: 0.01,\n\t    decay: 0.2,\n\t    sustain: 0.2,\n\t    release: 0.2\n\t  },\n\t  gain: 0.5,\n\t  transpose: 0\n\t};\n\tSynth.contextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  bars: _react.PropTypes.number,\n\t  barInterval: _react.PropTypes.number,\n\t  connectNode: _react.PropTypes.object,\n\t  getMaster: _react.PropTypes.func,\n\t  resolution: _react.PropTypes.number,\n\t  scheduler: _react.PropTypes.object,\n\t  tempo: _react.PropTypes.number\n\t};\n\tSynth.childContextTypes = {\n\t  audioContext: _react.PropTypes.object,\n\t  bars: _react.PropTypes.number,\n\t  barInterval: _react.PropTypes.number,\n\t  connectNode: _react.PropTypes.object,\n\t  getMaster: _react.PropTypes.func,\n\t  resolution: _react.PropTypes.number,\n\t  scheduler: _react.PropTypes.object,\n\t  tempo: _react.PropTypes.number\n\t};\n\texports.default = Synth;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-music.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f89acc090e3d0e77fa16\n **/","import Analyser from './components/analyser.js';\nimport Bitcrusher from './components/bitcrusher.js';\nimport Bus from './components/bus.js';\nimport Chorus from './components/chorus.js';\nimport Compressor from './components/compressor.js';\nimport Delay from './components/delay.js';\nimport Filter from './components/filter.js';\nimport Gain from './components/gain.js';\nimport LFO from './components/lfo.js';\nimport Monosynth from './components/monosynth.js';\nimport MoogFilter from './components/moog-filter.js';\nimport Overdrive from './components/overdrive.js';\nimport Phaser from './components/phaser.js';\nimport PingPong from './components/ping-pong.js';\nimport Reverb from './components/reverb.js';\nimport Sequencer from './components/sequencer.js';\nimport Sampler from './components/sampler.js';\nimport Song from './components/song.js';\nimport Synth from './components/synth.js';\n\nexport {\n  Analyser,\n  Bus,\n  Bitcrusher,\n  Chorus,\n  Compressor,\n  Delay,\n  Filter,\n  Gain,\n  LFO,\n  MoogFilter,\n  Monosynth,\n  Overdrive,\n  Phaser,\n  PingPong,\n  Reverb,\n  Sequencer,\n  Sampler,\n  Song,\n  Synth,\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\n\nexport default class Sequencer extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    fftSize: PropTypes.number,\n    onAudioProcess: PropTypes.func,\n    smoothingTimeConstant: PropTypes.number,\n  };\n  static defaultProps = {\n    fftSize: 128,\n    onAudioProcess: () => {},\n    smoothingTimeConstant: 0.3,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    this.visualization = context.audioContext.createScriptProcessor(2048, 1, 1);\n    this.visualization.connect(context.audioContext.destination);\n\n    this.connectNode = context.audioContext.createAnalyser();\n    this.connectNode.connect(context.connectNode);\n    this.applyProps = this.applyProps.bind(this);\n\n    this.visualization.onaudioprocess = () => {\n      props.onAudioProcess(this.connectNode);\n    };\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentDidMount() {\n    this.applyProps(this.props);\n  }\n  componentWillReceiveProps(nextProps) {\n    this.applyProps(nextProps);\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  applyProps(props) {\n    for (const prop in props) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop] = props[prop];\n      }\n    }\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/analyser.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 2\n ** module chunks = 0\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\nimport Tuna from 'tunajs';\n\nexport default class Bitcrusher extends Component {\n  static propTypes = {\n    bits: PropTypes.number,\n    bufferSize: PropTypes.number,\n    children: PropTypes.node,\n    normfreq: PropTypes.number,\n  };\n  static defaultProps = {\n    bits: 4,\n    bufferSize: 4096,\n    normfreq: 0.1,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    const tuna = new Tuna(context.audioContext);\n\n    this.connectNode = new tuna.Bitcrusher({\n      bits: props.bits,\n      normfreq: props.normfreq,\n      bufferSize: props.bufferSize,\n    });\n\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    for (const prop in nextProps) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop] = nextProps[prop];\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/bitcrusher.js\n **/","/*\n    Copyright (c) 2012 DinahMoe AB & Oskar Eriksson\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy,\n    modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\n    is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n/*global module*/\n(function(window) {\n\n    var userContext,\n        userInstance,\n        pipe = function(param, val) {\n            param.value = val;\n        },\n        Super = Object.create(null, {\n            activate: {\n                writable: true,\n                value: function(doActivate) {\n                    if (doActivate) {\n                        this.input.disconnect();\n                        this.input.connect(this.activateNode);\n                        if (this.activateCallback) {\n                            this.activateCallback(doActivate);\n                        }\n                    } else {\n                        this.input.disconnect();\n                        this.input.connect(this.output);\n                    }\n                }\n            },\n            bypass: {\n                get: function() {\n                    return this._bypass;\n                },\n                set: function(value) {\n                    if (this._lastBypassValue === value) {\n                        return;\n                    }\n                    this._bypass = value;\n                    this.activate(!value);\n                    this._lastBypassValue = value;\n                }\n            },\n            connect: {\n                value: function(target) {\n                    this.output.connect(target);\n                }\n            },\n            disconnect: {\n                value: function(target) {\n                    this.output.disconnect(target);\n                }\n            },\n            connectInOrder: {\n                value: function(nodeArray) {\n                    var i = nodeArray.length - 1;\n                    while (i--) {\n                        if (!nodeArray[i].connect) {\n                            return console.error(\"AudioNode.connectInOrder: TypeError: Not an AudioNode.\", nodeArray[i]);\n                        }\n                        if (nodeArray[i + 1].input) {\n                            nodeArray[i].connect(nodeArray[i + 1].input);\n                        } else {\n                            nodeArray[i].connect(nodeArray[i + 1]);\n                        }\n                    }\n                }\n            },\n            getDefaults: {\n                value: function() {\n                    var result = {};\n                    for (var key in this.defaults) {\n                        result[key] = this.defaults[key].value;\n                    }\n                    return result;\n                }\n            },\n            automate: {\n                value: function(property, value, duration, startTime) {\n                    var start = startTime ? ~~(startTime / 1000) : userContext.currentTime,\n                        dur = duration ? ~~(duration / 1000) : 0,\n                        _is = this.defaults[property],\n                        param = this[property],\n                        method;\n\n                    if (param) {\n                        if (_is.automatable) {\n                            if (!duration) {\n                                method = \"setValueAtTime\";\n                            } else {\n                                method = \"linearRampToValueAtTime\";\n                                param.cancelScheduledValues(start);\n                                param.setValueAtTime(param.value, start);\n                            }\n                            param[method](value, dur + start);\n                        } else {\n                            param = value;\n                        }\n                    } else {\n                        console.error(\"Invalid Property for \" + this.name);\n                    }\n                }\n            }\n        }),\n        FLOAT = \"float\",\n        BOOLEAN = \"boolean\",\n        STRING = \"string\",\n        INT = \"int\";\n\n    if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = Tuna;\n    } else if (typeof define === \"function\") {\n        window.define(\"Tuna\", definition);\n    } else {\n        window.Tuna = Tuna;\n    }\n\n    function definition() {\n        return Tuna;\n    }\n\n    function Tuna(context) {\n        if (!(this instanceof Tuna)) {\n            return new Tuna(context);\n        }\n        if (!window.AudioContext) {\n            window.AudioContext = window.webkitAudioContext;\n        }\n        if (!context) {\n            console.log(\"tuna.js: Missing audio context! Creating a new context for you.\");\n            context = window.AudioContext && (new window.AudioContext());\n        }\n        if (!context) {\n            throw new Error(\"Tuna cannot initialize because this environment does not support web audio.\");\n        }\n        connectify(context);\n        userContext = context;\n        userInstance = this;\n    }\n\n    function connectify(context) {\n        if (context.__connectified__ === true) return;\n\n        var gain = context.createGain(),\n            proto = Object.getPrototypeOf(Object.getPrototypeOf(gain)),\n            oconnect = proto.connect;\n\n        proto.connect = shimConnect;\n        context.__connectified__ = true; // Prevent overriding connect more than once\n\n        function shimConnect() {\n            var node = arguments[0];\n            arguments[0] = Super.isPrototypeOf ? (Super.isPrototypeOf(node) ? node.input : node) : (node.input || node);\n            oconnect.apply(this, arguments);\n            return node;\n        }\n    }\n\n    function dbToWAVolume(db) {\n        return Math.max(0, Math.round(100 * Math.pow(2, db / 6)) / 100);\n    }\n\n    function fmod(x, y) {\n        // http://kevin.vanzonneveld.net\n        // *     example 1: fmod(5.7, 1.3);\n        // *     returns 1: 0.5\n        var tmp, tmp2, p = 0,\n            pY = 0,\n            l = 0.0,\n            l2 = 0.0;\n\n        tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/);\n        p = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n        tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/);\n        pY = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n\n        if (pY > p) {\n            p = pY;\n        }\n\n        tmp2 = (x % y);\n\n        if (p < -100 || p > 20) {\n            // toFixed will give an out of bound error so we fix it like this:\n            l = Math.round(Math.log(tmp2) / Math.log(10));\n            l2 = Math.pow(10, l);\n\n            return (tmp2 / l2).toFixed(l - p) * l2;\n        } else {\n            return parseFloat(tmp2.toFixed(-p));\n        }\n    }\n\n    function sign(x) {\n        if (x === 0) {\n            return 1;\n        } else {\n            return Math.abs(x) / x;\n        }\n    }\n\n    function tanh(n) {\n        return (Math.exp(n) - Math.exp(-n)) / (Math.exp(n) + Math.exp(-n));\n    }\n\n    function initValue(userVal, defaultVal) {\n        return userVal === undefined ? defaultVal : userVal;\n    }\n\n    Tuna.prototype.Bitcrusher = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;\n\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.processor);\n        this.processor.connect(this.output);\n\n        var phaser = 0,\n            last = 0,\n            input, output, step, i, length;\n        this.processor.onaudioprocess = function(e) {\n            input = e.inputBuffer.getChannelData(0),\n            output = e.outputBuffer.getChannelData(0),\n            step = Math.pow(1 / 2, this.bits);\n            length = input.length;\n            for (i = 0; i < length; i++) {\n                phaser += this.normfreq;\n                if (phaser >= 1.0) {\n                    phaser -= 1.0;\n                    last = step * Math.floor(input[i] / step + 0.5);\n                }\n                output[i] = last;\n            }\n        };\n\n        this.bits = properties.bits || this.defaults.bits.value;\n        this.normfreq = initValue(properties.normfreq, this.defaults.normfreq.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Bitcrusher.prototype = Object.create(Super, {\n        name: {\n            value: \"Bitcrusher\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                bits: {\n                    value: 4,\n                    min: 1,\n                    max: 16,\n                    automatable: false,\n                    type: INT\n                },\n                bufferSize: {\n                    value: 4096,\n                    min: 256,\n                    max: 16384,\n                    automatable: false,\n                    type: INT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                normfreq: {\n                    value: 0.1,\n                    min: 0.0001,\n                    max: 1.0,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        bits: {\n            enumerable: true,\n            get: function() {\n                return this.processor.bits;\n            },\n            set: function(value) {\n                this.processor.bits = value;\n            }\n        },\n        normfreq: {\n            enumerable: true,\n            get: function() {\n                return this.processor.normfreq;\n            },\n            set: function(value) {\n                this.processor.normfreq = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Cabinet = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.convolver = this.newConvolver(properties.impulsePath || \"../impulses/impulse_guitar.wav\");\n        this.makeupNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.convolver.input);\n        this.convolver.output.connect(this.makeupNode);\n        this.makeupNode.connect(this.output);\n\n        this.makeupGain = initValue(properties.makeupGain, this.defaults.makeupGain);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Cabinet.prototype = Object.create(Super, {\n        name: {\n            value: \"Cabinet\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                makeupGain: {\n                    value: 1,\n                    min: 0,\n                    max: 20,\n                    automatable: true,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        makeupGain: {\n            enumerable: true,\n            get: function() {\n                return this.makeupNode.gain;\n            },\n            set: function(value) {\n                this.makeupNode.gain.value = value;\n            }\n        },\n        newConvolver: {\n            value: function(impulsePath) {\n                return new userInstance.Convolver({\n                    impulse: impulsePath,\n                    dryLevel: 0,\n                    wetLevel: 1\n                });\n            }\n        }\n    });\n\n    Tuna.prototype.Chorus = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.attenuator = this.activateNode = userContext.createGain();\n        this.splitter = userContext.createChannelSplitter(2);\n        this.delayL = userContext.createDelay();\n        this.delayR = userContext.createDelay();\n        this.feedbackGainNodeLR = userContext.createGain();\n        this.feedbackGainNodeRL = userContext.createGain();\n        this.merger = userContext.createChannelMerger(2);\n        this.output = userContext.createGain();\n\n        this.lfoL = new userInstance.LFO({\n            target: this.delayL.delayTime,\n            callback: pipe\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.delayR.delayTime,\n            callback: pipe\n        });\n\n        this.input.connect(this.attenuator);\n        this.attenuator.connect(this.output);\n        this.attenuator.connect(this.splitter);\n        this.splitter.connect(this.delayL, 0);\n        this.splitter.connect(this.delayR, 1);\n        this.delayL.connect(this.feedbackGainNodeLR);\n        this.delayR.connect(this.feedbackGainNodeRL);\n        this.feedbackGainNodeLR.connect(this.delayR);\n        this.feedbackGainNodeRL.connect(this.delayL);\n        this.delayL.connect(this.merger, 0, 0);\n        this.delayR.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n\n        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n        this.rate = initValue(properties.rate, this.defaults.rate.value);\n        this.delay = initValue(properties.delay, this.defaults.delay.value);\n        this.depth = initValue(properties.depth, this.defaults.depth.value);\n        this.lfoR.phase = Math.PI / 2;\n        this.attenuator.gain.value = 0.6934; // 1 / (10 ^ (((20 * log10(3)) / 3) / 20))\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Chorus.prototype = Object.create(Super, {\n        name: {\n            value: \"Chorus\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                feedback: {\n                    value: 0.4,\n                    min: 0,\n                    max: 0.95,\n                    automatable: false,\n                    type: FLOAT\n                },\n                delay: {\n                    value: 0.0045,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                depth: {\n                    value: 0.7,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                rate: {\n                    value: 1.5,\n                    min: 0,\n                    max: 8,\n                    automatable: false,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        delay: {\n            enumerable: true,\n            get: function() {\n                return this._delay;\n            },\n            set: function(value) {\n                this._delay = 0.0002 * (Math.pow(10, value) * 2);\n                this.lfoL.offset = this._delay;\n                this.lfoR.offset = this._delay;\n                this._depth = this._depth;\n            }\n        },\n        depth: {\n            enumerable: true,\n            get: function() {\n                return this._depth;\n            },\n            set: function(value) {\n                this._depth = value;\n                this.lfoL.oscillation = this._depth * this._delay;\n                this.lfoR.oscillation = this._depth * this._delay;\n            }\n        },\n        feedback: {\n            enumerable: true,\n            get: function() {\n                return this._feedback;\n            },\n            set: function(value) {\n                this._feedback = value;\n                this.feedbackGainNodeLR.gain.value = this._feedback;\n                this.feedbackGainNodeRL.gain.value = this._feedback;\n            }\n        },\n        rate: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        }\n    });\n\n    Tuna.prototype.Compressor = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.compNode = this.activateNode = userContext.createDynamicsCompressor();\n        this.makeupNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.compNode.connect(this.makeupNode);\n        this.makeupNode.connect(this.output);\n\n        this.automakeup = initValue(properties.automakeup, this.defaults.automakeup.value);\n        this.makeupGain = initValue(properties.makeupGain, this.defaults.makeupGain.value);\n        this.threshold = initValue(properties.threshold, this.defaults.threshold.value);\n        this.release = initValue(properties.release, this.defaults.release.value);\n        this.attack = initValue(properties.attack, this.defaults.attack.value);\n        this.ratio = properties.ratio || this.defaults.ratio.value;\n        this.knee = initValue(properties.knee, this.defaults.knee.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Compressor.prototype = Object.create(Super, {\n        name: {\n            value: \"Compressor\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                threshold: {\n                    value: -20,\n                    min: -60,\n                    max: 0,\n                    automatable: true,\n                    type: FLOAT\n                },\n                release: {\n                    value: 250,\n                    min: 10,\n                    max: 2000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                makeupGain: {\n                    value: 1,\n                    min: 1,\n                    max: 100,\n                    automatable: true,\n                    type: FLOAT\n                },\n                attack: {\n                    value: 1,\n                    min: 0,\n                    max: 1000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                ratio: {\n                    value: 4,\n                    min: 1,\n                    max: 50,\n                    automatable: true,\n                    type: FLOAT\n                },\n                knee: {\n                    value: 5,\n                    min: 0,\n                    max: 40,\n                    automatable: true,\n                    type: FLOAT\n                },\n                automakeup: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        computeMakeup: {\n            value: function() {\n                var magicCoefficient = 4, // raise me if the output is too hot\n                    c = this.compNode;\n                return -(c.threshold.value - c.threshold.value / c.ratio.value) / magicCoefficient;\n            }\n        },\n        automakeup: {\n            enumerable: true,\n            get: function() {\n                return this._automakeup;\n            },\n            set: function(value) {\n                this._automakeup = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        threshold: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.threshold;\n            },\n            set: function(value) {\n                this.compNode.threshold.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        ratio: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.ratio;\n            },\n            set: function(value) {\n                this.compNode.ratio.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        knee: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.knee;\n            },\n            set: function(value) {\n                this.compNode.knee.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        attack: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.attack;\n            },\n            set: function(value) {\n                this.compNode.attack.value = value / 1000;\n            }\n        },\n        release: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.release;\n            },\n            set: function(value) {\n                this.compNode.release.value = value / 1000;\n            }\n        },\n        makeupGain: {\n            enumerable: true,\n            get: function() {\n                return this.makeupNode.gain;\n            },\n            set: function(value) {\n                this.makeupNode.gain.value = dbToWAVolume(value);\n            }\n        }\n    });\n\n    Tuna.prototype.Convolver = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.convolver = userContext.createConvolver();\n        this.dry = userContext.createGain();\n        this.filterLow = userContext.createBiquadFilter();\n        this.filterHigh = userContext.createBiquadFilter();\n        this.wet = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.filterLow);\n        this.activateNode.connect(this.dry);\n        this.filterLow.connect(this.filterHigh);\n        this.filterHigh.connect(this.convolver);\n        this.convolver.connect(this.wet);\n        this.wet.connect(this.output);\n        this.dry.connect(this.output);\n\n        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);\n        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);\n        this.highCut = properties.highCut || this.defaults.highCut.value;\n        this.buffer = properties.impulse || \"../impulses/ir_rev_short.wav\";\n        this.lowCut = properties.lowCut || this.defaults.lowCut.value;\n        this.level = initValue(properties.level, this.defaults.level.value);\n        this.filterHigh.type = \"lowpass\";\n        this.filterLow.type = \"highpass\";\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Convolver.prototype = Object.create(Super, {\n        name: {\n            value: \"Convolver\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                highCut: {\n                    value: 22050,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                lowCut: {\n                    value: 20,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                dryLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                level: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                }\n            }\n        },\n        lowCut: {\n            get: function() {\n                return this.filterLow.frequency;\n            },\n            set: function(value) {\n                this.filterLow.frequency.value = value;\n            }\n        },\n        highCut: {\n            get: function() {\n                return this.filterHigh.frequency;\n            },\n            set: function(value) {\n                this.filterHigh.frequency.value = value;\n            }\n        },\n        level: {\n            get: function() {\n                return this.output.gain;\n            },\n            set: function(value) {\n                this.output.gain.value = value;\n            }\n        },\n        dryLevel: {\n            get: function() {\n                return this.dry.gain;\n            },\n            set: function(value) {\n                this.dry.gain.value = value;\n            }\n        },\n        wetLevel: {\n            get: function() {\n                return this.wet.gain;\n            },\n            set: function(value) {\n                this.wet.gain.value = value;\n            }\n        },\n        buffer: {\n            enumerable: false,\n            get: function() {\n                return this.convolver.buffer;\n            },\n            set: function(impulse) {\n                var convolver = this.convolver,\n                    xhr = new XMLHttpRequest();\n                if (!impulse) {\n                    console.log(\"Tuna.Convolver.setBuffer: Missing impulse path!\");\n                    return;\n                }\n                xhr.open(\"GET\", impulse, true);\n                xhr.responseType = \"arraybuffer\";\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status < 300 && xhr.status > 199 || xhr.status === 302) {\n                            userContext.decodeAudioData(xhr.response, function(buffer) {\n                                convolver.buffer = buffer;\n                            }, function(e) {\n                                if (e) console.log(\"Tuna.Convolver.setBuffer: Error decoding data\" + e);\n                            });\n                        }\n                    }\n                };\n                xhr.send(null);\n            }\n        }\n    });\n\n    Tuna.prototype.Delay = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.dry = userContext.createGain();\n        this.wet = userContext.createGain();\n        this.filter = userContext.createBiquadFilter();\n        this.delay = userContext.createDelay();\n        this.feedbackNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.delay);\n        this.activateNode.connect(this.dry);\n        this.delay.connect(this.filter);\n        this.filter.connect(this.feedbackNode);\n        this.feedbackNode.connect(this.delay);\n        this.feedbackNode.connect(this.wet);\n        this.wet.connect(this.output);\n        this.dry.connect(this.output);\n\n        this.delayTime = properties.delayTime || this.defaults.delayTime.value;\n        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);\n        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);\n        this.cutoff = properties.cutoff || this.defaults.cutoff.value;\n        this.filter.type = \"lowpass\";\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Delay.prototype = Object.create(Super, {\n        name: {\n            value: \"Delay\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                delayTime: {\n                    value: 100,\n                    min: 20,\n                    max: 1000,\n                    automatable: false,\n                    type: FLOAT\n                },\n                feedback: {\n                    value: 0.45,\n                    min: 0,\n                    max: 0.9,\n                    automatable: true,\n                    type: FLOAT\n                },\n                cutoff: {\n                    value: 20000,\n                    min: 20,\n                    max: 20000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                dryLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                }\n            }\n        },\n        delayTime: {\n            enumerable: true,\n            get: function() {\n                return this.delay.delayTime;\n            },\n            set: function(value) {\n                this.delay.delayTime.value = value / 1000;\n            }\n        },\n        wetLevel: {\n            enumerable: true,\n            get: function() {\n                return this.wet.gain;\n            },\n            set: function(value) {\n                this.wet.gain.value = value;\n            }\n        },\n        dryLevel: {\n            enumerable: true,\n            get: function() {\n                return this.dry.gain;\n            },\n            set: function(value) {\n                this.dry.gain.value = value;\n            }\n        },\n        feedback: {\n            enumerable: true,\n            get: function() {\n                return this.feedbackNode.gain;\n            },\n            set: function(value) {\n                this.feedbackNode.gain.value = value;\n            }\n        },\n        cutoff: {\n            enumerable: true,\n            get: function() {\n                return this.filter.frequency;\n            },\n            set: function(value) {\n                this.filter.frequency.value = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Filter = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.filter = userContext.createBiquadFilter();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.filter);\n        this.filter.connect(this.output);\n\n        this.frequency = properties.frequency || this.defaults.frequency.value;\n        this.Q = properties.resonance || this.defaults.Q.value;\n        this.filterType = initValue(properties.filterType, this.defaults.filterType.value);\n        this.gain = initValue(properties.gain, this.defaults.gain.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Filter.prototype = Object.create(Super, {\n        name: {\n            value: \"Filter\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                frequency: {\n                    value: 800,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                Q: {\n                    value: 1,\n                    min: 0.001,\n                    max: 100,\n                    automatable: true,\n                    type: FLOAT\n                },\n                gain: {\n                    value: 0,\n                    min: -40,\n                    max: 40,\n                    automatable: true,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                filterType: {\n                    value: \"lowpass\",\n                    automatable: false,\n                    type: STRING\n                }\n            }\n        },\n        filterType: {\n            enumerable: true,\n            get: function() {\n                return this.filter.type;\n            },\n            set: function(value) {\n                this.filter.type = value;\n            }\n        },\n        Q: {\n            enumerable: true,\n            get: function() {\n                return this.filter.Q;\n            },\n            set: function(value) {\n                this.filter.Q.value = value;\n            }\n        },\n        gain: {\n            enumerable: true,\n            get: function() {\n                return this.filter.gain;\n            },\n            set: function(value) {\n                this.filter.gain.value = value;\n            }\n        },\n        frequency: {\n            enumerable: true,\n            get: function() {\n                return this.filter.frequency;\n            },\n            set: function(value) {\n                this.filter.frequency.value = value;\n            }\n        }\n    });\n\n    Tuna.prototype.MoogFilter = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;\n\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.processor);\n        this.processor.connect(this.output);\n\n        var in1, in2, in3, in4, out1, out2, out3, out4;\n        in1 = in2 = in3 = in4 = out1 = out2 = out3 = out4 = 0.0;\n        var input, output, f, fb, i, length, inputFactor;\n        this.processor.onaudioprocess = function(e) {\n            input = e.inputBuffer.getChannelData(0),\n                output = e.outputBuffer.getChannelData(0),\n                f = this.cutoff * 1.16,\n                inputFactor = 0.35013 * (f * f) * (f * f);\n            fb = this.resonance * (1.0 - 0.15 * f * f);\n            length = input.length;\n            for (i = 0; i < length; i++) {\n                input[i] -= out4 * fb;\n                input[i] *= inputFactor;\n                out1 = input[i] + 0.3 * in1 + (1 - f) * out1; // Pole 1\n                in1 = input[i];\n                out2 = out1 + 0.3 * in2 + (1 - f) * out2; // Pole 2\n                in2 = out1;\n                out3 = out2 + 0.3 * in3 + (1 - f) * out3; // Pole 3\n                in3 = out2;\n                out4 = out3 + 0.3 * in4 + (1 - f) * out4; // Pole 4\n                in4 = out3;\n                output[i] = out4;\n            }\n        };\n\n        this.cutoff = initValue(properties.cutoff, this.defaults.cutoff.value);\n        this.resonance = initValue(properties.resonance, this.defaults.resonance.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.MoogFilter.prototype = Object.create(Super, {\n        name: {\n            value: \"MoogFilter\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                bufferSize: {\n                    value: 4096,\n                    min: 256,\n                    max: 16384,\n                    automatable: false,\n                    type: INT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                cutoff: {\n                    value: 0.065,\n                    min: 0.0001,\n                    max: 1.0,\n                    automatable: false,\n                    type: FLOAT\n                },\n                resonance: {\n                    value: 3.5,\n                    min: 0.0,\n                    max: 4.0,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        cutoff: {\n            enumerable: true,\n            get: function() {\n                return this.processor.cutoff;\n            },\n            set: function(value) {\n                this.processor.cutoff = value;\n            }\n        },\n        resonance: {\n            enumerable: true,\n            get: function() {\n                return this.processor.resonance;\n            },\n            set: function(value) {\n                this.processor.resonance = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Overdrive = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.inputDrive = userContext.createGain();\n        this.waveshaper = userContext.createWaveShaper();\n        this.outputDrive = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.inputDrive);\n        this.inputDrive.connect(this.waveshaper);\n        this.waveshaper.connect(this.outputDrive);\n        this.outputDrive.connect(this.output);\n\n        this.ws_table = new Float32Array(this.k_nSamples);\n        this.drive = initValue(properties.drive, this.defaults.drive.value);\n        this.outputGain = initValue(properties.outputGain, this.defaults.outputGain.value);\n        this.curveAmount = initValue(properties.curveAmount, this.defaults.curveAmount.value);\n        this.algorithmIndex = initValue(properties.algorithmIndex, this.defaults.algorithmIndex.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Overdrive.prototype = Object.create(Super, {\n        name: {\n            value: \"Overdrive\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                drive: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT,\n                    scaled: true\n                },\n                outputGain: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT,\n                    scaled: true\n                },\n                curveAmount: {\n                    value: 0.725,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                algorithmIndex: {\n                    value: 0,\n                    min: 0,\n                    max: 5,\n                    automatable: false,\n                    type: INT\n                }\n            }\n        },\n        k_nSamples: {\n            value: 8192\n        },\n        drive: {\n            get: function() {\n                return this.inputDrive.gain;\n            },\n            set: function(value) {\n                this._drive = value;\n            }\n        },\n        curveAmount: {\n            get: function() {\n                return this._curveAmount;\n            },\n            set: function(value) {\n                this._curveAmount = value;\n                if (this._algorithmIndex === undefined) {\n                    this._algorithmIndex = 0;\n                }\n                this.waveshaperAlgorithms[this._algorithmIndex](this._curveAmount, this.k_nSamples, this.ws_table);\n                this.waveshaper.curve = this.ws_table;\n            }\n        },\n        outputGain: {\n            get: function() {\n                return this.outputDrive.gain;\n            },\n            set: function(value) {\n                this._outputGain = dbToWAVolume(value);\n            }\n        },\n        algorithmIndex: {\n            get: function() {\n                return this._algorithmIndex;\n            },\n            set: function(value) {\n                this._algorithmIndex = value;\n                this.curveAmount = this._curveAmount;\n            }\n        },\n        waveshaperAlgorithms: {\n            value: [\n                function(amount, n_samples, ws_table) {\n                    amount = Math.min(amount, 0.9999);\n                    var k = 2 * amount / (1 - amount),\n                        i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        ws_table[i] = (1 + k) * x / (1 + k * Math.abs(x));\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        y = ((0.5 * Math.pow((x + 1.4), 2)) - 1) * y >= 0 ? 5.8 : 1.2;\n                        ws_table[i] = tanh(y);\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y, a = 1 - amount;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        y = x < 0 ? -Math.pow(Math.abs(x), a + 0.04) : Math.pow(x, a);\n                        ws_table[i] = tanh(y * 2);\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y, abx, a = 1 - amount > 0.99 ? 0.99 : 1 - amount;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        abx = Math.abs(x);\n                        if (abx < a) y = abx;\n                        else if (abx > a) y = a + (abx - a) / (1 + Math.pow((abx - a) / (1 - a), 2));\n                        else if (abx > 1) y = abx;\n                        ws_table[i] = sign(x) * y * (1 / ((a + 1) / 2));\n                    }\n                },\n                function(amount, n_samples, ws_table) { // fixed curve, amount doesn't do anything, the distortion is just from the drive\n                    var i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        if (x < -0.08905) {\n                            ws_table[i] = (-3 / 4) * (1 - (Math.pow((1 - (Math.abs(x) - 0.032857)), 12)) + (1 / 3) * (Math.abs(x) - 0.032847)) + 0.01;\n                        } else if (x >= -0.08905 && x < 0.320018) {\n                            ws_table[i] = (-6.153 * (x * x)) + 3.9375 * x;\n                        } else {\n                            ws_table[i] = 0.630035;\n                        }\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var a = 2 + Math.round(amount * 14),\n                        // we go from 2 to 16 bits, keep in mind for the UI\n                        bits = Math.round(Math.pow(2, a - 1)),\n                        // real number of quantization steps divided by 2\n                        i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        ws_table[i] = Math.round(x * bits) / bits;\n                    }\n                }\n            ]\n        }\n    });\n\n    Tuna.prototype.Phaser = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.splitter = this.activateNode = userContext.createChannelSplitter(2);\n        this.filtersL = [];\n        this.filtersR = [];\n        this.feedbackGainNodeL = userContext.createGain();\n        this.feedbackGainNodeR = userContext.createGain();\n        this.merger = userContext.createChannelMerger(2);\n        this.filteredSignal = userContext.createGain();\n        this.output = userContext.createGain();\n        this.lfoL = new userInstance.LFO({\n            target: this.filtersL,\n            callback: this.callback\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.filtersR,\n            callback: this.callback\n        });\n\n        var i = this.stage;\n        while (i--) {\n            this.filtersL[i] = userContext.createBiquadFilter();\n            this.filtersR[i] = userContext.createBiquadFilter();\n            this.filtersL[i].type = \"allpass\";\n            this.filtersR[i].type = \"allpass\";\n        }\n        this.input.connect(this.splitter);\n        this.input.connect(this.output);\n        this.splitter.connect(this.filtersL[0], 0, 0);\n        this.splitter.connect(this.filtersR[0], 1, 0);\n        this.connectInOrder(this.filtersL);\n        this.connectInOrder(this.filtersR);\n        this.filtersL[this.stage - 1].connect(this.feedbackGainNodeL);\n        this.filtersL[this.stage - 1].connect(this.merger, 0, 0);\n        this.filtersR[this.stage - 1].connect(this.feedbackGainNodeR);\n        this.filtersR[this.stage - 1].connect(this.merger, 0, 1);\n        this.feedbackGainNodeL.connect(this.filtersL[0]);\n        this.feedbackGainNodeR.connect(this.filtersR[0]);\n        this.merger.connect(this.output);\n\n        this.rate = initValue(properties.rate, this.defaults.rate.value);\n        this.baseModulationFrequency = properties.baseModulationFrequency || this.defaults.baseModulationFrequency.value;\n        this.depth = initValue(properties.depth, this.defaults.depth.value);\n        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);\n\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Phaser.prototype = Object.create(Super, {\n        name: {\n            value: \"Phaser\"\n        },\n        stage: {\n            value: 4\n        },\n        defaults: {\n            writable: true,\n            value: {\n                rate: {\n                    value: 0.1,\n                    min: 0,\n                    max: 8,\n                    automatable: false,\n                    type: FLOAT\n                },\n                depth: {\n                    value: 0.6,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                feedback: {\n                    value: 0.7,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                stereoPhase: {\n                    value: 40,\n                    min: 0,\n                    max: 180,\n                    automatable: false,\n                    type: FLOAT\n                },\n                baseModulationFrequency: {\n                    value: 700,\n                    min: 500,\n                    max: 1500,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        callback: {\n            value: function(filters, value) {\n                for (var stage = 0; stage < 4; stage++) {\n                    filters[stage].frequency.value = value;\n                }\n            }\n        },\n        depth: {\n            get: function() {\n                return this._depth;\n            },\n            set: function(value) {\n                this._depth = value;\n                this.lfoL.oscillation = this._baseModulationFrequency * this._depth;\n                this.lfoR.oscillation = this._baseModulationFrequency * this._depth;\n            }\n        },\n        rate: {\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        },\n        baseModulationFrequency: {\n            enumerable: true,\n            get: function() {\n                return this._baseModulationFrequency;\n            },\n            set: function(value) {\n                this._baseModulationFrequency = value;\n                this.lfoL.offset = this._baseModulationFrequency;\n                this.lfoR.offset = this._baseModulationFrequency;\n                this._depth = this._depth;\n            }\n        },\n        feedback: {\n            get: function() {\n                return this._feedback;\n            },\n            set: function(value) {\n                this._feedback = value;\n                this.feedbackGainNodeL.gain.value = this._feedback;\n                this.feedbackGainNodeR.gain.value = this._feedback;\n            }\n        },\n        stereoPhase: {\n            get: function() {\n                return this._stereoPhase;\n            },\n            set: function(value) {\n                this._stereoPhase = value;\n                var newPhase = this.lfoL._phase + this._stereoPhase * Math.PI / 180;\n                newPhase = fmod(newPhase, 2 * Math.PI);\n                this.lfoR._phase = newPhase;\n            }\n        }\n    });\n\n    Tuna.prototype.PingPongDelay = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.wetLevel = userContext.createGain();\n        this.stereoToMonoMix = userContext.createGain();\n        this.feedbackLevel = userContext.createGain();\n        this.output = userContext.createGain();\n        this.delayLeft = userContext.createDelay();\n        this.delayRight = userContext.createDelay();\n\n        this.activateNode = userContext.createGain();\n        this.splitter = userContext.createChannelSplitter(2);\n        this.merger = userContext.createChannelMerger(2);\n\n        this.activateNode.connect(this.splitter);\n        this.splitter.connect(this.stereoToMonoMix, 0, 0);\n        this.splitter.connect(this.stereoToMonoMix, 1, 0);\n        this.stereoToMonoMix.gain.value = .5;\n        this.stereoToMonoMix.connect(this.wetLevel);\n        this.wetLevel.connect(this.delayLeft);\n        this.feedbackLevel.connect(this.delayLeft);\n        this.delayLeft.connect(this.delayRight);\n        this.delayRight.connect(this.feedbackLevel);\n        this.delayLeft.connect(this.merger, 0, 0);\n        this.delayRight.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n        this.activateNode.connect(this.output);\n\n        this.delayTimeLeft = properties.delayTimeLeft !== undefined ? properties.delayTimeLeft : this.defaults.delayTimeLeft.value;\n        this.delayTimeRight = properties.delayTimeRight !== undefined ? properties.delayTimeRight : this.defaults.delayTimeRight.value;\n        this.feedbackLevel.gain.value = properties.feedback !== undefined ? properties.feedback : this.defaults.feedback.value;\n        this.wetLevel.gain.value = properties.wetLevel !== undefined ? properties.wetLevel : this.defaults.wetLevel.value;\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.PingPongDelay.prototype = Object.create(Super, {\n        name: {\n            value: \"PingPongDelay\"\n        },\n        delayTimeLeft: {\n            enumerable: true,\n            get: function() {\n                return this._delayTimeLeft;\n            },\n            set: function(value) {\n                this._delayTimeLeft = value;\n                this.delayLeft.delayTime.value = value / 1000;\n            }\n        },\n        delayTimeRight: {\n            enumerable: true,\n            get: function() {\n                return this._delayTimeRight;\n            },\n            set: function(value) {\n                this._delayTimeRight = value;\n                this.delayRight.delayTime.value = value / 1000;\n            }\n        },\n        defaults: {\n            writable: true,\n            value: {\n                delayTimeLeft: {\n                    value: 200,\n                    min: 1,\n                    max: 10000,\n                    automatable: false,\n                    type: INT\n                },\n                delayTimeRight: {\n                    value: 400,\n                    min: 1,\n                    max: 10000,\n                    automatable: false,\n                    type: INT\n                },\n                feedback: {\n                    value: 0.3,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        }\n    });\n\n    Tuna.prototype.Tremolo = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.splitter = this.activateNode = userContext.createChannelSplitter(\n                2),\n            this.amplitudeL = userContext.createGain(),\n            this.amplitudeR = userContext.createGain(),\n            this.merger = userContext.createChannelMerger(2),\n            this.output = userContext.createGain();\n        this.lfoL = new userInstance.LFO({\n            target: this.amplitudeL.gain,\n            callback: pipe\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.amplitudeR.gain,\n            callback: pipe\n        });\n\n        this.input.connect(this.splitter);\n        this.splitter.connect(this.amplitudeL, 0);\n        this.splitter.connect(this.amplitudeR, 1);\n        this.amplitudeL.connect(this.merger, 0, 0);\n        this.amplitudeR.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n\n        this.rate = properties.rate || this.defaults.rate.value;\n        this.intensity = initValue(properties.intensity, this.defaults.intensity.value);\n        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);\n\n        this.lfoL.offset = 1 - (this.intensity / 2);\n        this.lfoR.offset = 1 - (this.intensity / 2);\n        this.lfoL.phase = this.stereoPhase * Math.PI / 180;\n\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Tremolo.prototype = Object.create(Super, {\n        name: {\n            value: \"Tremolo\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                intensity: {\n                    value: 0.3,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                stereoPhase: {\n                    value: 0,\n                    min: 0,\n                    max: 180,\n                    automatable: false,\n                    type: FLOAT\n                },\n                rate: {\n                    value: 5,\n                    min: 0.1,\n                    max: 11,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        intensity: {\n            enumerable: true,\n            get: function() {\n                return this._intensity;\n            },\n            set: function(value) {\n                this._intensity = value;\n                this.lfoL.offset = 1 - this._intensity / 2;\n                this.lfoR.offset = 1 - this._intensity / 2;\n                this.lfoL.oscillation = this._intensity;\n                this.lfoR.oscillation = this._intensity;\n            }\n        },\n        rate: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        },\n        stereoPhase: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._stereoPhase = value;\n                var newPhase = this.lfoL._phase + this._stereoPhase * Math.PI / 180;\n                newPhase = fmod(newPhase, 2 * Math.PI);\n                this.lfoR.phase = newPhase;\n            }\n        }\n    });\n\n    Tuna.prototype.WahWah = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.envelopeFollower = new userInstance.EnvelopeFollower({\n            target: this,\n            callback: function(context, value) {\n                context.sweep = value;\n            }\n        });\n        this.filterBp = userContext.createBiquadFilter();\n        this.filterPeaking = userContext.createBiquadFilter();\n        this.output = userContext.createGain();\n\n        //Connect AudioNodes\n        this.activateNode.connect(this.filterBp);\n        this.filterBp.connect(this.filterPeaking);\n        this.filterPeaking.connect(this.output);\n\n        //Set Properties\n        this.init();\n        this.automode = initValue(properties.enableAutoMode, this.defaults.automode.value);\n        this.resonance = properties.resonance || this.defaults.resonance.value;\n        this.sensitivity = initValue(properties.sensitivity, this.defaults.sensitivity.value);\n        this.baseFrequency = initValue(properties.baseFrequency, this.defaults.baseFrequency.value);\n        this.excursionOctaves = properties.excursionOctaves || this.defaults.excursionOctaves.value;\n        this.sweep = initValue(properties.sweep, this.defaults.sweep.value);\n\n        this.activateNode.gain.value = 2;\n        this.envelopeFollower.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.WahWah.prototype = Object.create(Super, {\n        name: {\n            value: \"WahWah\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                automode: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                baseFrequency: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                excursionOctaves: {\n                    value: 2,\n                    min: 1,\n                    max: 6,\n                    automatable: false,\n                    type: FLOAT\n                },\n                sweep: {\n                    value: 0.2,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                resonance: {\n                    value: 10,\n                    min: 1,\n                    max: 100,\n                    automatable: false,\n                    type: FLOAT\n                },\n                sensitivity: {\n                    value: 0.5,\n                    min: -1,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        activateCallback: {\n            value: function(value) {\n                this.automode = value;\n            }\n        },\n        automode: {\n            get: function() {\n                return this._automode;\n            },\n            set: function(value) {\n                this._automode = value;\n                if (value) {\n                    this.activateNode.connect(this.envelopeFollower.input);\n                    this.envelopeFollower.activate(true);\n                } else {\n                    this.envelopeFollower.activate(false);\n                    this.activateNode.disconnect();\n                    this.activateNode.connect(this.filterBp);\n                }\n            }\n        },\n        filterFreqTimeout: {\n            value: 0\n        },\n        setFilterFreq: {\n            value: function() {\n                try {\n                    this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n                    this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n                } catch (e) {\n                    clearTimeout(this.filterFreqTimeout);\n                    //put on the next cycle to let all init properties be set\n                    this.filterFreqTimeout = setTimeout(function() {\n                        this.setFilterFreq();\n                    }.bind(this), 0);\n                }\n            }\n        },\n        sweep: {\n            enumerable: true,\n            get: function() {\n                return this._sweep.value;\n            },\n            set: function(value) {\n                this._sweep = Math.pow(value > 1 ? 1 : value < 0 ? 0 : value, this._sensitivity);\n                this.setFilterFreq();\n            }\n        },\n        baseFrequency: {\n            enumerable: true,\n            get: function() {\n                return this._baseFrequency;\n            },\n            set: function(value) {\n                this._baseFrequency = 50 * Math.pow(10, value *\n                    2);\n                this._excursionFrequency = Math.min(userContext.sampleRate / 2, this.baseFrequency * Math.pow(2, this._excursionOctaves));\n                this.setFilterFreq();\n            }\n        },\n        excursionOctaves: {\n            enumerable: true,\n            get: function() {\n                return this._excursionOctaves;\n            },\n            set: function(value) {\n                this._excursionOctaves = value;\n                this._excursionFrequency = Math.min(userContext.sampleRate / 2, this.baseFrequency * Math.pow(2, this._excursionOctaves));\n                this.setFilterFreq();\n            }\n        },\n        sensitivity: {\n            enumerable: true,\n            get: function() {\n                return this._sensitivity;\n            },\n            set: function(value) {\n                this._sensitivity = Math.pow(10, value);\n            }\n        },\n        resonance: {\n            enumerable: true,\n            get: function() {\n                return this._resonance;\n            },\n            set: function(value) {\n                this._resonance = value;\n                this.filterPeaking.Q = this._resonance;\n            }\n        },\n        init: {\n            value: function() {\n                this.output.gain.value = 1;\n                this.filterPeaking.type = \"peaking\";\n                this.filterBp.type = \"bandpass\";\n                this.filterPeaking.frequency.value = 100;\n                this.filterPeaking.gain.value = 20;\n                this.filterPeaking.Q.value = 5;\n                this.filterBp.frequency.value = 100;\n                this.filterBp.Q.value = 1;\n            }\n        }\n    });\n\n    Tuna.prototype.EnvelopeFollower = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.jsNode = this.output = userContext.createScriptProcessor(this.buffersize, 1, 1);\n\n        this.input.connect(this.output);\n\n        this.attackTime = initValue(properties.attackTime, this.defaults.attackTime.value);\n        this.releaseTime = initValue(properties.releaseTime, this.defaults.releaseTime.value);\n        this._envelope = 0;\n        this.target = properties.target || {};\n        this.callback = properties.callback || function() {};\n    };\n    Tuna.prototype.EnvelopeFollower.prototype = Object.create(Super, {\n        name: {\n            value: \"EnvelopeFollower\"\n        },\n        defaults: {\n            value: {\n                attackTime: {\n                    value: 0.003,\n                    min: 0,\n                    max: 0.5,\n                    automatable: false,\n                    type: FLOAT\n                },\n                releaseTime: {\n                    value: 0.5,\n                    min: 0,\n                    max: 0.5,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        buffersize: {\n            value: 256\n        },\n        envelope: {\n            value: 0\n        },\n        sampleRate: {\n            value: 44100\n        },\n        attackTime: {\n            enumerable: true,\n            get: function() {\n                return this._attackTime;\n            },\n            set: function(value) {\n                this._attackTime = value;\n                this._attackC = Math.exp(-1 / this._attackTime * this.sampleRate / this.buffersize);\n            }\n        },\n        releaseTime: {\n            enumerable: true,\n            get: function() {\n                return this._releaseTime;\n            },\n            set: function(value) {\n                this._releaseTime = value;\n                this._releaseC = Math.exp(-1 / this._releaseTime * this.sampleRate / this.buffersize);\n            }\n        },\n        callback: {\n            get: function() {\n                return this._callback;\n            },\n            set: function(value) {\n                if (typeof value === \"function\") {\n                    this._callback = value;\n                } else {\n                    console.error(\"tuna.js: \" + this.name + \": Callback must be a function!\");\n                }\n            }\n        },\n        target: {\n            get: function() {\n                return this._target;\n            },\n            set: function(value) {\n                this._target = value;\n            }\n        },\n        activate: {\n            value: function(doActivate) {\n                this.activated = doActivate;\n                if (doActivate) {\n                    this.jsNode.connect(userContext.destination);\n                    this.jsNode.onaudioprocess = this.returnCompute(this);\n                } else {\n                    this.jsNode.disconnect();\n                    this.jsNode.onaudioprocess = null;\n                }\n            }\n        },\n        returnCompute: {\n            value: function(instance) {\n                return function(event) {\n                    instance.compute(event);\n                };\n            }\n        },\n        compute: {\n            value: function(event) {\n                var count = event.inputBuffer.getChannelData(0).length,\n                    channels = event.inputBuffer.numberOfChannels,\n                    current, chan, rms, i;\n                chan = rms = i = 0;\n                if (channels > 1) { //need to mixdown\n                    for (i = 0; i < count; ++i) {\n                        for (; chan < channels; ++chan) {\n                            current = event.inputBuffer.getChannelData(chan)[i];\n                            rms += (current * current) / channels;\n                        }\n                    }\n                } else {\n                    for (i = 0; i < count; ++i) {\n                        current = event.inputBuffer.getChannelData(0)[i];\n                        rms += (current * current);\n                    }\n                }\n                rms = Math.sqrt(rms);\n\n                if (this._envelope < rms) {\n                    this._envelope *= this._attackC;\n                    this._envelope += (1 - this._attackC) * rms;\n                } else {\n                    this._envelope *= this._releaseC;\n                    this._envelope += (1 - this._releaseC) * rms;\n                }\n                this._callback(this._target, this._envelope);\n            }\n        }\n    });\n\n    Tuna.prototype.LFO = function(properties) {\n        //Instantiate AudioNode\n        this.output = userContext.createScriptProcessor(256, 1, 1);\n        this.activateNode = userContext.destination;\n\n        //Set Properties\n        this.frequency = initValue(properties.frequency, this.defaults.frequency.value);\n        this.offset = initValue(properties.offset, this.defaults.offset.value);\n        this.oscillation = initValue(properties.oscillation, this.defaults.oscillation.value);\n        this.phase = initValue(properties.phase, this.defaults.phase.value);\n        this.target = properties.target || {};\n        this.output.onaudioprocess = this.callback(properties.callback || function() {});\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.LFO.prototype = Object.create(Super, {\n        name: {\n            value: \"LFO\"\n        },\n        bufferSize: {\n            value: 256\n        },\n        sampleRate: {\n            value: 44100\n        },\n        defaults: {\n            value: {\n                frequency: {\n                    value: 1,\n                    min: 0,\n                    max: 20,\n                    automatable: false,\n                    type: FLOAT\n                },\n                offset: {\n                    value: 0.85,\n                    min: 0,\n                    max: 22049,\n                    automatable: false,\n                    type: FLOAT\n                },\n                oscillation: {\n                    value: 0.3,\n                    min: -22050,\n                    max: 22050,\n                    automatable: false,\n                    type: FLOAT\n                },\n                phase: {\n                    value: 0,\n                    min: 0,\n                    max: 2 * Math.PI,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        frequency: {\n            get: function() {\n                return this._frequency;\n            },\n            set: function(value) {\n                this._frequency = value;\n                this._phaseInc = 2 * Math.PI * this._frequency * this.bufferSize / this.sampleRate;\n            }\n        },\n        offset: {\n            get: function() {\n                return this._offset;\n            },\n            set: function(value) {\n                this._offset = value;\n            }\n        },\n        oscillation: {\n            get: function() {\n                return this._oscillation;\n            },\n            set: function(value) {\n                this._oscillation = value;\n            }\n        },\n        phase: {\n            get: function() {\n                return this._phase;\n            },\n            set: function(value) {\n                this._phase = value;\n            }\n        },\n        target: {\n            get: function() {\n                return this._target;\n            },\n            set: function(value) {\n                this._target = value;\n            }\n        },\n        activate: {\n            value: function(doActivate) {\n                if (!doActivate) {\n                    this.output.disconnect(userContext.destination);\n                } else {\n                    this.output.connect(userContext.destination);\n                }\n            }\n        },\n        callback: {\n            value: function(callback) {\n                var that = this;\n                return function() {\n                    that._phase += that._phaseInc;\n                    if (that._phase > 2 * Math.PI) {\n                        that._phase = 0;\n                    }\n                    callback(that._target, that._offset + that._oscillation * Math.sin(that._phase));\n                };\n            }\n        }\n    });\n\n    Tuna.toString = Tuna.prototype.toString = function() {\n        return \"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js\";\n    };\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tunajs/tuna.js\n ** module id = 4\n ** module chunks = 0\n **/","import React, { PropTypes, Component } from 'react';\n\nexport default class Bus extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    gain: PropTypes.number,\n    id: PropTypes.string.isRequired,\n  };\n  static defaultProps = {\n    gain: 0.5,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n    getMaster: PropTypes.func,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n    getMaster: PropTypes.func,\n  };\n  constructor(props, context) {\n    super(props);\n\n    this.connectNode = context.audioContext.createGain();\n    this.connectNode.gain.value = props.gain;\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentDidMount() {\n    const master = this.context.getMaster();\n    master.busses[this.props.id] = this.connectNode;\n  }\n  componentWillReceiveProps(nextProps) {\n    const master = this.context.getMaster();\n    delete master.busses[this.props.id];\n\n    this.connectNode.gain.value = nextProps.gain;\n    master.busses[nextProps.id] = this.connectNode;\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n    delete this.context.getMaster().busses[this.props.id];\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/bus.js\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\nimport Tuna from 'tunajs';\n\nexport default class Chorus extends Component {\n  static propTypes = {\n    bypass: PropTypes.number,\n    children: PropTypes.node,\n    delay: PropTypes.number,\n    feedback: PropTypes.number,\n    rate: PropTypes.number,\n  };\n  static defaultProps = {\n    bypass: 0,\n    delay: 0.0045,\n    feedback: 0.2,\n    rate: 1.5,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    const tuna = new Tuna(context.audioContext);\n\n    this.connectNode = new tuna.Chorus({\n      feedback: props.feedback,\n      rate: props.rate,\n      delay: props.delay,\n      bypass: props.bypass,\n    });\n\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    for (const prop in nextProps) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop] = nextProps[prop];\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/chorus.js\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\n\nexport default class Compressor extends Component {\n  static propTypes = {\n    attack: PropTypes.number,\n    children: PropTypes.node,\n    knee: PropTypes.number,\n    ratio: PropTypes.number,\n    release: PropTypes.number,\n    threshold: PropTypes.number,\n  };\n  static defaultProps = {\n    attack: 0.003,\n    knee: 32,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    this.connectNode = context.audioContext.createDynamicsCompressor();\n    this.connectNode.connect(context.connectNode);\n\n    this.applyProps = this.applyProps.bind(this);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentDidMount() {\n    this.applyProps(this.props);\n  }\n  componentWillReceiveProps(nextProps) {\n    this.applyProps(nextProps);\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  applyProps(props) {\n    for (const prop in props) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop].value = props[prop];\n      }\n    }\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/compressor.js\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\nimport Tuna from 'tunajs';\n\nexport default class Delay extends Component {\n  static propTypes = {\n    bypass: PropTypes.number,\n    children: PropTypes.node,\n    cutoff: PropTypes.number,\n    delayTime: PropTypes.number,\n    dryLevel: PropTypes.number,\n    feedback: PropTypes.number,\n    wetLevel: PropTypes.number,\n  };\n  static defaultProps = {\n    bypass: 0,\n    cutoff: 2000,\n    delayTime: 150,\n    dryLevel: 1,\n    feedback: 0.45,\n    wetLevel: 0.25,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    const tuna = new Tuna(context.audioContext);\n\n    this.connectNode = new tuna.Delay({\n      feedback: props.feedback,\n      delayTime: props.delayTime,\n      wetLevel: props.wetLevel,\n      dryLevel: props.dryLevel,\n      cutoff: props.cutoff,\n      bypass: props.bypass,\n    });\n\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    for (const prop in nextProps) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop] = nextProps[prop];\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/delay.js\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\n\nexport default class Filter extends Component {\n  static propTypes = {\n    Q: PropTypes.number,\n    children: PropTypes.node,\n    frequency: PropTypes.number,\n    gain: PropTypes.number,\n    type: PropTypes.string,\n  };\n  static defaultProps = {\n    Q: 0,\n    frequency: 2000,\n    gain: 0,\n    type: 'lowpass',\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    this.connectNode = context.audioContext.createBiquadFilter();\n    this.connectNode.connect(context.connectNode);\n\n    this.applyProps = this.applyProps.bind(this);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentDidMount() {\n    this.applyProps(this.props);\n  }\n  componentWillReceiveProps(nextProps) {\n    for (const prop in nextProps) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop] = nextProps[prop];\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  applyProps(props) {\n    for (const prop in props) {\n      if (this.connectNode[prop]) {\n        if (typeof this.connectNode[prop] === 'object') {\n          this.connectNode[prop].value = props[prop];\n        } else {\n          this.connectNode[prop] = props[prop];\n        }\n      }\n    }\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/filter.js\n **/","import React, { PropTypes, Component } from 'react';\n\nexport default class Gain extends Component {\n  static propTypes = {\n    amount: PropTypes.number,\n    children: PropTypes.node,\n  };\n  static defaultProps = {\n    amount: 0.0,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    this.connectNode = context.audioContext.createGain();\n    this.connectNode.gain.value = props.amount;\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    this.connectNode.gain.value = nextProps.amount;\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/gain.js\n **/","import React, { PropTypes, Component } from 'react';\n\nexport default class Synth extends Component {\n  static displayName = 'Synth';\n  static propTypes = {\n    children: PropTypes.node,\n    connect: PropTypes.func,\n    frequency: PropTypes.number,\n    gain: PropTypes.number,\n    type: PropTypes.string,\n  };\n  static defaultProps = {\n    connect: (node) => node.gain,\n    frequency: 1,\n    gain: 0.5,\n    type: 'sine',\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  componentDidMount() {\n    const volumeGain = this.context.audioContext.createGain();\n    volumeGain.gain.value = this.props.gain;\n    this.osc = this.context.audioContext.createOscillator();\n    this.osc.frequency.value = this.props.frequency;\n    this.osc.type = this.props.type;\n    this.osc.connect(volumeGain);\n    volumeGain.connect(this.props.connect(this.context.connectNode));\n\n    this.osc.start(this.context.audioContext.currentTime);\n  }\n  componentWillUnmount() {\n    this.osc.stop();\n    this.connectNode.disconnect();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/lfo.js\n **/","import React, { PropTypes, Component } from 'react';\nimport parser from 'note-parser';\nimport contour from 'audio-contour';\nimport uuid from 'uuid';\n\nexport default class Monosynth extends Component {\n  static displayName = 'Synth';\n  static propTypes = {\n    busses: PropTypes.array,\n    children: PropTypes.node,\n    envelope: PropTypes.shape({\n      attack: PropTypes.number,\n      decay: PropTypes.number,\n      sustain: PropTypes.number,\n      release: PropTypes.number,\n    }),\n    gain: PropTypes.number,\n    glide: PropTypes.number,\n    steps: PropTypes.array.isRequired,\n    transpose: PropTypes.number,\n    type: PropTypes.string.isRequired,\n  };\n  static defaultProps = {\n    envelope: {\n      attack: 0.01,\n      decay: 0.2,\n      sustain: 0.2,\n      release: 0.2,\n    },\n    gain: 0.5,\n    glide: 0.1,\n    transpose: 0,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    bars: PropTypes.number,\n    barInterval: PropTypes.number,\n    connectNode: PropTypes.object,\n    getMaster: PropTypes.func,\n    resolution: PropTypes.number,\n    scheduler: PropTypes.object,\n    tempo: PropTypes.number,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    bars: PropTypes.number,\n    barInterval: PropTypes.number,\n    connectNode: PropTypes.object,\n    getMaster: PropTypes.func,\n    resolution: PropTypes.number,\n    scheduler: PropTypes.object,\n    tempo: PropTypes.number,\n  };\n  constructor(props, context) {\n    super(props);\n\n    this.getSteps = this.getSteps.bind(this);\n    this.playStep = this.playStep.bind(this);\n\n    this.connectNode = context.audioContext.createGain();\n    this.connectNode.gain.value = props.gain;\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentDidMount() {\n    this.id = uuid.v1();\n    const master = this.context.getMaster();\n    master.instruments[this.id] = this.getSteps;\n\n    this.amplitudeGain = this.context.audioContext.createGain();\n    this.amplitudeGain.gain.value = 0;\n    this.amplitudeGain.connect(this.connectNode);\n\n    this.osc = this.context.audioContext.createOscillator();\n    this.osc.type = this.props.type;\n    this.osc.connect(this.amplitudeGain);\n\n    if (this.props.busses) {\n      this.props.busses.forEach((bus) => {\n        if (master.busses[bus]) {\n          this.osc.connect(master.busses[bus]);\n        }\n      });\n    }\n\n    this.osc.start(this.context.audioContext.currentTime);\n  }\n  componentWillUnmount() {\n    const master = this.context.getMaster();\n    delete master.instruments[this.id];\n    this.osc.stop();\n    this.connectNode.disconnect();\n  }\n  getSteps(playbackTime) {\n    const totalBars = this.context.getMaster().getMaxBars();\n    const loopCount = totalBars / this.context.bars;\n    for (let i = 0; i < loopCount; i++) {\n      const barOffset = ((this.context.barInterval * this.context.bars) * i) / 1000;\n      const stepInterval = this.context.barInterval / this.context.resolution;\n      this.props.steps.forEach((step, index) => {\n        const time = barOffset + ((step[0] * stepInterval) / 1000);\n        let glide = false;\n\n        if (index !== 0) {\n          const lastTime = barOffset + ((this.props.steps[index - 1][0] * stepInterval) / 1000);\n          const lastDuration = (this.props.steps[index - 1][1] * stepInterval) / 1000;\n          glide = lastTime + lastDuration > time;\n        }\n\n        this.context.scheduler.insert(playbackTime + time, this.playStep, {\n          time: playbackTime,\n          step,\n          glide,\n        });\n      });\n    }\n  }\n  createOscillator() {\n    const [ time, note, duration, glide ] = arguments;\n    const transposed = note.slice(0, -1) +\n      (parseInt(note[note.length - 1], 0) + parseInt(this.props.transpose, 0));\n\n    const env = contour(this.context.audioContext, {\n      attack: this.props.envelope.attack,\n      decay: this.props.envelope.decay,\n      sustain: this.props.envelope.sustain,\n      release: this.props.envelope.release,\n    });\n\n    env.connect(this.amplitudeGain.gain);\n    this.osc.frequency.setTargetAtTime(\n      parser.freq(transposed), time, glide ? this.props.glide : 0.001\n    );\n\n    env.start(time);\n    env.stop(this.context.audioContext.currentTime + duration);\n  }\n  playStep(e) {\n    const { step, glide, time } = e.args;\n    const note = step[2];\n    const stepInterval = this.context.barInterval / this.context.resolution;\n    const duration = (step[1] * stepInterval) / 1000;\n    this.createOscillator(time, note, duration, glide);\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/monosynth.js\n **/","'use strict'\n\n// util\nfunction fillStr (s, num) { return Array(num + 1).join(s) }\nfunction isNum (x) { return typeof x === 'number' }\nfunction isStr (x) { return typeof x === 'string' }\nfunction isDef (x) { return typeof x !== 'undefined' }\nfunction midiToFreq (midi, tuning) {\n  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n}\n\nvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n/**\n * A regex for matching note strings in scientific notation.\n *\n * @name regex\n * @function\n * @return {RegExp} the regexp used to parse the note name\n *\n * The note string should have the form `letter[accidentals][octave][element]`\n * where:\n *\n * - letter: (Required) is a letter from A to G either upper or lower case\n * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n * They can NOT be mixed.\n * - octave: (Optional) a positive or negative integer\n * - element: (Optional) additionally anything after the duration is considered to\n * be the element name (for example: 'C2 dorian')\n *\n * The executed regex contains (by array index):\n *\n * - 0: the complete string\n * - 1: the note letter\n * - 2: the optional accidentals\n * - 3: the optional octave\n * - 4: the rest of the string (trimmed)\n *\n * @example\n * var parser = require('note-parser')\n * parser.regex.exec('c#4')\n * // => ['c#4', 'c', '#', '4', '']\n * parser.regex.exec('c#4 major')\n * // => ['c#4major', 'c', '#', '4', 'major']\n * parser.regex().exec('CMaj7')\n * // => ['CMaj7', 'C', '', '', 'Maj7']\n */\nfunction regex () { return REGEX }\n\nvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n/**\n * Parse a note name in scientific notation an return it's components,\n * and some numeric properties including midi number and frequency.\n *\n * @name parse\n * @function\n * @param {String} note - the note string to be parsed\n * @param {Boolean} isTonic - true the strings it's supposed to contain a note number\n * and some category (for example an scale: 'C# major'). It's false by default,\n * but when true, en extra tonicOf property is returned with the category ('major')\n * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n * By default it 440.\n * @return {Object} the parsed note name or null if not a valid note\n *\n * The parsed note name object will ALWAYS contains:\n * - letter: the uppercase letter of the note\n * - acc: the accidentals of the note (only sharps or flats)\n * - pc: the pitch class (letter + acc)\n * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n * where 0 = C, 1 = D ... 6 = B\n * - alt: a numeric representation of the accidentals. 0 means no alteration,\n * positive numbers are for sharps and negative for flats\n * - chroma: a numeric representation of the pitch class. It's like midi for\n * pitch classes. 0 = C, 1 = C#, 2 = D ... 11 = B. Can be used to find enharmonics\n * since, for example, chroma of 'Cb' and 'B' are both 11\n *\n * If the note has octave, the parser object will contain:\n * - oct: the octave number (as integer)\n * - midi: the midi number\n * - freq: the frequency (using tuning parameter as base)\n *\n * If the parameter `isTonic` is set to true, the parsed object will contain:\n * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n *\n * @example\n * var parse = require('note-parser').parse\n * parse('Cb4')\n * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n *         oct: 4, midi: 59, freq: 246.94165062806206 }\n * // if no octave, no midi, no freq\n * parse('fx')\n * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n */\nfunction parse (str, isTonic, tuning) {\n  if (typeof str !== 'string') return null\n  var m = REGEX.exec(str)\n  if (!m || !isTonic && m[4]) return null\n\n  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n  p.pc = p.letter + p.acc\n  p.step = (p.letter.charCodeAt(0) + 3) % 7\n  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n  var pos = SEMITONES[p.step] + p.alt\n  p.chroma = pos < 0 ? 12 + pos : pos % 12\n  if (m[3]) { // has octave\n    p.oct = +m[3]\n    p.midi = pos + 12 * (p.oct + 1)\n    p.freq = midiToFreq(p.midi, tuning)\n  }\n  if (isTonic) p.tonicOf = m[4]\n  return p\n}\n\nvar LETTERS = 'CDEFGAB'\nfunction acc (n) { return !isNum(n) ? '' : n < 0 ? fillStr('b', -n) : fillStr('#', n) }\nfunction oct (n) { return !isNum(n) ? '' : '' + n }\n\n/**\n * Create a string from a parsed object or `step, alteration, octave` parameters\n * @param {Object} obj - the parsed data object\n * @return {String} a note string or null if not valid parameters\n * @since 1.2\n * @example\n * parser.build(parser.parse('cb2')) // => 'Cb2'\n *\n * @example\n * // it accepts (step, alteration, octave) parameters:\n * parser.build(3) // => 'F'\n * parser.build(3, -1) // => 'Fb'\n * parser.build(3, -1, 4) // => 'Fb4'\n */\nfunction build (s, a, o) {\n  if (s === null || typeof s === 'undefined') return null\n  if (s.step) return build(s.step, s.alt, s.oct)\n  if (s < 0 || s > 6) return null\n  return LETTERS.charAt(s) + acc(a) + oct(o)\n}\n\n/**\n * Get midi of a note\n *\n * @name midi\n * @function\n * @param {String|Integer} note - the note name or midi number\n * @return {Integer} the midi number of the note or null if not a valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.midi('A4') // => 69\n * parser.midi('A') // => null\n * @example\n * // midi numbers are bypassed (even as strings)\n * parser.midi(60) // => 60\n * parser.midi('60') // => 60\n */\nfunction midi (note) {\n  if ((isNum(note) || isStr(note)) && note >= 0 && note < 128) return +note\n  var p = parse(note)\n  return p && isDef(p.midi) ? p.midi : null\n}\n\n/**\n * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n *\n * @name freq\n * @function\n * @param {String} note - the note name or note midi number\n * @param {String} tuning - (Optional) the A4 frequency (440 by default)\n * @return {Float} the freq of the number if hertzs or null if not valid note\n * @example\n * var parser = require('note-parser')\n * parser.freq('A4') // => 440\n * parser.freq('A') // => null\n * @example\n * // can change tuning (440 by default)\n * parser.freq('A4', 444) // => 444\n * parser.freq('A3', 444) // => 222\n * @example\n * // it accepts midi numbers (as numbers and as strings)\n * parser.freq(69) // => 440\n * parser.freq('69', 442) // => 442\n */\nfunction freq (note, tuning) {\n  var m = midi(note)\n  return m === null ? null : midiToFreq(m, tuning)\n}\n\nvar parser = { parse: parse, build: build, regex: regex, midi: midi, freq: freq }\n// add additional functions, one for each object property\nvar FNS = ['letter', 'acc', 'pc', 'step', 'alt', 'chroma', 'oct']\nFNS.forEach(function (name) {\n  parser[name] = function (src) {\n    var p = parse(src)\n    return p && isDef(p[name]) ? p[name] : null\n  }\n})\n\nmodule.exports = parser\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/note-parser/index.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict'\nvar Voltage = require('voltage-source-node')\nvar isNum = function (n) { return typeof n === 'number' }\n\nvar NUMS = ['duration', 't1', 't2', 't3', 't4', 'l1', 'l2', 'l3']\nvar DEFAULTS = {\n  duration: Infinity, l1: 1, l2: 0.2, l3: 0.8,\n  t1: 0.01, t2: 0.1, t3: 0, t4: 0.2\n}\n\nfunction rampFn (l) {\n  return l ? 'linearRampToValueAtTime' : 'exponentialRampToValueAtTime'\n}\nfunction ramp (l, node, level, time) { node.gain[rampFn(l)](level, time) }\n\n/**\n * Create an envelope generator.\n * @param {AudioContext} ac - the audio context\n * @param {Object} options - (Optional) the envelope options\n * @return {AudioNode} the envelope generator node\n */\nfunction Contour (ac, options) {\n  var env = ac.createGain()\n  var opts = Contour.params(options, env)\n  var isL = opts.ramp === 'linear'\n\n  var tail = ac.createGain()\n  tail.connect(env)\n  var head = ac.createGain()\n  head.connect(tail)\n  var cv = Voltage(ac)\n  cv.connect(head)\n\n  env.start = function (time) {\n    time = Math.max(time || 0, ac.currentTime)\n    if (env.onstart) env.onstart(time)\n    cv.start(time)\n    head.gain.setValueAtTime(0, time)\n    head.gain.setValueAtTime(0.01, time + 0.000001)\n    ramp(isL, head, opts.l1, time + opts.t1)\n    ramp(isL, head, opts.l2, time + opts.t1 + opts.t2)\n    ramp(isL, head, opts.l3, time + opts.t1 + opts.t2 + opts.t3)\n    if (isFinite(opts.duration)) env.stop(time + opts.duration)\n  }\n\n  env.stop = function (time) {\n    time = Math.max(time || 0, ac.currentTime)\n    tail.gain.cancelScheduledValues(time)\n    tail.gain.setValueAtTime(env.gain.value, time)\n    var endsAt = time + opts.t4\n    ramp(isL, tail, 0.0001, endsAt)\n    if (env.onended) {\n      var s = Voltage(ac, 0)\n      s.connect(ac.destination)\n      s.onended = env.onended\n      s.start(ac.currentTime)\n      s.stop(endsAt)\n    }\n    return endsAt\n  }\n  return env\n}\n\nContour.params = function (options, dest) {\n  dest = dest || {}\n  options = options || {}\n  NUMS.forEach(function (name) {\n    dest[name] = isNum(options[name]) ? options[name] : DEFAULTS[name]\n  })\n  if (isNum(options.attack)) dest.t1 = options.attack\n  if (isNum(options.decay)) dest.t2 = options.decay\n  if (isNum(options.sustain)) dest.l3 = options.sustain\n  if (isNum(options.release)) dest.t4 = options.release\n  dest.ramp = options.ramp === 'exponential' ? options.ramp : 'linear'\n  return dest\n}\n\nmodule.exports = Contour\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/audio-contour/index.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict'\n\nmodule.exports = function (ac, value) {\n  value = (value || value === 0) ? value : 1\n  var buffer = ac.createBuffer(1, 2, ac.sampleRate)\n  var data = buffer.getChannelData(0)\n  data[0] = data[1] = value\n  var source = ac.createBufferSource()\n  source.buffer = buffer\n  source.loop = true\n  return source\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/voltage-source-node/index.js\n ** module id = 15\n ** module chunks = 0\n **/","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/uuid/uuid.js\n ** module id = 16\n ** module chunks = 0\n **/","\nvar rng;\n\nif (global.crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/uuid/rng-browser.js\n ** module id = 17\n ** module chunks = 0\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\nimport Tuna from 'tunajs';\n\nexport default class MoogFilter extends Component {\n  static propTypes = {\n    bufferSize: PropTypes.number,\n    children: PropTypes.node,\n    cutoff: PropTypes.number,\n    resonance: PropTypes.number,\n  };\n  static defaultProps = {\n    bufferSize: 4096,\n    cutoff: 0.065,\n    resonance: 3.5,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    const tuna = new Tuna(context.audioContext);\n\n    this.connectNode = new tuna.MoogFilter({\n      cutoff: props.cutoff,\n      resonance: props.resonance,\n      bufferSize: props.bufferSize,\n    });\n\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    for (const prop in nextProps) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop] = nextProps[prop];\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/moog-filter.js\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\nimport Tuna from 'tunajs';\n\nexport default class Overdrive extends Component {\n  static propTypes = {\n    algorithmIndex: PropTypes.number,\n    bypass: PropTypes.number,\n    children: PropTypes.node,\n    curveAmount: PropTypes.number,\n    drive: PropTypes.number,\n    outputGain: PropTypes.number,\n  };\n  static defaultProps = {\n    algorithmIndex: 0,\n    bypass: 0,\n    curveAmount: 1,\n    drive: 0.7,\n    outputGain: 0.5,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    const tuna = new Tuna(context.audioContext);\n\n    this.connectNode = new tuna.Overdrive({\n      outputGain: props.outputGain,\n      drive: props.drive,\n      curveAmount: props.curveAmount,\n      algorithmIndex: props.algorithmIndex,\n      bypass: props.bypass,\n    });\n\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    for (const prop in nextProps) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop] = nextProps[prop];\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/overdrive.js\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\nimport Tuna from 'tunajs';\n\nexport default class Phaser extends Component {\n  static propTypes = {\n    baseModulationFrequency: PropTypes.number,\n    bypass: PropTypes.number,\n    children: PropTypes.node,\n    depth: PropTypes.number,\n    feedback: PropTypes.number,\n    rate: PropTypes.number,\n    stereoPhase: PropTypes.number,\n  };\n  static defaultProps = {\n    baseModulationFrequency: 700,\n    bypass: 0,\n    depth: 0.3,\n    feedback: 0.2,\n    rate: 1.2,\n    stereoPhase: 30,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object };\n  constructor(props, context) {\n    super(props);\n\n    const tuna = new Tuna(context.audioContext);\n\n    this.connectNode = new tuna.Phaser({\n      rate: props.rate,\n      depth: props.depth,\n      feedback: props.feedback,\n      stereoPhase: props.stereoPhase,\n      baseModulationFrequency: props.baseModulationFrequency,\n      bypass: props.bypass,\n    });\n\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    for (const prop in nextProps) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop] = nextProps[prop];\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/phaser.js\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\nimport Tuna from 'tunajs';\n\nexport default class PingPong extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    delayTimeLeft: PropTypes.number,\n    delayTimeRight: PropTypes.number,\n    feedback: PropTypes.number,\n    wetLevel: PropTypes.number,\n  };\n  static defaultProps = {\n    delayTimeLeft: 150,\n    delayTimeRight: 200,\n    feedback: 0.3,\n    wetLevel: 0.5,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    const tuna = new Tuna(context.audioContext);\n\n    this.connectNode = new tuna.PingPongDelay({\n      wetLevel: props.wetLevel,\n      feedback: props.feedback,\n      delayTimeLeft: props.delayTimeLeft,\n      delayTimeRight: props.delayTimeRight,\n    });\n\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    for (const prop in nextProps) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop] = nextProps[prop];\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/ping-pong.js\n **/","/* eslint-disable no-restricted-syntax */\nimport React, { PropTypes, Component } from 'react';\nimport Tuna from 'tunajs';\n\nexport default class Reverb extends Component {\n  static propTypes = {\n    bypass: PropTypes.number,\n    children: PropTypes.node,\n    dryLevel: PropTypes.number,\n    highCut: PropTypes.number,\n    impulse: PropTypes.string,\n    level: PropTypes.number,\n    lowCut: PropTypes.number,\n    wetLevel: PropTypes.number,\n  };\n  static defaultProps = {\n    bypass: 0,\n    dryLevel: 1,\n    highCut: 22050,\n    impulse: 'reverb/room.wav',\n    level: 1,\n    lowCut: 20,\n    wetLevel: 1,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    connectNode: PropTypes.object,\n  };\n  constructor(props, context) {\n    super(props);\n\n    const tuna = new Tuna(context.audioContext);\n\n    this.connectNode = new tuna.Convolver({\n      highCut: props.highCut,\n      lowCut: props.lowCut,\n      dryLevel: props.dryLevel,\n      wetLevel: props.wetLevel,\n      level: props.level,\n      impulse: props.impulse,\n      bypass: props.bypass,\n    });\n\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    for (const prop in nextProps) {\n      if (this.connectNode[prop]) {\n        this.connectNode[prop] = nextProps[prop];\n      }\n    }\n  }\n  componentWillUnmount() {\n    this.connectNode.disconnect();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/reverb.js\n **/","import React, { PropTypes, Component } from 'react';\n\nimport uuid from 'uuid';\n\nexport default class Sequencer extends Component {\n  static propTypes = {\n    bars: PropTypes.number,\n    children: PropTypes.node,\n    resolution: PropTypes.number,\n  };\n  static defaultProps = {\n    bars: 1,\n    resolution: 16,\n  };\n  static contextTypes = {\n    getMaster: PropTypes.func,\n  };\n  static childContextTypes = {\n    bars: PropTypes.number,\n    getMaster: PropTypes.func,\n    resolution: PropTypes.number,\n  };\n  getChildContext() {\n    return {\n      ...this.context,\n      bars: this.props.bars,\n      resolution: this.props.resolution,\n    };\n  }\n  componentDidMount() {\n    this.id = uuid.v1();\n    const master = this.context.getMaster();\n    master.bars[this.id] = this.props.bars;\n  }\n  componentWillReceiveProps(nextProps) {\n    const master = this.context.getMaster();\n    master.bars[this.id] = nextProps.bars;\n  }\n  componentWillUnmount() {\n    delete this.context.getMaster().bars[this.id];\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/sequencer.js\n **/","import React, { PropTypes, Component } from 'react';\nimport uuid from 'uuid';\n\nimport { BufferLoader } from '../utils/buffer-loader';\n\nexport default class Sampler extends Component {\n  static displayName = 'Sampler';\n  static propTypes = {\n    busses: PropTypes.array,\n    children: PropTypes.node,\n    detune: PropTypes.number,\n    gain: PropTypes.number,\n    sample: PropTypes.string.isRequired,\n    steps: PropTypes.array.isRequired,\n  };\n  static defaultProps = {\n    detune: 0,\n    gain: 0.5,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    bars: PropTypes.number,\n    barInterval: PropTypes.number,\n    bufferLoaded: PropTypes.func,\n    connectNode: PropTypes.object,\n    getMaster: PropTypes.func,\n    resolution: PropTypes.number,\n    scheduler: PropTypes.object,\n    tempo: PropTypes.number,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    bars: PropTypes.number,\n    barInterval: PropTypes.number,\n    bufferLoaded: PropTypes.func,\n    connectNode: PropTypes.object,\n    getMaster: PropTypes.func,\n    resolution: PropTypes.number,\n    scheduler: PropTypes.object,\n    tempo: PropTypes.number,\n  };\n  constructor(props, context) {\n    super(props);\n\n    this.buffer = null;\n    this.bufferLoaded = this.bufferLoaded.bind(this);\n    this.getSteps = this.getSteps.bind(this);\n    this.playStep = this.playStep.bind(this);\n\n    this.connectNode = context.audioContext.createGain();\n    this.connectNode.gain.value = props.gain;\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentDidMount() {\n    this.id = uuid.v1();\n\n    const master = this.context.getMaster();\n    master.instruments[this.id] = this.getSteps;\n    master.buffers[this.id] = 1;\n\n    const bufferLoader = new BufferLoader(\n      this.context.audioContext,\n      [this.props.sample ],\n      this.bufferLoaded\n    );\n\n    bufferLoader.load();\n  }\n  componentWillReceiveProps(nextProps) {\n    this.connectNode.gain.value = nextProps.gain;\n    if (this.props.sample !== nextProps.sample) {\n      const master = this.context.getMaster();\n      delete master.buffers[this.id];\n\n      this.id = uuid.v1();\n      master.buffers[this.id] = 1;\n\n      const bufferLoader = new BufferLoader(\n        this.context.audioContext,\n        [nextProps.sample ],\n        this.bufferLoaded\n      );\n\n      bufferLoader.load();\n    }\n  }\n  componentWillUnmount() {\n    const master = this.context.getMaster();\n\n    delete master.buffers[this.id];\n    delete master.instruments[this.id];\n    this.connectNode.disconnect();\n  }\n  getSteps(playbackTime) {\n    const totalBars = this.context.getMaster().getMaxBars();\n    const loopCount = totalBars / this.context.bars;\n    for (let i = 0; i < loopCount; i++) {\n      const barOffset = ((this.context.barInterval * this.context.bars) * i) / 1000;\n      const stepInterval = this.context.barInterval / this.context.resolution;\n\n      this.props.steps.forEach((step) => {\n        const stepValue = Array.isArray(step) ? step[0] : step;\n        const time = barOffset + ((stepValue * stepInterval) / 1000);\n\n        this.context.scheduler.insert(playbackTime + time, this.playStep, {\n          time: playbackTime,\n          step,\n        });\n      });\n    }\n  }\n  playStep(e) {\n    const source = this.context.audioContext.createBufferSource();\n    source.buffer = this.buffer;\n    if (source.detune) {\n      if (Array.isArray(e.args.step)) {\n        source.detune.value = (this.props.detune + e.args.step[1]) * 100;\n      } else {\n        source.detune.value = this.props.detune;\n      }\n    }\n    source.connect(this.connectNode);\n\n    if (this.props.busses) {\n      const master = this.context.getMaster();\n      this.props.busses.forEach((bus) => {\n        if (master.busses[bus]) {\n          source.connect(master.busses[bus]);\n        }\n      });\n    }\n\n    source.start(e.args.playbackTime);\n    this.context.scheduler.nextTick(e.args.playbackTime + this.buffer.duration, () => {\n      source.disconnect();\n    });\n  }\n  bufferLoaded([buffer ]) {\n    this.buffer = buffer;\n    const master = this.context.getMaster();\n    delete master.buffers[this.id];\n    this.context.bufferLoaded();\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/sampler.js\n **/","/* eslint-disable no-console */\nexport const BufferLoader = function BufferLoader(context, urlList, callback) {\n  this.context = context;\n  this.urlList = urlList;\n  this.onload = callback;\n  this.bufferList = [];\n  this.loadCount = 0;\n};\n\nBufferLoader.prototype.loadBuffer = function loadBuffer(url, index) {\n  const request = new XMLHttpRequest();\n  request.open('GET', url, true);\n  request.responseType = 'arraybuffer';\n\n  const self = this;\n\n  request.onload = function onload() {\n    self.context.decodeAudioData(\n      request.response,\n      (buffer) => {\n        if (!buffer) {\n          console.error(`error decoding file data: ${url}`);\n          return;\n        }\n        self.bufferList[index] = buffer;\n        if (++self.loadCount === self.urlList.length) {\n          self.onload(self.bufferList);\n        }\n      },\n      (error) => {\n        console.error('decodeAudioData error', error);\n      }\n    );\n  };\n\n  request.onerror = function onError() {\n    console.error('BufferLoader: XHR error');\n  };\n\n  request.send();\n};\n\nBufferLoader.prototype.load = function load() {\n  for (let i = 0; i < this.urlList.length; ++i) {\n    this.loadBuffer(this.urlList[i], i);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/buffer-loader.js\n **/","/* eslint-disable no-loop-func, react/no-did-mount-set-state */\nimport React, { Component, PropTypes } from 'react';\nimport Scheduler from '../utils/scheduler';\n\nexport default class Song extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    playing: PropTypes.bool,\n    tempo: PropTypes.number,\n  };\n  static defaultProps = {\n    playing: false,\n    tempo: 90,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    barInterval: PropTypes.number,\n    bufferLoaded: PropTypes.func,\n    connectNode: PropTypes.object,\n    getMaster: PropTypes.func,\n    scheduler: PropTypes.object,\n    tempo: PropTypes.number,\n  };\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      buffersLoaded: false,\n    };\n\n    this.barInterval = (60000 / props.tempo) * 4;\n    this.bars = {};\n    this.buffers = {};\n    this.instruments = {};\n    this.busses = {};\n\n    this.loop = this.loop.bind(this);\n    this.bufferLoaded = this.bufferLoaded.bind(this);\n    this.getMaster = this.getMaster.bind(this);\n    this.getMaxBars = this.getMaxBars.bind(this);\n\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    this.audioContext = new AudioContext();\n\n    this.scheduler = new Scheduler({\n      context: this.audioContext,\n    });\n  }\n  getChildContext() {\n    return {\n      tempo: this.props.tempo,\n      audioContext: this.audioContext,\n      barInterval: this.barInterval,\n      bufferLoaded: this.bufferLoaded,\n      connectNode: this.audioContext.destination,\n      getMaster: this.getMaster,\n      scheduler: this.scheduler,\n    };\n  }\n  componentDidMount() {\n    if (Object.keys(this.buffers).length === 0) {\n      this.setState({\n        buffersLoaded: true,\n      });\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    this.barInterval = (60000 / nextProps.tempo) * 4;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.buffersLoaded !== this.state.buffersLoaded ||\n        prevProps.playing !== this.props.playing) {\n      if (this.state.buffersLoaded === true && this.props.playing === true) {\n        setTimeout(() => {\n          this.scheduler.start(this.loop);\n        }, 0);\n      } else {\n        this.scheduler.stop(true);\n      }\n    }\n  }\n  getMaster() {\n    return this;\n  }\n  getMaxBars() {\n    return Math.max(...Object.keys(this.bars).map((b) => this.bars[b]));\n  }\n  bufferLoaded() {\n    if (Object.keys(this.buffers).length === 0) {\n      this.setState({\n        buffersLoaded: true,\n      });\n    }\n  }\n  loop(e) {\n    const maxBars = Object.keys(this.bars).length ? this.getMaxBars() : 1;\n    Object.keys(this.instruments).forEach((id) => {\n      const callback = this.instruments[id];\n      callback(e.playbackTime);\n    });\n    this.scheduler.insert(e.playbackTime + ((this.barInterval * maxBars) / 1000), this.loop);\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/song.js\n **/","export default class Scheduler {\n  constructor(opts) {\n    this.context = opts.context;\n    this.interval = 0.025;\n    this.aheadTime = 0.0;\n    this.playbackTime = this.currentTime;\n\n    this.timerID = 0;\n    this.scheduleID = 0;\n    this.schedules = [];\n  }\n\n  start(callback, args) {\n    const loop = () => {\n      const t0 = this.context.currentTime;\n      const t1 = t0 + this.aheadTime;\n\n      this.process(t0, t1);\n    };\n\n    if (this.timerID === 0) {\n      this.timerID = setInterval(loop, this.interval * 1000);\n\n      if (callback) {\n        this.insert(this.context.currentTime, callback, args);\n        loop();\n      }\n    } else {\n      this.insert(this.context.currentTime, callback, args);\n    }\n\n    return this;\n  }\n\n  stop(reset) {\n    if (this.timerID !== 0) {\n      clearInterval(this.timerID);\n      this.timerID = 0;\n    }\n\n    if (reset) {\n      this.schedules.splice(0);\n    }\n\n    return this;\n  }\n\n  insert(time, callback, args) {\n    const id = ++this.scheduleID;\n    const event = { id, time, callback, args };\n\n    if (this.schedules.length === 0 || this.schedules[this.schedules.length - 1].time <= time) {\n      this.schedules.push(event);\n    } else {\n      for (let i = 0, imax = this.schedules.length; i < imax; i++) {\n        if (time < this.schedules[i].time) {\n          this.schedules.splice(i, 0, event);\n          break;\n        }\n      }\n    }\n\n    return id;\n  }\n\n  nextTick(time, callback, args) {\n    return this.insert(time + this.aheadTime, callback, args);\n  }\n\n  remove(scheduleID) {\n    if (typeof scheduleID === 'number') {\n      for (let i = 0, imax = this.schedules.length; i < imax; i++) {\n        if (scheduleID === this.schedules[i].id) {\n          this.schedules.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    return scheduleID;\n  }\n\n  removeAll() {\n    this.schedules.splice(0);\n  }\n\n  process(t0, t1) {\n    this.playbackTime = t0;\n\n    while (this.schedules.length && this.schedules[0].time < t1) {\n      const event = this.schedules.shift();\n      const playbackTime = event.time;\n      const args = event.args;\n\n      this.playbackTime = playbackTime;\n\n      event.callback({ playbackTime, args });\n    }\n\n    this.playbackTime = t0;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/scheduler.js\n **/","/* eslint-disable max-statements */\nimport React, { PropTypes, Component } from 'react';\nimport parser from 'note-parser';\nimport contour from 'audio-contour';\nimport uuid from 'uuid';\n\nexport default class Synth extends Component {\n  static displayName = 'Synth';\n  static propTypes = {\n    busses: PropTypes.array,\n    children: PropTypes.node,\n    envelope: PropTypes.shape({\n      attack: PropTypes.number,\n      decay: PropTypes.number,\n      sustain: PropTypes.number,\n      release: PropTypes.number,\n    }),\n    gain: PropTypes.number,\n    steps: PropTypes.array.isRequired,\n    transpose: PropTypes.number,\n    type: PropTypes.string.isRequired,\n  };\n  static defaultProps = {\n    envelope: {\n      attack: 0.01,\n      decay: 0.2,\n      sustain: 0.2,\n      release: 0.2,\n    },\n    gain: 0.5,\n    transpose: 0,\n  };\n  static contextTypes = {\n    audioContext: PropTypes.object,\n    bars: PropTypes.number,\n    barInterval: PropTypes.number,\n    connectNode: PropTypes.object,\n    getMaster: PropTypes.func,\n    resolution: PropTypes.number,\n    scheduler: PropTypes.object,\n    tempo: PropTypes.number,\n  };\n  static childContextTypes = {\n    audioContext: PropTypes.object,\n    bars: PropTypes.number,\n    barInterval: PropTypes.number,\n    connectNode: PropTypes.object,\n    getMaster: PropTypes.func,\n    resolution: PropTypes.number,\n    scheduler: PropTypes.object,\n    tempo: PropTypes.number,\n  };\n  constructor(props, context) {\n    super(props);\n\n    this.getSteps = this.getSteps.bind(this);\n    this.playStep = this.playStep.bind(this);\n\n    this.connectNode = context.audioContext.createGain();\n    this.connectNode.gain.value = props.gain;\n    this.connectNode.connect(context.connectNode);\n  }\n  getChildContext() {\n    return {\n      ...this.context,\n      connectNode: this.connectNode,\n    };\n  }\n  componentDidMount() {\n    this.id = uuid.v1();\n    const master = this.context.getMaster();\n    master.instruments[this.id] = this.getSteps;\n  }\n  componentWillReceiveProps(nextProps) {\n    this.connectNode.gain.value = nextProps.gain;\n  }\n  componentWillUnmount() {\n    const master = this.context.getMaster();\n    delete master.instruments[this.id];\n    this.connectNode.disconnect();\n  }\n  getSteps(playbackTime) {\n    const totalBars = this.context.getMaster().getMaxBars();\n    const loopCount = totalBars / this.context.bars;\n    for (let i = 0; i < loopCount; i++) {\n      const barOffset = ((this.context.barInterval * this.context.bars) * i) / 1000;\n      const stepInterval = this.context.barInterval / this.context.resolution;\n      this.props.steps.forEach((step) => {\n        const time = barOffset + ((step[0] * stepInterval) / 1000);\n\n        this.context.scheduler.insert(playbackTime + time, this.playStep, {\n          time: playbackTime,\n          step,\n        });\n      });\n    }\n  }\n  createOscillator(time, note, duration) {\n    const amplitudeGain = this.context.audioContext.createGain();\n    amplitudeGain.gain.value = 0;\n    amplitudeGain.connect(this.connectNode);\n\n    const env = contour(this.context.audioContext, {\n      attack: this.props.envelope.attack,\n      decay: this.props.envelope.decay,\n      sustain: this.props.envelope.sustain,\n      release: this.props.envelope.release,\n    });\n\n    env.connect(amplitudeGain.gain);\n\n    const osc = this.context.audioContext.createOscillator();\n    const transposed = note.slice(0, -1) +\n      (parseInt(note[note.length - 1], 0) + parseInt(this.props.transpose, 0));\n\n    osc.frequency.value = parser.freq(transposed);\n    osc.type = this.props.type;\n    osc.connect(amplitudeGain);\n\n    if (this.props.busses) {\n      const master = this.context.getMaster();\n      this.props.busses.forEach((bus) => {\n        if (master.busses[bus]) {\n          osc.connect(master.busses[bus]);\n        }\n      });\n    }\n\n    osc.start(time);\n    env.start(time);\n\n    const finish = env.stop(this.context.audioContext.currentTime + duration);\n    osc.stop(finish);\n  }\n  playStep(e) {\n    const { step, time } = e.args;\n    const notes = step[2];\n    const stepInterval = this.context.barInterval / this.context.resolution;\n    const duration = (step[1] * stepInterval) / 1000;\n\n    if (Array.isArray(notes)) {\n      notes.forEach((n) => {\n        this.createOscillator(time, n, duration);\n      });\n    } else {\n      this.createOscillator(time, notes, duration);\n    }\n  }\n  render() {\n    return <span>{this.props.children}</span>;\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/synth.js\n **/"],"sourceRoot":""}